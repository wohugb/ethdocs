{
    "docs": [
        {
            "location": "/", 
            "text": "\u4ee5\u592a\u574a\u5bb6\u56ed\u7248\u6587\u6863\n\n\n\n\n\u672c\u6587\u6863\u662f\u4ee5\u592a\u574a\u5fd7\u613f\u8005\u4e0d\u65ad\u52aa\u529b\u7684\u7ed3\u679c\u3002 \u867d\u7136\u5b83\u6ca1\u6709\u5f97\u5230\u57fa\u91d1\u4f1a\u7684\u6388\u6743\uff0c\u4f46\u6211\u4eec\u5e0c\u671b\u4f60\u4f1a\u89c9\u5f97\u5b83\u6709\u7528\u3002 \u6211\u4eec\u6b22\u8fce\u65b0\u7684\u8d21\u732e\u8005\u3002\n\n\n\u5185\u5bb9\n\n\n\n\n\u4ecb\u7ecd\n\n\n\u590d\u4ec7\u5ba2\u6237\u7aef\n\n\n\u8fde\u63a5\u5230\u5ba2\u6237\u7aef\n\n\n\u5e10\u6237\u7ba1\u7406\n\n\n\u4ee5\u592a\u5e01\n\n\n\u7f51\u7edc\n\n\n\u6316\u77ff\n\n\n\u5408\u540c\u548c\u4ea4\u6613\n\n\n\u5e38\u89c1\u95ee\u9898\n\n\n\u8bcd\u6c47\u8868\n\n\n\u5173\u4e8e\n\n\n\n\n\u6539\u5584\u6587\u4ef6\n\n\n\u8bf7\u53c2\u9605\n\u672c\u9875\n\u5e2e\u52a9\u6211\u4eec\u6539\u8fdb\u6587\u6863\u3002", 
            "title": "\u524d\u8a00"
        }, 
        {
            "location": "/#_1", 
            "text": "\u672c\u6587\u6863\u662f\u4ee5\u592a\u574a\u5fd7\u613f\u8005\u4e0d\u65ad\u52aa\u529b\u7684\u7ed3\u679c\u3002 \u867d\u7136\u5b83\u6ca1\u6709\u5f97\u5230\u57fa\u91d1\u4f1a\u7684\u6388\u6743\uff0c\u4f46\u6211\u4eec\u5e0c\u671b\u4f60\u4f1a\u89c9\u5f97\u5b83\u6709\u7528\u3002 \u6211\u4eec\u6b22\u8fce\u65b0\u7684\u8d21\u732e\u8005\u3002", 
            "title": "\u4ee5\u592a\u574a\u5bb6\u56ed\u7248\u6587\u6863"
        }, 
        {
            "location": "/#_2", 
            "text": "\u4ecb\u7ecd  \u590d\u4ec7\u5ba2\u6237\u7aef  \u8fde\u63a5\u5230\u5ba2\u6237\u7aef  \u5e10\u6237\u7ba1\u7406  \u4ee5\u592a\u5e01  \u7f51\u7edc  \u6316\u77ff  \u5408\u540c\u548c\u4ea4\u6613  \u5e38\u89c1\u95ee\u9898  \u8bcd\u6c47\u8868  \u5173\u4e8e", 
            "title": "\u5185\u5bb9"
        }, 
        {
            "location": "/#_3", 
            "text": "\u8bf7\u53c2\u9605 \u672c\u9875 \u5e2e\u52a9\u6211\u4eec\u6539\u8fdb\u6587\u6863\u3002", 
            "title": "\u6539\u5584\u6587\u4ef6"
        }, 
        {
            "location": "/introduction/what-is-ethereum/", 
            "text": "\u4ee5\u592a\u574a\n\n\n\u8bf7\u6ce8\u610f\uff0c\u672c\u7f51\u7ad9\u4e0a\u7684\u4e00\u4e9b\u4fe1\u606f\u53ef\u80fd\u4e0d\u518d\u76f8\u5173\u6216\u8fc7\u65f6\u3002\n\u60a8\u4e5f\u53ef\u4ee5\u53c2\u8003\n\u4ee5\u592a\u574awiki\n\u83b7\u53d6\u6700\u65b0\u4fe1\u606f\u3002\n\n\n\u4ec0\u4e48\u662f\u4ee5\u592a\u574a\n\n\n\u4ee5\u592a\u574a\u662f\u4e00\u4e2a\u5f00\u653e\u7684\u533a\u5757\u94fe\u5e73\u53f0\uff0c\u5141\u8bb8\u4efb\u4f55\u4eba\u5efa\u7acb\u548c\u4f7f\u7528\u5728\u533a\u5757\u94fe\u6280\u672f\u4e0a\u8fd0\u884c\u7684\u5206\u6563\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u548c\u6bd4\u7279\u5e01\u4e00\u6837\uff0c\u6ca1\u6709\u4eba\u63a7\u5236\u6216\u62e5\u6709\u4ee5\u592a\u574a - \u8fd9\u662f\u4e00\u4e2a\u7531\u4e16\u754c\u5404\u5730\u8bb8\u591a\u4eba\u5efa\u7acb\u7684\u5f00\u6e90\u9879\u76ee\u3002\n\u4f46\u662f\u4e0e\u6bd4\u7279\u5e01\u534f\u8bae\u4e0d\u540c\u7684\u662f\uff0c\u4ee5\u592a\u574a\u88ab\u8bbe\u8ba1\u6210\u5177\u6709\u9002\u5e94\u6027\u548c\u7075\u6d3b\u6027\u3002\n\u5728\u4ee5\u592a\u574a\u5e73\u53f0\u4e0a\u521b\u5efa\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\u5f88\u5bb9\u6613\uff0c \u4f7f\u7528\n\u5bb6\u56ed\u7248\n, \u4efb\u4f55\u4eba\u4f7f\u7528\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u73b0\u5728\u90fd\u662f\u5b89\u5168\u7684.\n\n\n\u4e0b\u4e00\u4ee3\u533a\u5757\u94fe\n\n\n\u533a\u5757\u94fe\u6280\u672f\u662f\u6bd4\u7279\u5e01\u7684\u6280\u672f\u57fa\u7840, \u9996\u5148\u7531\u5176\u795e\u79d8\u4f5c\u5bb6\u4e2d\u672c\u806a\u5728\u4ed6\u7684\u767d\u76ae\u4e66\u201c\u6bd4\u7279\u5e01\uff1a\u5bf9\u7b49\u7535\u5b50\u73b0\u91d1\u7cfb\u7edf\u201d\u4e2d\u63cf\u8ff0, 2008\u5e74\u51fa\u7248.\n\u539f\u59cb\u8bba\u6587\u4e2d\u5df2\u7ecf\u8ba8\u8bba\u4e86\u533a\u5757\u94fe\u7528\u4e8e\u66f4\u5e7f\u6cdb\u7684\u7528\u9014, \u76f4\u5230\u51e0\u5e74\u540e\uff0c\u533a\u5757\u94fe\u6280\u672f\u624d\u6210\u4e3a\u4e00\u4e2a\u901a\u7528\u672f\u8bed.\n\u533a\u5757\u94fe\u662f\u4e00\u79cd\u5206\u5e03\u5f0f\u8ba1\u7b97\u67b6\u6784\uff0c\u6bcf\u4e2a\u7f51\u7edc\u8282\u70b9\u90fd\u6267\u884c\u548c\u8bb0\u5f55\u76f8\u540c\u7684\u4e8b\u52a1,\u5b83\u4eec\u88ab\u5206\u7ec4\u6210\u5757.\n\u4e00\u6b21\u53ea\u80fd\u6dfb\u52a0\u4e00\u4e2a\u5757, \u6bcf\u4e2a\u5757\u90fd\u5305\u542b\u4e00\u4e2a\u6570\u5b66\u8bc1\u660e\uff0c\u5b83\u4ece\u524d\u4e00\u4e2a\u5757\u5f00\u59cb\u4f9d\u6b21\u6392\u5217.\n\u8fd9\u6837\uff0c\u533a\u5757\u94fe\u7684\u201c\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u201d\u5728\u6574\u4e2a\u7f51\u7edc\u4e0a\u4fdd\u6301\u4e00\u81f4\u3002\n\u4e2a\u4eba\u7528\u6237\u4e0e\u5206\u7c7b\u5e10\uff08\u4ea4\u6613\uff09\u7684\u4ea4\u4e92\u901a\u8fc7\u5f3a\u5927\u7684\u52a0\u5bc6\u6280\u672f\u6765\u4fdd\u8bc1\u3002\n\u7ef4\u62a4\u548c\u9a8c\u8bc1\u7f51\u7edc\u7684\u8282\u70b9\u901a\u8fc7\u7f16\u7801\u5230\u534f\u8bae\u4e2d\u7684\u6570\u5b66\u5b9e\u65bd\u7684\u7ecf\u6d4e\u6fc0\u52b1\u6765\u6fc0\u52b1\u3002\n\n\n\u5728\u6bd4\u7279\u5e01\u7684\u60c5\u51b5\u4e0b\uff0c\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u88ab\u8ba4\u4e3a\u662f\u8d26\u6237\u4f59\u989d\u8868, \u5206\u7c7b\u5e10, \u800c\u4ea4\u6613\u662f\u6bd4\u7279\u5e01\u4ee3\u5e01\u7684\u8f6c\u79fb\uff0c\u4ee5\u4fc3\u8fdb\u4e2a\u4eba\u4e4b\u95f4\u7684\u53ef\u9760\u878d\u8d44.\n\u4f46\u662f\uff0c\u6bd4\u7279\u5e01\u5f00\u59cb\u5438\u5f15\u66f4\u591a\u7684\u5f00\u53d1\u8005\u548c\u6280\u672f\u4eba\u5458\u7684\u5173\u6ce8, \u65b0\u9896\u7684\u9879\u76ee\u5f00\u59cb\u4f7f\u7528\u6bd4\u7279\u5e01\u7f51\u7edc\uff0c\u800c\u4e0d\u662f\u4f20\u9012\u4ef7\u503c\u4ee3\u5e01\u3002\n\u5176\u4e2d\u8bb8\u591a\u91c7\u53d6\u201calt\u786c\u5e01\u201d\u7684\u5f62\u5f0f - \u5355\u72ec\u7684\u533a\u5757\u94fe\u4e0e\u81ea\u5df1\u7684\u52a0\u5bc6\u8d27\u5e01\uff0c\u6539\u8fdb\u4e86\u539f\u6765\u7684\u6bd4\u7279\u5e01\u534f\u8bae\uff0c\u4ee5\u589e\u52a0\u65b0\u7684\u7279\u6027\u6216\u529f\u80fd\u3002\n\n\n\u57282013\u5e74\u672b\uff0c\u4ee5\u592a\u574a\u7684\u53d1\u660e\u5bb6Vitalik Buterin\u63d0\u51fa\uff0c\u80fd\u591f\u91cd\u65b0\u7f16\u7a0b\u4ee5\u6267\u884c\u4efb\u610f\u590d\u6742\u8ba1\u7b97\u7684\u5355\u4e2a\u533a\u5757\u94fe\u53ef\u80fd\u5305\u542b\u8bb8\u591a\u5176\u4ed6\u9879\u76ee\u3002\n\n\n2014\u5e74\uff0c \u4ee5\u592a\u574a\u521b\u59cb\u4ebaVitalik Buterin\uff0cGavin Wood\u548cJeffrey Wilcke\u5f00\u59cb\u4e86\u4e0b\u4e00\u4ee3\u533a\u5757\u94fe\u7684\u5de5\u4f5c\uff0c\u4ed6\u4eec\u7684\u76ee\u6807\u662f\u5b9e\u73b0\u4e00\u4e2a\u901a\u7528\u7684\uff0c\u5b8c\u5168\u4e0d\u53d7\u4fe1\u4efb\u7684\u667a\u80fd\u5408\u7ea6\u5e73\u53f0\u3002\n\n\n\u4ee5\u592a\u574a\u865a\u62df\u673a\n\n\n\u4ee5\u592a\u574a\u662f\u4e00\u4e2a\u53ef\u7f16\u7a0b\u7684\u533a\u5757\u94fe\u3002\n\u800c\u4e0d\u662f\u7ed9\u7528\u6237\u4e00\u5957\u9884\u5b9a\u4e49\u7684\u64cd\u4f5c\uff08\u6bd4\u5982\u6bd4\u7279\u5e01\u4ea4\u6613\uff09, \u4ee5\u592a\u574a\u5141\u8bb8\u7528\u6237\u521b\u5efa\u81ea\u5df1\u60f3\u8981\u7684\u590d\u6742\u64cd\u4f5c\u3002\n\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c \u5b83\u4f5c\u4e3a\u8bb8\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u5206\u6563\u5f0f\u533a\u5757\u94fe\u5e94\u7528\u7a0b\u5e8f\u7684\u5e73\u53f0, \u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u52a0\u5bc6\u8d27\u5e01\u3002\n\n\n\u4ee5\u592a\u574a\u5728\u72ed\u4e49\u4e0a\u662f\u6307\u4e3a\u5206\u6563\u5f0f\u5e94\u7528\u5b9a\u4e49\u5e73\u53f0\u7684\u4e00\u5957\u534f\u8bae\u3002\n\u5b83\u7684\u6838\u5fc3\u662f[\u4ee5\u592a\u574a\u865a\u62df\u673a\uff08\u201cEVM\u201d\uff09\n], \u5b83\u53ef\u4ee5\u6267\u884c\u4efb\u610f\u7b97\u6cd5\u590d\u6742\u5ea6\u7684\u4ee3\u7801\u3002\n\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u65b9\u9762\uff0c\u4ee5\u592a\u574a\u662f\u201c\u56fe\u7075\u5b8c\u6574\u201d\u7684\u3002\n\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4f7f\u7528\u4ee5JavaScript\u548cPython\u7b49\u73b0\u6709\u8bed\u8a00\u4e3a\u6a21\u578b\u7684\u53cb\u597d\u7f16\u7a0b\u8bed\u8a00\u6765\u521b\u5efa\u5728EVM\u4e0a\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\n\n\u50cf\u4efb\u4f55\u533a\u5757\u94fe\u4e00\u6837\uff0c\u4ee5\u592a\u574a\u8fd8\u5305\u62ec\u4e00\u4e2a\u70b9\u5bf9\u70b9\u7f51\u7edc\u534f\u8bae\u3002\n\u4ee5\u592a\u574a\u533a\u5757\u94fe\u6570\u636e\u5e93\u7531\u8fde\u63a5\u5230\u7f51\u7edc\u7684\u8bb8\u591a\u8282\u70b9\u7ef4\u62a4\u548c\u66f4\u65b0\u3002\n\u7f51\u7edc\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u8fd0\u884cEVM\u5e76\u6267\u884c\u76f8\u540c\u7684\u6307\u4ee4\u3002\n\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u4ee5\u592a\u574a\u6709\u65f6\u88ab\u5f62\u5bb9\u4e3a\u201c\u4e16\u754c\u7535\u8111\u201d\u3002\n\n\n\u6574\u4e2a\u4ee5\u592a\u574a\u7f51\u7edc\u7684\u8ba1\u7b97\u5927\u89c4\u6a21\u5e76\u884c\u5316\u5e76\u6ca1\u6709\u4f7f\u8ba1\u7b97\u66f4\u6709\u6548\u7387\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4f7f\u4ee5\u592a\u574a\u7684\u8ba1\u7b97\u8fdc\u6bd4\u4f20\u7edf\u7684\u201c\u8ba1\u7b97\u673a\u201d\u6162\u5f97\u591a\uff0c\u4e5f\u66f4\u6602\u8d35\u3002\n\u76f8\u53cd\uff0c\u6bcf\u4e2a\u4ee5\u592a\u574a\u8282\u70b9\u90fd\u8fd0\u884cEVM\uff0c\u4ee5\u4fbf\u5728\u6574\u4e2a\u533a\u5757\u94fe\u4e2d\u4fdd\u6301\u4e00\u81f4\u3002\n\u5206\u6563\u7684\u5171\u8bc6\u4f7f\u5f97\u4ee5\u592a\u574a\u7684\u5bb9\u9519\u80fd\u529b\u8fbe\u5230\u6781\u81f4\uff0c\u4fdd\u8bc1\u4e86\u96f6\u505c\u673a\u65f6\u95f4\uff0c\u5e76\u4f7f\u5b58\u50a8\u5728\u533a\u5757\u94fe\u4e2d\u7684\u6570\u636e\u6c38\u8fdc\u4e0d\u53d8\uff0c\u5e76\u4fdd\u6301\u5ba1\u67e5\u3002\n\n\n\u4ee5\u592a\u574a\u5e73\u53f0\u672c\u8eab\u662f\u6ca1\u6709\u7279\u8272\u7684\uff0c\u6216\u8005\u662f\u4ef7\u503c\u4e0d\u53ef\u77e5\u7684\u3002\n\u4e0e\u7f16\u7a0b\u8bed\u8a00\u7c7b\u4f3c\uff0c\u4f01\u4e1a\u5bb6\u548c\u5f00\u53d1\u4eba\u5458\u51b3\u5b9a\u5e94\u8be5\u5982\u4f55\u4f7f\u7528\u5b83\u3002\n\u4f46\u662f\uff0c\u5f88\u663e\u7136\u67d0\u4e9b\u5e94\u7528\u7a0b\u5e8f\u7c7b\u578b\u6bd4\u4ee5\u592a\u574a\u7684\u529f\u80fd\u66f4\u6709\u76ca\u4e8e\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u3002\n\u5177\u4f53\u800c\u8a00\uff0c\u4ee5\u592a\u574a\u9002\u7528\u4e8e\u81ea\u52a8\u5316\u5bf9\u7b49\u4e4b\u95f4\u7684\u76f4\u63a5\u4ea4\u4e92\u6216\u4fc3\u8fdb\u6574\u4e2a\u7f51\u7edc\u4e2d\u534f\u8c03\u7684\u7fa4\u7ec4\u64cd\u4f5c\u7684\u5e94\u7528\u3002\n\u4f8b\u5982\uff0c\u534f\u8c03\u5bf9\u7b49\u5e02\u573a\u7684\u5e94\u7528\u7a0b\u5e8f\u6216\u590d\u6742\u91d1\u878d\u5408\u7ea6\u7684\u81ea\u52a8\u5316\u3002\n\u6bd4\u7279\u5e01\u5141\u8bb8\u4e2a\u4eba\u4ea4\u6362\u73b0\u91d1\uff0c\u800c\u4e0d\u6d89\u53ca\u91d1\u878d\u673a\u6784\uff0c\u94f6\u884c\u6216\u653f\u5e9c\u7b49\u4e2d\u95f4\u5546\u3002\n\u4ee5\u592a\u574a\u7684\u5f71\u54cd\u53ef\u80fd\u66f4\u4e3a\u6df1\u8fdc\u3002\n\u7406\u8bba\u4e0a\u8bb2\uff0c\u4f7f\u7528\u4ee5\u592a\u574a\u4e0a\u8fd0\u884c\u7684\u4ee3\u7801\u53ef\u4ee5\u81ea\u52a8\uff0c\u53ef\u9760\u5730\u8fdb\u884c\u8d22\u52a1\u4ea4\u4e92\u6216\u4efb\u4f55\u590d\u6742\u7684\u4ea4\u6362\u3002\n\u9664\u4e86\u8d22\u52a1\u5e94\u7528\u4e4b\u5916\uff0c\u4efb\u4f55\u4fe1\u4efb\uff0c\u5b89\u5168\u548c\u6c38\u4e45\u6027\u90fd\u5f88\u91cd\u8981\u7684\u73af\u5883\uff0c\u4f8b\u5982\u8d44\u4ea7\u767b\u8bb0\uff0c\u6295\u7968\uff0c\u6cbb\u7406\u548c\u7269\u8054\u7f51\u7b49\uff0c\u90fd\u53ef\u80fd\u53d7\u5230\u4ee5\u592a\u574a\u5e73\u53f0\u7684\u5de8\u5927\u5f71\u54cd\u3002\n\n\n\u4ee5\u592a\u574a\u5982\u4f55\u5de5\u4f5c\uff1f\n\n\n\u4ee5\u592a\u574a\u7ed3\u5408\u4e86\u6bd4\u7279\u5e01\u7528\u6237\u6240\u719f\u6089\u7684\u8bb8\u591a\u7279\u6027\u548c\u6280\u672f\uff0c\u540c\u65f6\u4e5f\u5f15\u5165\u4e86\u8bb8\u591a\u81ea\u5df1\u7684\u4fee\u6539\u548c\u521b\u65b0\u3002\n\n\n\u800c\u6bd4\u7279\u5e01\u533a\u5757\u94fe\u7eaf\u7cb9\u662f\u4e00\u4e2a\u4ea4\u6613\u6e05\u5355\uff0c[\u4ee5\u592a\u574a\u7684\u57fa\u672c\u5355\u4f4d\u662f\u8d26\u6237\n].\n\u4ee5\u592a\u574a\u533a\u5757\u94fe\u8ddf\u8e2a\u6bcf\u4e2a\u8d26\u6237\u7684\u72b6\u6001\uff0c\u4ee5\u592a\u574a\u533a\u5757\u94fe\u4e0a\u7684\u6240\u6709\u72b6\u6001\u8f6c\u6362\u90fd\u662f\u8d26\u6237\u4e4b\u95f4\u7684\u4ef7\u503c\u548c\u4fe1\u606f\u8f6c\u79fb\u3002\n\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u5e10\u6237\uff1a\n\n\n\n\n\u5916\u90e8\u62e5\u6709\u7684\u5e10\u6237\uff08EOAs\uff09\uff0c\u7531\u79c1\u94a5\u63a7\u5236\n\n\n\u5408\u7ea6\u8d26\u6237\u7531\u5408\u7ea6\u4ee3\u7801\u63a7\u5236\uff0c\u53ea\u80fd\u7531EOa\u201c\u6fc0\u6d3b\u201d\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u7528\u6237\u6765\u8bf4\uff0c\u8fd9\u4e24\u8005\u4e4b\u95f4\u7684\u57fa\u672c\u533a\u522b\u5728\u4e8e\uff0c\u4eba\u7c7b\u7528\u6237\u63a7\u5236EOAs\uff0c\u56e0\u4e3a\u4ed6\u4eec\u53ef\u4ee5\u63a7\u5236\u5bf9EOA\u8fdb\u884c\u63a7\u5236\u7684\u79c1\u94a5\u3002\n\n\n\n\n\u5408\u7ea6\u8d26\u6237\u5219\u7531\u5176\u5185\u90e8\u4ee3\u7801\u8fdb\u884c\u7ba1\u7406\u3002\n\u5982\u679c\u5b83\u4eec\u662f\u7531\u7528\u6237\u201c\u63a7\u5236\u201d\u7684\uff0c\u90a3\u662f\u56e0\u4e3a\u5b83\u4eec\u88ab\u7f16\u7a0b\u4e3a\u7531\u5177\u6709\u7279\u5b9a\u5730\u5740\u7684EOA\u6765\u63a7\u5236\uff0c\u800cEOA\u53c8\u7531\u6301\u6709\u63a7\u5236\u8be5EOA\u7684\u79c1\u94a5\u7684\u4eba\u6765\u63a7\u5236\u3002\n\n\n\u6d41\u884c\u672f\u8bed\u201c\u667a\u80fd\u5408\u7ea6\u201d\u662f\u6307\u5408\u7ea6\u8d26\u6237\u4e2d\u7684\u4ee3\u7801 - \u5f53\u4ea4\u6613\u88ab\u53d1\u9001\u5230\u8be5\u8d26\u6237\u65f6\u6267\u884c\u7684\u7a0b\u5e8f\u3002\n\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5c06\u4ee3\u7801\u90e8\u7f72\u5230\u533a\u5757\u94fe\u6765\u521b\u5efa\u65b0\u7684\u5408\u7ea6\u3002\n\n\n\u5408\u7ea6\u8d26\u6237\u53ea\u80fd\u5728EOA\u6307\u793a\u7684\u60c5\u51b5\u4e0b\u6267\u884c\u64cd\u4f5c\u3002\n\u6240\u4ee5\u5408\u7ea6\u8d26\u6237\u4e0d\u53ef\u80fd\u6267\u884c\u50cf\u968f\u673a\u6570\u5b57\u751f\u6210\u6216API\u8c03\u7528\u8fd9\u6837\u7684\u672c\u5730\u64cd\u4f5c - \u53ea\u6709\u5728EOA\u63d0\u793a\u7684\u60c5\u51b5\u4e0b\uff0c\u624d\u80fd\u6267\u884c\u8fd9\u4e9b\u64cd\u4f5c\u3002\n\u8fd9\u662f\u56e0\u4e3a\u4ee5\u592a\u574a\u8981\u6c42\u8282\u70b9\u80fd\u591f\u5c31\u8ba1\u7b97\u7ed3\u679c\u8fbe\u6210\u4e00\u81f4\uff0c\u8fd9\u5c31\u8981\u6c42\u4e25\u683c\u786e\u5b9a\u6267\u884c\u7684\u4fdd\u8bc1\u3002\n\n\n\u50cf\u6bd4\u7279\u5e01\u4e00\u6837\uff0c\u7528\u6237\u5fc5\u987b\u5411\u7f51\u7edc\u652f\u4ed8\u5c0f\u989d\u4ea4\u6613\u8d39\u7528\u3002\n\u8fd9\u53ef\u4ee5\u4fdd\u62a4\u4ee5\u592a\u574a\u533a\u5757\u94fe\u514d\u53d7\u8f7b\u5fae\u6216\u6076\u610f\u7684\u8ba1\u7b97\u4efb\u52a1\uff0c\u5982DDoS\u653b\u51fb\u6216\u65e0\u9650\u5faa\u73af\u3002\n\u4ea4\u6613\u7684\u53d1\u9001\u8005\u5fc5\u987b\u652f\u4ed8\u4ed6\u4eec\u6fc0\u6d3b\u7684\u201c\u7a0b\u5e8f\u201d\u7684\u6bcf\u4e00\u6b65\uff0c\u5305\u62ec\u8ba1\u7b97\u548c\u5185\u5b58\u5b58\u50a8\u3002\n\u8fd9\u4e9b\u8d39\u7528\u662f\u4ee5\u4ee5\u592a\u574a\u7684\u672c\u5730\u4ef7\u503c\uff0c\u4ee5\u592a\u5e01\u6765\u652f\u4ed8\u7684\u3002\n\n\n\u8fd9\u4e9b\u4ea4\u6613\u8d39\u7528\u7531\u9a8c\u8bc1\u7f51\u7edc\u7684\u8282\u70b9\u6536\u96c6\u3002\n\u8fd9\u4e9b\u201c\u77ff\u5de5\u201d\u662f\u4ee5\u592a\u574a\u7f51\u7edc\u4e2d\u63a5\u6536\uff0c\u4f20\u64ad\uff0c\u9a8c\u8bc1\u548c\u6267\u884c\u4ea4\u6613\u7684\u8282\u70b9\u3002\n\u7136\u540e\uff0c\u77ff\u5de5\u5c06\u8fd9\u4e9b\u4ea4\u6613\uff08\u5305\u62ec\u4ee5\u592a\u574a\u533a\u5757\u94fe\u4e2d\u8d26\u6237\u201c\u72b6\u6001\u201d\u7684\u8bb8\u591a\u66f4\u65b0\uff09\u5206\u7ec4\u5230\u6240\u8c13\u7684\u201c\u5757\u201d\u4e2d\uff0c\n\u77ff\u5de5\u6bcf\u83b7\u5f97\u4e00\u4e2a\u6210\u529f\u7684\u77ff\u5757\u90fd\u4f1a\u5f97\u5230\u4e59\u919a\u5956\u52b1\u3002\n\u8fd9\u4e3a\u4eba\u4eec\u5c06\u786c\u4ef6\u548c\u7535\u529b\u5949\u732e\u7ed9\u4ee5\u592a\u574a\u7f51\u7edc\u63d0\u4f9b\u4e86\u7ecf\u6d4e\u6fc0\u52b1\u3002\n\n\n\u5c31\u50cf\u6bd4\u7279\u5e01\u7f51\u7edc\u4e00\u6837\uff0c\u77ff\u5de5\u7684\u4efb\u52a1\u662f\u89e3\u51b3\u4e00\u4e2a\u590d\u6742\u7684\u6570\u5b66\u95ee\u9898\uff0c\u4ee5\u4fbf\u6210\u529f\u5730\u201c\u6316\u6398\u201d\u4e00\u4e2a\u5757\u3002\n\u8fd9\u88ab\u79f0\u4e3a\u201c\u5de5\u4f5c\u8bc1\u660e\u201d\u3002\n\u4efb\u4f55\u8ba1\u7b97\u95ee\u9898\u9700\u8981\u6570\u91cf\u7ea7\u7684\u66f4\u591a\u7684\u8d44\u6e90\u6765\u89e3\u51b3\u7b97\u6cd5\uff0c\u6bd4\u9a8c\u8bc1\u89e3\u51b3\u65b9\u6848\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5019\u9009\u4eba\u7684\u5de5\u4f5c\u8bc1\u660e\u3002\n\u4e3a\u4e86\u963b\u6b62\u7531\u4e8e\u4f7f\u7528\u4e13\u7528\u786c\u4ef6\uff08\u4f8b\u5982[ASIC]\uff08\nhttps://en.bitcoin.it/wiki/ASIC\n\uff09\uff09\u800c\u5bfc\u81f4\u7684\u96c6\u4e2d\u5316\uff0c\u5c31\u50cf\u5728\u6bd4\u7279\u5e01\u7f51\u7edc\u4e2d\u53d1\u751f\u7684\u90a3\u6837\uff0c\u4ee5\u592a\u574a\u9009\u62e9\u4e86\u4e00\u79cd\u57fa\u4e8e\u5185\u5b58\u7684\uff0c,\u96be\u4ee5\u8ba1\u7b97\u7684\u95ee\u9898\u3002\n\u5982\u679c\u95ee\u9898\u9700\u8981\u5185\u5b58\u4ee5\u53caCPU\uff0c\u90a3\u4e48\u7406\u60f3\u7684\u786c\u4ef6\u5b9e\u9645\u4e0a\u5c31\u662f\u901a\u7528\u8ba1\u7b97\u673a\u3002\n\u8fd9\u4f7f\u5f97\u4ee5\u592a\u574a\u7684\u5de5\u4f5c\u8bc1\u660eASIC\u5177\u6709\u62b5\u6297\u6027\uff0c\u4ece\u800c\u4f7f\u5206\u5e03\u5f0f\u5b89\u5168\u6027\u6bd4\u533a\u5757\u94fe\u66f4\u4e3a\u5206\u6563\uff0c\u800c\u533a\u5757\u94fe\u7684\u6316\u6398\u7531\u50cf\u6bd4\u7279\u5e01\u8fd9\u6837\u7684\u4e13\u4e1a\u786c\u4ef6\u6765\u63a7\u5236\u3002\n\n\n\u4e86\u89e3\u4ee5\u592a\u574a\n\n\n[\u5f85\u6269\u5c55]\n\n\n\u6709\u4e00\u4e9b\u60b2\u4f24\u7684\u516c\u5173\u89c6\u9891\uff1a\n\n\n\n\n\u4ee5\u592a\u574a\uff1a\u4e16\u754c\u7535\u8111\n\n\n\u4ee5\u592a\u574a - \u8f6e\u5230\u4f60\u4e86\n\n\n\n\n\u533a\u5757\u94fe\u548c\u4ee5\u592a\u574a101\n\n\n\n\n\u89e3\u91ca\u50cf\u6211\u8fd9\u6837\u7684\u6bd4\u7279\u5e01\n - \u4e00\u4e2a\u5f88\u597d\u7684\u4ecb\u7ecd\u533a\u5757\u94fe\u6280\u672f\u548c\u6bd4\u7279\u5e01\u7684\u8f7b\u5ea6tech savvy\u975e\u4e13\u4e1a\u4eba\u5458\u3002\n\n\n\u4e00\u4e2a\u7b80\u5355\u7684\u4ee5\u592a\u574a\u89c6\u56fe\n\n\n\u89e3\u91caethereum\n\n\nstackexchange\u4e0a\u5411\u975e\u6280\u672f\u4eba\u5458\u89e3\u91ca\u4ee5\u592a\u574a\u95ee\u9898\n\n\nELI5\u4ee5\u592a\u574a\u7684Reddit\u7ebf\u7a0b:\n\n\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\n16\n\n\n17\n\n\n18\n\n\n19\n\n\n\u5f71\u7247\n\n\n\n\n\u4ee5\u535a\u58eb\u6728\u6750\u4e3a\u7279\u8272\u7684\u4e16\u754c\u8ba1\u7b97\u673a\u4ee5\u592a\u574a\n\n\n\n\n\u4fe1\u606f\u56fe\u8868\n\n\n\n\n\n\n\n\n\u6bd4\u8f83\u4ea4\u66ff\n\n\n\n\nNXT\n\n\n\u5973\u4ec6\u5b89\u5168", 
            "title": "\u4ec0\u4e48\u662f\u4ee5\u592a\u574a\uff1f"
        }, 
        {
            "location": "/introduction/what-is-ethereum/#_1", 
            "text": "\u8bf7\u6ce8\u610f\uff0c\u672c\u7f51\u7ad9\u4e0a\u7684\u4e00\u4e9b\u4fe1\u606f\u53ef\u80fd\u4e0d\u518d\u76f8\u5173\u6216\u8fc7\u65f6\u3002\n\u60a8\u4e5f\u53ef\u4ee5\u53c2\u8003 \u4ee5\u592a\u574awiki \u83b7\u53d6\u6700\u65b0\u4fe1\u606f\u3002", 
            "title": "\u4ee5\u592a\u574a"
        }, 
        {
            "location": "/introduction/what-is-ethereum/#_2", 
            "text": "\u4ee5\u592a\u574a\u662f\u4e00\u4e2a\u5f00\u653e\u7684\u533a\u5757\u94fe\u5e73\u53f0\uff0c\u5141\u8bb8\u4efb\u4f55\u4eba\u5efa\u7acb\u548c\u4f7f\u7528\u5728\u533a\u5757\u94fe\u6280\u672f\u4e0a\u8fd0\u884c\u7684\u5206\u6563\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u548c\u6bd4\u7279\u5e01\u4e00\u6837\uff0c\u6ca1\u6709\u4eba\u63a7\u5236\u6216\u62e5\u6709\u4ee5\u592a\u574a - \u8fd9\u662f\u4e00\u4e2a\u7531\u4e16\u754c\u5404\u5730\u8bb8\u591a\u4eba\u5efa\u7acb\u7684\u5f00\u6e90\u9879\u76ee\u3002\n\u4f46\u662f\u4e0e\u6bd4\u7279\u5e01\u534f\u8bae\u4e0d\u540c\u7684\u662f\uff0c\u4ee5\u592a\u574a\u88ab\u8bbe\u8ba1\u6210\u5177\u6709\u9002\u5e94\u6027\u548c\u7075\u6d3b\u6027\u3002\n\u5728\u4ee5\u592a\u574a\u5e73\u53f0\u4e0a\u521b\u5efa\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\u5f88\u5bb9\u6613\uff0c \u4f7f\u7528 \u5bb6\u56ed\u7248 , \u4efb\u4f55\u4eba\u4f7f\u7528\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u73b0\u5728\u90fd\u662f\u5b89\u5168\u7684.", 
            "title": "\u4ec0\u4e48\u662f\u4ee5\u592a\u574a"
        }, 
        {
            "location": "/introduction/what-is-ethereum/#_3", 
            "text": "\u533a\u5757\u94fe\u6280\u672f\u662f\u6bd4\u7279\u5e01\u7684\u6280\u672f\u57fa\u7840, \u9996\u5148\u7531\u5176\u795e\u79d8\u4f5c\u5bb6\u4e2d\u672c\u806a\u5728\u4ed6\u7684\u767d\u76ae\u4e66\u201c\u6bd4\u7279\u5e01\uff1a\u5bf9\u7b49\u7535\u5b50\u73b0\u91d1\u7cfb\u7edf\u201d\u4e2d\u63cf\u8ff0, 2008\u5e74\u51fa\u7248.\n\u539f\u59cb\u8bba\u6587\u4e2d\u5df2\u7ecf\u8ba8\u8bba\u4e86\u533a\u5757\u94fe\u7528\u4e8e\u66f4\u5e7f\u6cdb\u7684\u7528\u9014, \u76f4\u5230\u51e0\u5e74\u540e\uff0c\u533a\u5757\u94fe\u6280\u672f\u624d\u6210\u4e3a\u4e00\u4e2a\u901a\u7528\u672f\u8bed.\n\u533a\u5757\u94fe\u662f\u4e00\u79cd\u5206\u5e03\u5f0f\u8ba1\u7b97\u67b6\u6784\uff0c\u6bcf\u4e2a\u7f51\u7edc\u8282\u70b9\u90fd\u6267\u884c\u548c\u8bb0\u5f55\u76f8\u540c\u7684\u4e8b\u52a1,\u5b83\u4eec\u88ab\u5206\u7ec4\u6210\u5757.\n\u4e00\u6b21\u53ea\u80fd\u6dfb\u52a0\u4e00\u4e2a\u5757, \u6bcf\u4e2a\u5757\u90fd\u5305\u542b\u4e00\u4e2a\u6570\u5b66\u8bc1\u660e\uff0c\u5b83\u4ece\u524d\u4e00\u4e2a\u5757\u5f00\u59cb\u4f9d\u6b21\u6392\u5217.\n\u8fd9\u6837\uff0c\u533a\u5757\u94fe\u7684\u201c\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u201d\u5728\u6574\u4e2a\u7f51\u7edc\u4e0a\u4fdd\u6301\u4e00\u81f4\u3002\n\u4e2a\u4eba\u7528\u6237\u4e0e\u5206\u7c7b\u5e10\uff08\u4ea4\u6613\uff09\u7684\u4ea4\u4e92\u901a\u8fc7\u5f3a\u5927\u7684\u52a0\u5bc6\u6280\u672f\u6765\u4fdd\u8bc1\u3002\n\u7ef4\u62a4\u548c\u9a8c\u8bc1\u7f51\u7edc\u7684\u8282\u70b9\u901a\u8fc7\u7f16\u7801\u5230\u534f\u8bae\u4e2d\u7684\u6570\u5b66\u5b9e\u65bd\u7684\u7ecf\u6d4e\u6fc0\u52b1\u6765\u6fc0\u52b1\u3002  \u5728\u6bd4\u7279\u5e01\u7684\u60c5\u51b5\u4e0b\uff0c\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u88ab\u8ba4\u4e3a\u662f\u8d26\u6237\u4f59\u989d\u8868, \u5206\u7c7b\u5e10, \u800c\u4ea4\u6613\u662f\u6bd4\u7279\u5e01\u4ee3\u5e01\u7684\u8f6c\u79fb\uff0c\u4ee5\u4fc3\u8fdb\u4e2a\u4eba\u4e4b\u95f4\u7684\u53ef\u9760\u878d\u8d44.\n\u4f46\u662f\uff0c\u6bd4\u7279\u5e01\u5f00\u59cb\u5438\u5f15\u66f4\u591a\u7684\u5f00\u53d1\u8005\u548c\u6280\u672f\u4eba\u5458\u7684\u5173\u6ce8, \u65b0\u9896\u7684\u9879\u76ee\u5f00\u59cb\u4f7f\u7528\u6bd4\u7279\u5e01\u7f51\u7edc\uff0c\u800c\u4e0d\u662f\u4f20\u9012\u4ef7\u503c\u4ee3\u5e01\u3002\n\u5176\u4e2d\u8bb8\u591a\u91c7\u53d6\u201calt\u786c\u5e01\u201d\u7684\u5f62\u5f0f - \u5355\u72ec\u7684\u533a\u5757\u94fe\u4e0e\u81ea\u5df1\u7684\u52a0\u5bc6\u8d27\u5e01\uff0c\u6539\u8fdb\u4e86\u539f\u6765\u7684\u6bd4\u7279\u5e01\u534f\u8bae\uff0c\u4ee5\u589e\u52a0\u65b0\u7684\u7279\u6027\u6216\u529f\u80fd\u3002  \u57282013\u5e74\u672b\uff0c\u4ee5\u592a\u574a\u7684\u53d1\u660e\u5bb6Vitalik Buterin\u63d0\u51fa\uff0c\u80fd\u591f\u91cd\u65b0\u7f16\u7a0b\u4ee5\u6267\u884c\u4efb\u610f\u590d\u6742\u8ba1\u7b97\u7684\u5355\u4e2a\u533a\u5757\u94fe\u53ef\u80fd\u5305\u542b\u8bb8\u591a\u5176\u4ed6\u9879\u76ee\u3002  2014\u5e74\uff0c \u4ee5\u592a\u574a\u521b\u59cb\u4ebaVitalik Buterin\uff0cGavin Wood\u548cJeffrey Wilcke\u5f00\u59cb\u4e86\u4e0b\u4e00\u4ee3\u533a\u5757\u94fe\u7684\u5de5\u4f5c\uff0c\u4ed6\u4eec\u7684\u76ee\u6807\u662f\u5b9e\u73b0\u4e00\u4e2a\u901a\u7528\u7684\uff0c\u5b8c\u5168\u4e0d\u53d7\u4fe1\u4efb\u7684\u667a\u80fd\u5408\u7ea6\u5e73\u53f0\u3002", 
            "title": "\u4e0b\u4e00\u4ee3\u533a\u5757\u94fe"
        }, 
        {
            "location": "/introduction/what-is-ethereum/#_4", 
            "text": "\u4ee5\u592a\u574a\u662f\u4e00\u4e2a\u53ef\u7f16\u7a0b\u7684\u533a\u5757\u94fe\u3002\n\u800c\u4e0d\u662f\u7ed9\u7528\u6237\u4e00\u5957\u9884\u5b9a\u4e49\u7684\u64cd\u4f5c\uff08\u6bd4\u5982\u6bd4\u7279\u5e01\u4ea4\u6613\uff09, \u4ee5\u592a\u574a\u5141\u8bb8\u7528\u6237\u521b\u5efa\u81ea\u5df1\u60f3\u8981\u7684\u590d\u6742\u64cd\u4f5c\u3002\n\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c \u5b83\u4f5c\u4e3a\u8bb8\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u5206\u6563\u5f0f\u533a\u5757\u94fe\u5e94\u7528\u7a0b\u5e8f\u7684\u5e73\u53f0, \u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u52a0\u5bc6\u8d27\u5e01\u3002  \u4ee5\u592a\u574a\u5728\u72ed\u4e49\u4e0a\u662f\u6307\u4e3a\u5206\u6563\u5f0f\u5e94\u7528\u5b9a\u4e49\u5e73\u53f0\u7684\u4e00\u5957\u534f\u8bae\u3002\n\u5b83\u7684\u6838\u5fc3\u662f[\u4ee5\u592a\u574a\u865a\u62df\u673a\uff08\u201cEVM\u201d\uff09 ], \u5b83\u53ef\u4ee5\u6267\u884c\u4efb\u610f\u7b97\u6cd5\u590d\u6742\u5ea6\u7684\u4ee3\u7801\u3002\n\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u65b9\u9762\uff0c\u4ee5\u592a\u574a\u662f\u201c\u56fe\u7075\u5b8c\u6574\u201d\u7684\u3002\n\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4f7f\u7528\u4ee5JavaScript\u548cPython\u7b49\u73b0\u6709\u8bed\u8a00\u4e3a\u6a21\u578b\u7684\u53cb\u597d\u7f16\u7a0b\u8bed\u8a00\u6765\u521b\u5efa\u5728EVM\u4e0a\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u3002  \u50cf\u4efb\u4f55\u533a\u5757\u94fe\u4e00\u6837\uff0c\u4ee5\u592a\u574a\u8fd8\u5305\u62ec\u4e00\u4e2a\u70b9\u5bf9\u70b9\u7f51\u7edc\u534f\u8bae\u3002\n\u4ee5\u592a\u574a\u533a\u5757\u94fe\u6570\u636e\u5e93\u7531\u8fde\u63a5\u5230\u7f51\u7edc\u7684\u8bb8\u591a\u8282\u70b9\u7ef4\u62a4\u548c\u66f4\u65b0\u3002\n\u7f51\u7edc\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u8fd0\u884cEVM\u5e76\u6267\u884c\u76f8\u540c\u7684\u6307\u4ee4\u3002\n\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u4ee5\u592a\u574a\u6709\u65f6\u88ab\u5f62\u5bb9\u4e3a\u201c\u4e16\u754c\u7535\u8111\u201d\u3002  \u6574\u4e2a\u4ee5\u592a\u574a\u7f51\u7edc\u7684\u8ba1\u7b97\u5927\u89c4\u6a21\u5e76\u884c\u5316\u5e76\u6ca1\u6709\u4f7f\u8ba1\u7b97\u66f4\u6709\u6548\u7387\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4f7f\u4ee5\u592a\u574a\u7684\u8ba1\u7b97\u8fdc\u6bd4\u4f20\u7edf\u7684\u201c\u8ba1\u7b97\u673a\u201d\u6162\u5f97\u591a\uff0c\u4e5f\u66f4\u6602\u8d35\u3002\n\u76f8\u53cd\uff0c\u6bcf\u4e2a\u4ee5\u592a\u574a\u8282\u70b9\u90fd\u8fd0\u884cEVM\uff0c\u4ee5\u4fbf\u5728\u6574\u4e2a\u533a\u5757\u94fe\u4e2d\u4fdd\u6301\u4e00\u81f4\u3002\n\u5206\u6563\u7684\u5171\u8bc6\u4f7f\u5f97\u4ee5\u592a\u574a\u7684\u5bb9\u9519\u80fd\u529b\u8fbe\u5230\u6781\u81f4\uff0c\u4fdd\u8bc1\u4e86\u96f6\u505c\u673a\u65f6\u95f4\uff0c\u5e76\u4f7f\u5b58\u50a8\u5728\u533a\u5757\u94fe\u4e2d\u7684\u6570\u636e\u6c38\u8fdc\u4e0d\u53d8\uff0c\u5e76\u4fdd\u6301\u5ba1\u67e5\u3002  \u4ee5\u592a\u574a\u5e73\u53f0\u672c\u8eab\u662f\u6ca1\u6709\u7279\u8272\u7684\uff0c\u6216\u8005\u662f\u4ef7\u503c\u4e0d\u53ef\u77e5\u7684\u3002\n\u4e0e\u7f16\u7a0b\u8bed\u8a00\u7c7b\u4f3c\uff0c\u4f01\u4e1a\u5bb6\u548c\u5f00\u53d1\u4eba\u5458\u51b3\u5b9a\u5e94\u8be5\u5982\u4f55\u4f7f\u7528\u5b83\u3002\n\u4f46\u662f\uff0c\u5f88\u663e\u7136\u67d0\u4e9b\u5e94\u7528\u7a0b\u5e8f\u7c7b\u578b\u6bd4\u4ee5\u592a\u574a\u7684\u529f\u80fd\u66f4\u6709\u76ca\u4e8e\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u3002\n\u5177\u4f53\u800c\u8a00\uff0c\u4ee5\u592a\u574a\u9002\u7528\u4e8e\u81ea\u52a8\u5316\u5bf9\u7b49\u4e4b\u95f4\u7684\u76f4\u63a5\u4ea4\u4e92\u6216\u4fc3\u8fdb\u6574\u4e2a\u7f51\u7edc\u4e2d\u534f\u8c03\u7684\u7fa4\u7ec4\u64cd\u4f5c\u7684\u5e94\u7528\u3002\n\u4f8b\u5982\uff0c\u534f\u8c03\u5bf9\u7b49\u5e02\u573a\u7684\u5e94\u7528\u7a0b\u5e8f\u6216\u590d\u6742\u91d1\u878d\u5408\u7ea6\u7684\u81ea\u52a8\u5316\u3002\n\u6bd4\u7279\u5e01\u5141\u8bb8\u4e2a\u4eba\u4ea4\u6362\u73b0\u91d1\uff0c\u800c\u4e0d\u6d89\u53ca\u91d1\u878d\u673a\u6784\uff0c\u94f6\u884c\u6216\u653f\u5e9c\u7b49\u4e2d\u95f4\u5546\u3002\n\u4ee5\u592a\u574a\u7684\u5f71\u54cd\u53ef\u80fd\u66f4\u4e3a\u6df1\u8fdc\u3002\n\u7406\u8bba\u4e0a\u8bb2\uff0c\u4f7f\u7528\u4ee5\u592a\u574a\u4e0a\u8fd0\u884c\u7684\u4ee3\u7801\u53ef\u4ee5\u81ea\u52a8\uff0c\u53ef\u9760\u5730\u8fdb\u884c\u8d22\u52a1\u4ea4\u4e92\u6216\u4efb\u4f55\u590d\u6742\u7684\u4ea4\u6362\u3002\n\u9664\u4e86\u8d22\u52a1\u5e94\u7528\u4e4b\u5916\uff0c\u4efb\u4f55\u4fe1\u4efb\uff0c\u5b89\u5168\u548c\u6c38\u4e45\u6027\u90fd\u5f88\u91cd\u8981\u7684\u73af\u5883\uff0c\u4f8b\u5982\u8d44\u4ea7\u767b\u8bb0\uff0c\u6295\u7968\uff0c\u6cbb\u7406\u548c\u7269\u8054\u7f51\u7b49\uff0c\u90fd\u53ef\u80fd\u53d7\u5230\u4ee5\u592a\u574a\u5e73\u53f0\u7684\u5de8\u5927\u5f71\u54cd\u3002", 
            "title": "\u4ee5\u592a\u574a\u865a\u62df\u673a"
        }, 
        {
            "location": "/introduction/what-is-ethereum/#_5", 
            "text": "\u4ee5\u592a\u574a\u7ed3\u5408\u4e86\u6bd4\u7279\u5e01\u7528\u6237\u6240\u719f\u6089\u7684\u8bb8\u591a\u7279\u6027\u548c\u6280\u672f\uff0c\u540c\u65f6\u4e5f\u5f15\u5165\u4e86\u8bb8\u591a\u81ea\u5df1\u7684\u4fee\u6539\u548c\u521b\u65b0\u3002  \u800c\u6bd4\u7279\u5e01\u533a\u5757\u94fe\u7eaf\u7cb9\u662f\u4e00\u4e2a\u4ea4\u6613\u6e05\u5355\uff0c[\u4ee5\u592a\u574a\u7684\u57fa\u672c\u5355\u4f4d\u662f\u8d26\u6237 ].\n\u4ee5\u592a\u574a\u533a\u5757\u94fe\u8ddf\u8e2a\u6bcf\u4e2a\u8d26\u6237\u7684\u72b6\u6001\uff0c\u4ee5\u592a\u574a\u533a\u5757\u94fe\u4e0a\u7684\u6240\u6709\u72b6\u6001\u8f6c\u6362\u90fd\u662f\u8d26\u6237\u4e4b\u95f4\u7684\u4ef7\u503c\u548c\u4fe1\u606f\u8f6c\u79fb\u3002\n\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u5e10\u6237\uff1a   \u5916\u90e8\u62e5\u6709\u7684\u5e10\u6237\uff08EOAs\uff09\uff0c\u7531\u79c1\u94a5\u63a7\u5236  \u5408\u7ea6\u8d26\u6237\u7531\u5408\u7ea6\u4ee3\u7801\u63a7\u5236\uff0c\u53ea\u80fd\u7531EOa\u201c\u6fc0\u6d3b\u201d\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u7528\u6237\u6765\u8bf4\uff0c\u8fd9\u4e24\u8005\u4e4b\u95f4\u7684\u57fa\u672c\u533a\u522b\u5728\u4e8e\uff0c\u4eba\u7c7b\u7528\u6237\u63a7\u5236EOAs\uff0c\u56e0\u4e3a\u4ed6\u4eec\u53ef\u4ee5\u63a7\u5236\u5bf9EOA\u8fdb\u884c\u63a7\u5236\u7684\u79c1\u94a5\u3002   \u5408\u7ea6\u8d26\u6237\u5219\u7531\u5176\u5185\u90e8\u4ee3\u7801\u8fdb\u884c\u7ba1\u7406\u3002\n\u5982\u679c\u5b83\u4eec\u662f\u7531\u7528\u6237\u201c\u63a7\u5236\u201d\u7684\uff0c\u90a3\u662f\u56e0\u4e3a\u5b83\u4eec\u88ab\u7f16\u7a0b\u4e3a\u7531\u5177\u6709\u7279\u5b9a\u5730\u5740\u7684EOA\u6765\u63a7\u5236\uff0c\u800cEOA\u53c8\u7531\u6301\u6709\u63a7\u5236\u8be5EOA\u7684\u79c1\u94a5\u7684\u4eba\u6765\u63a7\u5236\u3002  \u6d41\u884c\u672f\u8bed\u201c\u667a\u80fd\u5408\u7ea6\u201d\u662f\u6307\u5408\u7ea6\u8d26\u6237\u4e2d\u7684\u4ee3\u7801 - \u5f53\u4ea4\u6613\u88ab\u53d1\u9001\u5230\u8be5\u8d26\u6237\u65f6\u6267\u884c\u7684\u7a0b\u5e8f\u3002\n\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5c06\u4ee3\u7801\u90e8\u7f72\u5230\u533a\u5757\u94fe\u6765\u521b\u5efa\u65b0\u7684\u5408\u7ea6\u3002  \u5408\u7ea6\u8d26\u6237\u53ea\u80fd\u5728EOA\u6307\u793a\u7684\u60c5\u51b5\u4e0b\u6267\u884c\u64cd\u4f5c\u3002\n\u6240\u4ee5\u5408\u7ea6\u8d26\u6237\u4e0d\u53ef\u80fd\u6267\u884c\u50cf\u968f\u673a\u6570\u5b57\u751f\u6210\u6216API\u8c03\u7528\u8fd9\u6837\u7684\u672c\u5730\u64cd\u4f5c - \u53ea\u6709\u5728EOA\u63d0\u793a\u7684\u60c5\u51b5\u4e0b\uff0c\u624d\u80fd\u6267\u884c\u8fd9\u4e9b\u64cd\u4f5c\u3002\n\u8fd9\u662f\u56e0\u4e3a\u4ee5\u592a\u574a\u8981\u6c42\u8282\u70b9\u80fd\u591f\u5c31\u8ba1\u7b97\u7ed3\u679c\u8fbe\u6210\u4e00\u81f4\uff0c\u8fd9\u5c31\u8981\u6c42\u4e25\u683c\u786e\u5b9a\u6267\u884c\u7684\u4fdd\u8bc1\u3002  \u50cf\u6bd4\u7279\u5e01\u4e00\u6837\uff0c\u7528\u6237\u5fc5\u987b\u5411\u7f51\u7edc\u652f\u4ed8\u5c0f\u989d\u4ea4\u6613\u8d39\u7528\u3002\n\u8fd9\u53ef\u4ee5\u4fdd\u62a4\u4ee5\u592a\u574a\u533a\u5757\u94fe\u514d\u53d7\u8f7b\u5fae\u6216\u6076\u610f\u7684\u8ba1\u7b97\u4efb\u52a1\uff0c\u5982DDoS\u653b\u51fb\u6216\u65e0\u9650\u5faa\u73af\u3002\n\u4ea4\u6613\u7684\u53d1\u9001\u8005\u5fc5\u987b\u652f\u4ed8\u4ed6\u4eec\u6fc0\u6d3b\u7684\u201c\u7a0b\u5e8f\u201d\u7684\u6bcf\u4e00\u6b65\uff0c\u5305\u62ec\u8ba1\u7b97\u548c\u5185\u5b58\u5b58\u50a8\u3002\n\u8fd9\u4e9b\u8d39\u7528\u662f\u4ee5\u4ee5\u592a\u574a\u7684\u672c\u5730\u4ef7\u503c\uff0c\u4ee5\u592a\u5e01\u6765\u652f\u4ed8\u7684\u3002  \u8fd9\u4e9b\u4ea4\u6613\u8d39\u7528\u7531\u9a8c\u8bc1\u7f51\u7edc\u7684\u8282\u70b9\u6536\u96c6\u3002\n\u8fd9\u4e9b\u201c\u77ff\u5de5\u201d\u662f\u4ee5\u592a\u574a\u7f51\u7edc\u4e2d\u63a5\u6536\uff0c\u4f20\u64ad\uff0c\u9a8c\u8bc1\u548c\u6267\u884c\u4ea4\u6613\u7684\u8282\u70b9\u3002\n\u7136\u540e\uff0c\u77ff\u5de5\u5c06\u8fd9\u4e9b\u4ea4\u6613\uff08\u5305\u62ec\u4ee5\u592a\u574a\u533a\u5757\u94fe\u4e2d\u8d26\u6237\u201c\u72b6\u6001\u201d\u7684\u8bb8\u591a\u66f4\u65b0\uff09\u5206\u7ec4\u5230\u6240\u8c13\u7684\u201c\u5757\u201d\u4e2d\uff0c\n\u77ff\u5de5\u6bcf\u83b7\u5f97\u4e00\u4e2a\u6210\u529f\u7684\u77ff\u5757\u90fd\u4f1a\u5f97\u5230\u4e59\u919a\u5956\u52b1\u3002\n\u8fd9\u4e3a\u4eba\u4eec\u5c06\u786c\u4ef6\u548c\u7535\u529b\u5949\u732e\u7ed9\u4ee5\u592a\u574a\u7f51\u7edc\u63d0\u4f9b\u4e86\u7ecf\u6d4e\u6fc0\u52b1\u3002  \u5c31\u50cf\u6bd4\u7279\u5e01\u7f51\u7edc\u4e00\u6837\uff0c\u77ff\u5de5\u7684\u4efb\u52a1\u662f\u89e3\u51b3\u4e00\u4e2a\u590d\u6742\u7684\u6570\u5b66\u95ee\u9898\uff0c\u4ee5\u4fbf\u6210\u529f\u5730\u201c\u6316\u6398\u201d\u4e00\u4e2a\u5757\u3002\n\u8fd9\u88ab\u79f0\u4e3a\u201c\u5de5\u4f5c\u8bc1\u660e\u201d\u3002\n\u4efb\u4f55\u8ba1\u7b97\u95ee\u9898\u9700\u8981\u6570\u91cf\u7ea7\u7684\u66f4\u591a\u7684\u8d44\u6e90\u6765\u89e3\u51b3\u7b97\u6cd5\uff0c\u6bd4\u9a8c\u8bc1\u89e3\u51b3\u65b9\u6848\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5019\u9009\u4eba\u7684\u5de5\u4f5c\u8bc1\u660e\u3002\n\u4e3a\u4e86\u963b\u6b62\u7531\u4e8e\u4f7f\u7528\u4e13\u7528\u786c\u4ef6\uff08\u4f8b\u5982[ASIC]\uff08 https://en.bitcoin.it/wiki/ASIC \uff09\uff09\u800c\u5bfc\u81f4\u7684\u96c6\u4e2d\u5316\uff0c\u5c31\u50cf\u5728\u6bd4\u7279\u5e01\u7f51\u7edc\u4e2d\u53d1\u751f\u7684\u90a3\u6837\uff0c\u4ee5\u592a\u574a\u9009\u62e9\u4e86\u4e00\u79cd\u57fa\u4e8e\u5185\u5b58\u7684\uff0c,\u96be\u4ee5\u8ba1\u7b97\u7684\u95ee\u9898\u3002\n\u5982\u679c\u95ee\u9898\u9700\u8981\u5185\u5b58\u4ee5\u53caCPU\uff0c\u90a3\u4e48\u7406\u60f3\u7684\u786c\u4ef6\u5b9e\u9645\u4e0a\u5c31\u662f\u901a\u7528\u8ba1\u7b97\u673a\u3002\n\u8fd9\u4f7f\u5f97\u4ee5\u592a\u574a\u7684\u5de5\u4f5c\u8bc1\u660eASIC\u5177\u6709\u62b5\u6297\u6027\uff0c\u4ece\u800c\u4f7f\u5206\u5e03\u5f0f\u5b89\u5168\u6027\u6bd4\u533a\u5757\u94fe\u66f4\u4e3a\u5206\u6563\uff0c\u800c\u533a\u5757\u94fe\u7684\u6316\u6398\u7531\u50cf\u6bd4\u7279\u5e01\u8fd9\u6837\u7684\u4e13\u4e1a\u786c\u4ef6\u6765\u63a7\u5236\u3002", 
            "title": "\u4ee5\u592a\u574a\u5982\u4f55\u5de5\u4f5c\uff1f"
        }, 
        {
            "location": "/introduction/what-is-ethereum/#_6", 
            "text": "[\u5f85\u6269\u5c55]", 
            "title": "\u4e86\u89e3\u4ee5\u592a\u574a"
        }, 
        {
            "location": "/introduction/what-is-ethereum/#_7", 
            "text": "\u4ee5\u592a\u574a\uff1a\u4e16\u754c\u7535\u8111  \u4ee5\u592a\u574a - \u8f6e\u5230\u4f60\u4e86", 
            "title": "\u6709\u4e00\u4e9b\u60b2\u4f24\u7684\u516c\u5173\u89c6\u9891\uff1a"
        }, 
        {
            "location": "/introduction/what-is-ethereum/#101", 
            "text": "\u89e3\u91ca\u50cf\u6211\u8fd9\u6837\u7684\u6bd4\u7279\u5e01  - \u4e00\u4e2a\u5f88\u597d\u7684\u4ecb\u7ecd\u533a\u5757\u94fe\u6280\u672f\u548c\u6bd4\u7279\u5e01\u7684\u8f7b\u5ea6tech savvy\u975e\u4e13\u4e1a\u4eba\u5458\u3002  \u4e00\u4e2a\u7b80\u5355\u7684\u4ee5\u592a\u574a\u89c6\u56fe  \u89e3\u91caethereum  stackexchange\u4e0a\u5411\u975e\u6280\u672f\u4eba\u5458\u89e3\u91ca\u4ee5\u592a\u574a\u95ee\u9898  ELI5\u4ee5\u592a\u574a\u7684Reddit\u7ebf\u7a0b:   1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19", 
            "title": "\u533a\u5757\u94fe\u548c\u4ee5\u592a\u574a101"
        }, 
        {
            "location": "/introduction/what-is-ethereum/#_8", 
            "text": "\u4ee5\u535a\u58eb\u6728\u6750\u4e3a\u7279\u8272\u7684\u4e16\u754c\u8ba1\u7b97\u673a\u4ee5\u592a\u574a", 
            "title": "\u5f71\u7247"
        }, 
        {
            "location": "/introduction/what-is-ethereum/#_9", 
            "text": "", 
            "title": "\u4fe1\u606f\u56fe\u8868"
        }, 
        {
            "location": "/introduction/what-is-ethereum/#_10", 
            "text": "NXT  \u5973\u4ec6\u5b89\u5168", 
            "title": "\u6bd4\u8f83\u4ea4\u66ff"
        }, 
        {
            "location": "/introduction/how-to-use-this-guide/", 
            "text": "\u5982\u4f55\u4f7f\u7528\u672c\u6307\u5357\uff1f\n\n\n\u672c\u90e8\u5206\u4ecb\u7ecd\u4e86\u7528\u6237\u5e0c\u671b\u53c2\u52a0\u4ee5\u592a\u574a\u9879\u76ee\u7684\u57fa\u672c\u65b9\u5f0f\u3002\n\n\n\u9996\u5148\uff0c\u8981\u6210\u4e3a\u7f51\u7edc\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u4f60\u9700\u8981\u8fd0\u884c\u4e00\u4e2a\u4ee5\u592a\u574a\u5ba2\u6237\u7aef\u3002\n\n\n\u5728[sec\uff1aclients]\u90e8\u5206\u5217\u51fa\u4e86\u591a\u4e2a\u5b9e\u73b0\uff0c\u8fd9\u4e9b\u5b9e\u73b0\u4e5f\u4e3a\u60a8\u63d0\u4f9b\u6709\u5173\u5728\u5404\u79cd\u8bbe\u7f6e\u4e2d\u9009\u62e9\u54ea\u4e2a\u5ba2\u6237\u7aef\u7684\u5efa\u8bae\u3002\n\n\n[sec\uff1a\u8fde\u63a5\u5230\u7f51\u7edc]\u4e3a\u60a8\u63d0\u4f9b\u6709\u5173\u7f51\u7edc\uff0c\u8fde\u901a\u6027\u6545\u969c\u6392\u9664\u548c\u533a\u5757\u94fe\u540c\u6b65\u7684\u57fa\u672c\u4fe1\u606f\u3002\n\n\n\u9ad8\u7ea7\u7f51\u7edc\u4e3b\u9898\uff0c\u5982\u8bbe\u7f6e\u4e13\u7528\u94fe\u53ef\u5728[test-networks]\u4e2d\u627e\u5230\u3002", 
            "title": "\u5982\u4f55\u4f7f\u7528\u672c\u6307\u5357\uff1f"
        }, 
        {
            "location": "/introduction/how-to-use-this-guide/#_1", 
            "text": "\u672c\u90e8\u5206\u4ecb\u7ecd\u4e86\u7528\u6237\u5e0c\u671b\u53c2\u52a0\u4ee5\u592a\u574a\u9879\u76ee\u7684\u57fa\u672c\u65b9\u5f0f\u3002  \u9996\u5148\uff0c\u8981\u6210\u4e3a\u7f51\u7edc\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u4f60\u9700\u8981\u8fd0\u884c\u4e00\u4e2a\u4ee5\u592a\u574a\u5ba2\u6237\u7aef\u3002  \u5728[sec\uff1aclients]\u90e8\u5206\u5217\u51fa\u4e86\u591a\u4e2a\u5b9e\u73b0\uff0c\u8fd9\u4e9b\u5b9e\u73b0\u4e5f\u4e3a\u60a8\u63d0\u4f9b\u6709\u5173\u5728\u5404\u79cd\u8bbe\u7f6e\u4e2d\u9009\u62e9\u54ea\u4e2a\u5ba2\u6237\u7aef\u7684\u5efa\u8bae\u3002  [sec\uff1a\u8fde\u63a5\u5230\u7f51\u7edc]\u4e3a\u60a8\u63d0\u4f9b\u6709\u5173\u7f51\u7edc\uff0c\u8fde\u901a\u6027\u6545\u969c\u6392\u9664\u548c\u533a\u5757\u94fe\u540c\u6b65\u7684\u57fa\u672c\u4fe1\u606f\u3002  \u9ad8\u7ea7\u7f51\u7edc\u4e3b\u9898\uff0c\u5982\u8bbe\u7f6e\u4e13\u7528\u94fe\u53ef\u5728[test-networks]\u4e2d\u627e\u5230\u3002", 
            "title": "\u5982\u4f55\u4f7f\u7528\u672c\u6307\u5357\uff1f"
        }, 
        {
            "location": "/introduction/the-homestead-release/", 
            "text": "\u5bb6\u56ed\u53d1\u5e03\n\n\nHomestead\u662f\u4ee5\u592a\u574a\u5e73\u53f0\u7684\u7b2c\u4e8c\u4e2a\u4e3b\u8981\u7248\u672c\uff0c\u4e5f\u662f\u4ee5\u592a\u574a\u7684\u9996\u4e2a\u91cf\u4ea7\u7248\u672c\u3002\n\u5b83\u5305\u62ec\u51e0\u4e2a\u534f\u8bae\u66f4\u6539\u548c\u7f51\u7edc\u66f4\u6539\uff0c\u53ef\u4ee5\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u7f51\u7edc\u5347\u7ea7\u3002\n\u4ee5\u592a\u574a\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u79f0\u4e3aFrontier\u7248\u672c\uff0c\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u6d4b\u8bd5\u7248\u672c\uff0c\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u5b66\u4e60\uff0c\u5b9e\u9a8c\uff0c\u5e76\u5f00\u59cb\u6784\u5efa\u4ee5\u592a\u574a\u5206\u6563\u7684\u5e94\u7528\u7a0b\u5e8f\u548c\u5de5\u5177\u3002\n\n\n\u4ee5\u592a\u574a\u53d1\u5c55\u8def\u7ebf\u56fe\u7684\u91cc\u7a0b\u7891\n\n\n\u8bf7\u53c2\u9605\n\u8fd9\u91cc\n\u4e86\u89e3\u6700\u65b0\u4fe1\u606f\n\n\n\u5982\u679c\u60a8\u6b63\u5728\u8fd0\u884c\u8fde\u63a5\u5230\u5b9e\u65f6\u7f51\u7edc\u7684\u8282\u70b9\uff0c \u5347\u7ea7\u5230\u517c\u5bb9\u7684\u5ba2\u6237\u7aef\u5f88\u91cd\u8981\u3002\n\u8fd9\u4e9b\u5ba2\u6237\u7684\u7248\u672c\u5217\u5728[\u4ee5\u592a\u574a\u5ba2\u6237]\u4e0b\u3002\n\u5426\u5219\uff0c\u4f60\u5c06\u6700\u7ec8\u5728\u9519\u8bef\u7684\u5206\u53c9\uff0c\u5e76\u5c06\u4e0d\u518d\u4e0e\u7f51\u7edc\u7684\u5176\u4ed6\u90e8\u5206\u540c\u6b65\u3002\n\n\n\u4e00\u65e6\u4ee5\u592a\u574a\u533a\u5757\u94fe\u8fbe\u52301,150,000\u533a\u5757\uff0c\u4ee5\u592a\u574a\u7f51\u7edc\u5c06\u8fdb\u884c\u4e00\u4e2a\u5f3a\u5236\u8f6c\u6362\uff0c\u4ee5\u5b9e\u73b0\u4e00\u4e9b\u91cd\u5927\u66f4\u6539\uff0c\u5982\u4ee5\u4e0b\u90e8\u5206\u6240\u8ff0\u3002\n\n\n\u5bb6\u56ed\u786c\u53c9\u6539\u53d8\n\n\n\u4ee5\u72ed\u4e49\u5f62\u5f0f\u610f\u4e49\u4e0a\u7684\u4ee5\u592a\u574a\u662f\u4e00\u5957\u534f\u8bae\u3002\nHomestead\u5e26\u6709\u4e00\u4e9b\u540e\u5411\u4e0d\u517c\u5bb9\u7684\u534f\u8bae\u66f4\u6539\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u4e2a\u786c\u5206\u53c9\u3002\n\u5728[\u4ee5\u592a\u574a\u6539\u8fdb\u5efa\u8bae\n\u4ee5\u592a\u574a\u6539\u8fdb\u5efa\u8bae\n]\u8fc7\u7a0b\u4e2d\u6240\u505a\u7684\u8fd9\u4e9b\u6539\u53d8\u5305\u62ec\uff1a\n\n\n\n\nEIP 2:\n\n\n\u901a\u8fc7\u4ea4\u6613\u521b\u5efa\u5408\u540c\u7684\u6210\u672c\u4ece21000\u589e\u52a0\u523053000.\u4f7f\u7528CREATE\u64cd\u4f5c\u7801\u4ece\u5408\u540c\u521b\u5efa\u5408\u540c\u4e0d\u53d7\u5f71\u54cd\u3002\n\n\ns\u503c\u5927\u4e8esecp256k1n / 2\u7684\u4ea4\u6613\u7b7e\u540d\u73b0\u5728\u88ab\u8ba4\u4e3a\u662f\u65e0\u6548\u7684\n\n\n\u5982\u679c\u5408\u540c\u521b\u5efa\u6ca1\u6709\u8db3\u591f\u7684\u5929\u7136\u6c14\u6765\u652f\u4ed8\u5411\u56fd\u5bb6\u6dfb\u52a0\u5408\u540c\u4ee3\u7801\u7684\u6700\u7ec8\u5929\u7136\u6c14\u8d39\u7528\uff0c\u90a3\u4e48\u5408\u540c\u521b\u5efa\u5c31\u4f1a\u5931\u8d25\uff08\u5373\u505c\u6b62\u4f7f\u7528\uff09\uff0c\u800c\u4e0d\u662f\u7559\u4e0b\u7a7a\u7684\u5408\u540c\u3002\n\n\n\u66f4\u6539\u96be\u5ea6\u8c03\u6574\u7b97\u6cd5\n\n\nEIP 7: DELEGATECALL\n:\n    \u5728'0xf4'\u5904\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u64cd\u4f5c\u7801'DELEGATECALL'\uff0c\u5b83\u4e0e'CALLCODE'\u7c7b\u4f3c\uff0c\u9664\u4e86\u5b83\u5c06\u53d1\u9001\u8005\u548c\u503c\u4ece\u7236\u8303\u56f4\u4f20\u64ad\u5230\u5b50\u8303\u56f4\uff0c,\u521b\u5efa\u7684\u547c\u53eb\u5177\u6709\u4e0e\u539f\u59cb\u547c\u53eb\u76f8\u540c\u7684\u53d1\u9001\u8005\u548c\u503c\u3002\n    \u8fd9\u610f\u5473\u7740\u5408\u540c\u53ef\u4ee5\u5b58\u50a8\u901a\u8fc7\u4fe1\u606f\uff0c\u540c\u65f6\u9075\u5faa\u5176\u7236\u5408\u540c\u4e2d\u7684msg.sender\u548c\u201cmsg.value\u201d\u3002\n    \u4f1f\u5927\u7684\u5408\u540c\u521b\u9020\u5408\u540c\uff0c\u4f46\u4e0d\u91cd\u590d\u989d\u5916\u7684\u4fe1\u606f\uff0c\u8282\u7701\u71c3\u6c14\u3002\n    \u89c1\n\u5173\u4e8eEIP 7\u7684\u8bc4\u8bba\n\n\nEIP 8: devp2p\u5411\u524d\u517c\u5bb9\u6027\u7b26\u5408\u7a33\u5065\u6027\u539f\u5219\n\n    \u5bf9RLPx\u53d1\u73b0\u534f\u8bae\u548cRLPx TCP\u4f20\u8f93\u534f\u8bae\u7684\u66f4\u6539\uff0c\u4ee5\u786e\u4fdd\u4ee5\u592a\u574a\u7f51\u7edc\u4e0a\u4f7f\u7528\u7684\u6240\u6709\u5ba2\u6237\u7aef\u8f6f\u4ef6\u90fd\u80fd\u5e94\u4ed8\n    \u5bf9\u4e8e\u8f83\u65e7\u7248\u672c\u7684\u4ee5\u592a\u574a\u5ba2\u6237\u7aef\uff0c\u65e7\u7248\u5ba2\u6237\u7aef\u4e0d\u4f1a\u63a5\u53d7\u5bf9\u7f51\u7edc\u534f\u8bae\u7684\u66f4\u65b0\uff0c\u5e76\u4f1a\u62d2\u7edd\u901a\u4fe1\n    \u6b64\u66f4\u65b0\u610f\u5473\u7740\u6240\u6709\u672a\u6765\u7248\u672c\u7684\u5ba2\u6237\u7aef\u5c06\u63a5\u53d7\u4f20\u5165\u7684\u7f51\u7edc\u5347\u7ea7\u548c\u63e1\u624b\u3002\n\n\n\n\n\u8fd9\u4e9b\u66f4\u6539\u5177\u6709\u4ee5\u4e0b\u597d\u5904\uff1a\n\n\n\n\nEIP-2/1\u6d88\u9664\u4e86\u901a\u8fc7\u4ea4\u6613\u521b\u9020\u5408\u540c\u7684\u989d\u5916\u52a8\u673a\uff0c\u6210\u672c\u662f21000\uff0c\u800c\u4e0d\u662f\u5408\u540c\uff0c\u6210\u672c\u662f32000\u3002\n\n\nEIP-2/1\u8fd8\u4fee\u6b63\u4e86\u534f\u8bae\u201cbug\u201d\uff0c\u5728\u81ea\u6740\u9000\u6b3e\u7684\u5e2e\u52a9\u4e0b\uff0c\u76ee\u524d\u53ea\u80fd\u4f7f\u752811664\n\n\nEIP-2/2\u4fee\u590d\u4e86\u4ea4\u6613\u5ef6\u5c55\u6027\u95ee\u9898\uff08\u4e0d\u662f\u5b89\u5168\u6f0f\u6d1e\uff0c\u800c\u662fUI\u4e0d\u4fbf\uff09\u3002\n\n\nEIP-2/3\u5728\u5408\u540c\u521b\u5efa\u8fc7\u7a0b\u7684\u7ed3\u679c\u4e2d\u521b\u9020\u4e86\u4e00\u4e2a\u66f4\u4e3a\u76f4\u89c2\u7684\u200b\u200b\u201c\u6210\u529f\u6216\u5931\u8d25\u201d\u533a\u5206\uff0c\u800c\u4e0d\u662f\u5f53\u524d\u7684\u201c\u6210\u529f\uff0c\u5931\u8d25\u6216\u7a7a\u7684\u5408\u540c\u201d\u4e09\u4e09\u5f8b\n\n\nEIP-2/4\u6d88\u9664\u4e86\u5c06\u65f6\u95f4\u6233\u5dee\u5f02\u8bbe\u7f6e\u4e3a1\u7684\u8fc7\u591a\u52a8\u673a\uff0c\u4ee5\u4fbf\u521b\u5efa\u5177\u6709\u7a0d\u9ad8\u96be\u5ea6\u7684\u5757\uff0c\u5e76\u56e0\u6b64\u4fdd\u8bc1\u51fb\u8d25\u4efb\u4f55\u53ef\u80fd\u7684\u5206\u53c9\u3002,\u8fd9\u4fdd\u8bc1\u4e86\u963b\u585e\u65f6\u95f4\u572810-20\u7684\u8303\u56f4\u5185\uff0c\u6839\u636e\u6a21\u62df\u6062\u590d\u76ee\u680715\u79d2\u7684\u963b\u585e\u65f6\u95f4\uff08\u800c\u4e0d\u662f\u5f53\u524d\u6709\u6548\u768417\u79d2\uff09\u3002\n\n\nEIP-7\u4f7f\u5f97\u5408\u540c\u66f4\u5bb9\u6613\u5c06\u53e6\u4e00\u4e2a\u5730\u5740\u5b58\u50a8\u4e3a\u4e00\u4e2a\u53ef\u53d8\u7684\u4ee3\u7801\u6e90\u5e76\u201c\u901a\u8fc7\u201d\u8c03\u7528\uff0c\u56e0\u4e3a\u5b50\u4ee3\u7801\u5c06\u5728\u57fa\u672c\u76f8\u540c\u7684\u73af\u5883\u4e2d\u6267\u884c\uff08\u9664\u4e86\u51cf\u5c11\u7684\u6c14\u4f53\u548c\u589e\u52a0\u7684\u8c03\u7528\u5806\u6808,\u6df1\u5ea6\uff09\u4f5c\u4e3a\u7236\u6bcd\u3002\n\n\nEIP-8\u786e\u4fdd\u5728\u4ee5\u592a\u7f51\u4e0a\u4f7f\u7528\u7684\u6240\u6709\u5ba2\u6237\u7aef\u8f6f\u4ef6\u90fd\u80fd\u591f\u5e94\u5bf9\u672a\u6765\u7684\u7f51\u7edc\u534f\u8bae\u5347\u7ea7\u3002\n\n\n\n\n\u5176\u4ed6\u8d44\u6e90:\n\n\n\n\nReddit\u8ba8\u8bba\u5bb6\u56ed\u53d1\u5e03\n\n\n[\u4ee5\u592a\u574a\u6539\u8fdb\u5efa\u8bae]", 
            "title": "\u5bb6\u56ed\u7248"
        }, 
        {
            "location": "/introduction/the-homestead-release/#_1", 
            "text": "Homestead\u662f\u4ee5\u592a\u574a\u5e73\u53f0\u7684\u7b2c\u4e8c\u4e2a\u4e3b\u8981\u7248\u672c\uff0c\u4e5f\u662f\u4ee5\u592a\u574a\u7684\u9996\u4e2a\u91cf\u4ea7\u7248\u672c\u3002\n\u5b83\u5305\u62ec\u51e0\u4e2a\u534f\u8bae\u66f4\u6539\u548c\u7f51\u7edc\u66f4\u6539\uff0c\u53ef\u4ee5\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u7f51\u7edc\u5347\u7ea7\u3002\n\u4ee5\u592a\u574a\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u79f0\u4e3aFrontier\u7248\u672c\uff0c\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u6d4b\u8bd5\u7248\u672c\uff0c\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u5b66\u4e60\uff0c\u5b9e\u9a8c\uff0c\u5e76\u5f00\u59cb\u6784\u5efa\u4ee5\u592a\u574a\u5206\u6563\u7684\u5e94\u7528\u7a0b\u5e8f\u548c\u5de5\u5177\u3002", 
            "title": "\u5bb6\u56ed\u53d1\u5e03"
        }, 
        {
            "location": "/introduction/the-homestead-release/#_2", 
            "text": "\u8bf7\u53c2\u9605 \u8fd9\u91cc \u4e86\u89e3\u6700\u65b0\u4fe1\u606f  \u5982\u679c\u60a8\u6b63\u5728\u8fd0\u884c\u8fde\u63a5\u5230\u5b9e\u65f6\u7f51\u7edc\u7684\u8282\u70b9\uff0c \u5347\u7ea7\u5230\u517c\u5bb9\u7684\u5ba2\u6237\u7aef\u5f88\u91cd\u8981\u3002\n\u8fd9\u4e9b\u5ba2\u6237\u7684\u7248\u672c\u5217\u5728[\u4ee5\u592a\u574a\u5ba2\u6237]\u4e0b\u3002\n\u5426\u5219\uff0c\u4f60\u5c06\u6700\u7ec8\u5728\u9519\u8bef\u7684\u5206\u53c9\uff0c\u5e76\u5c06\u4e0d\u518d\u4e0e\u7f51\u7edc\u7684\u5176\u4ed6\u90e8\u5206\u540c\u6b65\u3002  \u4e00\u65e6\u4ee5\u592a\u574a\u533a\u5757\u94fe\u8fbe\u52301,150,000\u533a\u5757\uff0c\u4ee5\u592a\u574a\u7f51\u7edc\u5c06\u8fdb\u884c\u4e00\u4e2a\u5f3a\u5236\u8f6c\u6362\uff0c\u4ee5\u5b9e\u73b0\u4e00\u4e9b\u91cd\u5927\u66f4\u6539\uff0c\u5982\u4ee5\u4e0b\u90e8\u5206\u6240\u8ff0\u3002", 
            "title": "\u4ee5\u592a\u574a\u53d1\u5c55\u8def\u7ebf\u56fe\u7684\u91cc\u7a0b\u7891"
        }, 
        {
            "location": "/introduction/the-homestead-release/#_3", 
            "text": "\u4ee5\u72ed\u4e49\u5f62\u5f0f\u610f\u4e49\u4e0a\u7684\u4ee5\u592a\u574a\u662f\u4e00\u5957\u534f\u8bae\u3002\nHomestead\u5e26\u6709\u4e00\u4e9b\u540e\u5411\u4e0d\u517c\u5bb9\u7684\u534f\u8bae\u66f4\u6539\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u4e2a\u786c\u5206\u53c9\u3002\n\u5728[\u4ee5\u592a\u574a\u6539\u8fdb\u5efa\u8bae \u4ee5\u592a\u574a\u6539\u8fdb\u5efa\u8bae ]\u8fc7\u7a0b\u4e2d\u6240\u505a\u7684\u8fd9\u4e9b\u6539\u53d8\u5305\u62ec\uff1a   EIP 2:  \u901a\u8fc7\u4ea4\u6613\u521b\u5efa\u5408\u540c\u7684\u6210\u672c\u4ece21000\u589e\u52a0\u523053000.\u4f7f\u7528CREATE\u64cd\u4f5c\u7801\u4ece\u5408\u540c\u521b\u5efa\u5408\u540c\u4e0d\u53d7\u5f71\u54cd\u3002  s\u503c\u5927\u4e8esecp256k1n / 2\u7684\u4ea4\u6613\u7b7e\u540d\u73b0\u5728\u88ab\u8ba4\u4e3a\u662f\u65e0\u6548\u7684  \u5982\u679c\u5408\u540c\u521b\u5efa\u6ca1\u6709\u8db3\u591f\u7684\u5929\u7136\u6c14\u6765\u652f\u4ed8\u5411\u56fd\u5bb6\u6dfb\u52a0\u5408\u540c\u4ee3\u7801\u7684\u6700\u7ec8\u5929\u7136\u6c14\u8d39\u7528\uff0c\u90a3\u4e48\u5408\u540c\u521b\u5efa\u5c31\u4f1a\u5931\u8d25\uff08\u5373\u505c\u6b62\u4f7f\u7528\uff09\uff0c\u800c\u4e0d\u662f\u7559\u4e0b\u7a7a\u7684\u5408\u540c\u3002  \u66f4\u6539\u96be\u5ea6\u8c03\u6574\u7b97\u6cd5  EIP 7: DELEGATECALL :\n    \u5728'0xf4'\u5904\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u64cd\u4f5c\u7801'DELEGATECALL'\uff0c\u5b83\u4e0e'CALLCODE'\u7c7b\u4f3c\uff0c\u9664\u4e86\u5b83\u5c06\u53d1\u9001\u8005\u548c\u503c\u4ece\u7236\u8303\u56f4\u4f20\u64ad\u5230\u5b50\u8303\u56f4\uff0c,\u521b\u5efa\u7684\u547c\u53eb\u5177\u6709\u4e0e\u539f\u59cb\u547c\u53eb\u76f8\u540c\u7684\u53d1\u9001\u8005\u548c\u503c\u3002\n    \u8fd9\u610f\u5473\u7740\u5408\u540c\u53ef\u4ee5\u5b58\u50a8\u901a\u8fc7\u4fe1\u606f\uff0c\u540c\u65f6\u9075\u5faa\u5176\u7236\u5408\u540c\u4e2d\u7684msg.sender\u548c\u201cmsg.value\u201d\u3002\n    \u4f1f\u5927\u7684\u5408\u540c\u521b\u9020\u5408\u540c\uff0c\u4f46\u4e0d\u91cd\u590d\u989d\u5916\u7684\u4fe1\u606f\uff0c\u8282\u7701\u71c3\u6c14\u3002\n    \u89c1 \u5173\u4e8eEIP 7\u7684\u8bc4\u8bba  EIP 8: devp2p\u5411\u524d\u517c\u5bb9\u6027\u7b26\u5408\u7a33\u5065\u6027\u539f\u5219 \n    \u5bf9RLPx\u53d1\u73b0\u534f\u8bae\u548cRLPx TCP\u4f20\u8f93\u534f\u8bae\u7684\u66f4\u6539\uff0c\u4ee5\u786e\u4fdd\u4ee5\u592a\u574a\u7f51\u7edc\u4e0a\u4f7f\u7528\u7684\u6240\u6709\u5ba2\u6237\u7aef\u8f6f\u4ef6\u90fd\u80fd\u5e94\u4ed8\n    \u5bf9\u4e8e\u8f83\u65e7\u7248\u672c\u7684\u4ee5\u592a\u574a\u5ba2\u6237\u7aef\uff0c\u65e7\u7248\u5ba2\u6237\u7aef\u4e0d\u4f1a\u63a5\u53d7\u5bf9\u7f51\u7edc\u534f\u8bae\u7684\u66f4\u65b0\uff0c\u5e76\u4f1a\u62d2\u7edd\u901a\u4fe1\n    \u6b64\u66f4\u65b0\u610f\u5473\u7740\u6240\u6709\u672a\u6765\u7248\u672c\u7684\u5ba2\u6237\u7aef\u5c06\u63a5\u53d7\u4f20\u5165\u7684\u7f51\u7edc\u5347\u7ea7\u548c\u63e1\u624b\u3002   \u8fd9\u4e9b\u66f4\u6539\u5177\u6709\u4ee5\u4e0b\u597d\u5904\uff1a   EIP-2/1\u6d88\u9664\u4e86\u901a\u8fc7\u4ea4\u6613\u521b\u9020\u5408\u540c\u7684\u989d\u5916\u52a8\u673a\uff0c\u6210\u672c\u662f21000\uff0c\u800c\u4e0d\u662f\u5408\u540c\uff0c\u6210\u672c\u662f32000\u3002  EIP-2/1\u8fd8\u4fee\u6b63\u4e86\u534f\u8bae\u201cbug\u201d\uff0c\u5728\u81ea\u6740\u9000\u6b3e\u7684\u5e2e\u52a9\u4e0b\uff0c\u76ee\u524d\u53ea\u80fd\u4f7f\u752811664  EIP-2/2\u4fee\u590d\u4e86\u4ea4\u6613\u5ef6\u5c55\u6027\u95ee\u9898\uff08\u4e0d\u662f\u5b89\u5168\u6f0f\u6d1e\uff0c\u800c\u662fUI\u4e0d\u4fbf\uff09\u3002  EIP-2/3\u5728\u5408\u540c\u521b\u5efa\u8fc7\u7a0b\u7684\u7ed3\u679c\u4e2d\u521b\u9020\u4e86\u4e00\u4e2a\u66f4\u4e3a\u76f4\u89c2\u7684\u200b\u200b\u201c\u6210\u529f\u6216\u5931\u8d25\u201d\u533a\u5206\uff0c\u800c\u4e0d\u662f\u5f53\u524d\u7684\u201c\u6210\u529f\uff0c\u5931\u8d25\u6216\u7a7a\u7684\u5408\u540c\u201d\u4e09\u4e09\u5f8b  EIP-2/4\u6d88\u9664\u4e86\u5c06\u65f6\u95f4\u6233\u5dee\u5f02\u8bbe\u7f6e\u4e3a1\u7684\u8fc7\u591a\u52a8\u673a\uff0c\u4ee5\u4fbf\u521b\u5efa\u5177\u6709\u7a0d\u9ad8\u96be\u5ea6\u7684\u5757\uff0c\u5e76\u56e0\u6b64\u4fdd\u8bc1\u51fb\u8d25\u4efb\u4f55\u53ef\u80fd\u7684\u5206\u53c9\u3002,\u8fd9\u4fdd\u8bc1\u4e86\u963b\u585e\u65f6\u95f4\u572810-20\u7684\u8303\u56f4\u5185\uff0c\u6839\u636e\u6a21\u62df\u6062\u590d\u76ee\u680715\u79d2\u7684\u963b\u585e\u65f6\u95f4\uff08\u800c\u4e0d\u662f\u5f53\u524d\u6709\u6548\u768417\u79d2\uff09\u3002  EIP-7\u4f7f\u5f97\u5408\u540c\u66f4\u5bb9\u6613\u5c06\u53e6\u4e00\u4e2a\u5730\u5740\u5b58\u50a8\u4e3a\u4e00\u4e2a\u53ef\u53d8\u7684\u4ee3\u7801\u6e90\u5e76\u201c\u901a\u8fc7\u201d\u8c03\u7528\uff0c\u56e0\u4e3a\u5b50\u4ee3\u7801\u5c06\u5728\u57fa\u672c\u76f8\u540c\u7684\u73af\u5883\u4e2d\u6267\u884c\uff08\u9664\u4e86\u51cf\u5c11\u7684\u6c14\u4f53\u548c\u589e\u52a0\u7684\u8c03\u7528\u5806\u6808,\u6df1\u5ea6\uff09\u4f5c\u4e3a\u7236\u6bcd\u3002  EIP-8\u786e\u4fdd\u5728\u4ee5\u592a\u7f51\u4e0a\u4f7f\u7528\u7684\u6240\u6709\u5ba2\u6237\u7aef\u8f6f\u4ef6\u90fd\u80fd\u591f\u5e94\u5bf9\u672a\u6765\u7684\u7f51\u7edc\u534f\u8bae\u5347\u7ea7\u3002   \u5176\u4ed6\u8d44\u6e90:   Reddit\u8ba8\u8bba\u5bb6\u56ed\u53d1\u5e03  [\u4ee5\u592a\u574a\u6539\u8fdb\u5efa\u8bae]", 
            "title": "\u5bb6\u56ed\u786c\u53c9\u6539\u53d8"
        }, 
        {
            "location": "/introduction/web3/", 
            "text": "Web 3: \u5206\u6563\u5f0f\u5e94\u7528\u7a0b\u5e8f\u7684\u5e73\u53f0\n\n\n\u8bb8\u591a\u4eba\u5f00\u59cb\u76f8\u4fe1\u50cf\u4ee5\u592a\u574a\u8fd9\u6837\u7684\u5f00\u653e\uff0c\u4e0d\u53ef\u9760\u7684\u533a\u5757\u94fe\u5e73\u53f0\u975e\u5e38\u9002\u5408\u4f5c\u4e3a\u5206\u6563\uff0c\u5b89\u5168\u7684\u4e92\u8054\u7f51 - \u7f51\u7edc3.0\u7684\u5171\u4eab\u201c\u540e\u7aef\u201d\u3002\n\u4e00\u4e2a\u4e92\u8054\u7f51\uff0c\u50cfDNS\u548c\u6570\u5b57\u8eab\u4efd\u8fd9\u6837\u7684\u6838\u5fc3\u670d\u52a1\u662f\u5206\u6563\u7684\uff0c\u4e2a\u4eba\u4e4b\u95f4\u53ef\u4ee5\u8fdb\u884c\u7ecf\u6d4e\u4e92\u52a8\u3002\n\n\n\u6309\u7167\u4ee5\u592a\u574a\u5f00\u53d1\u8005\u7684\u610f\u56fe\uff0c\u4ee5\u592a\u574a\u662f\u4e00\u4e2a\u7a7a\u767d\u7684\u753b\u5e03\uff0c\u60a8\u53ef\u4ee5\u81ea\u7531\u5730\u968f\u610f\u521b\u5efa\u4efb\u4f55\u4f60\u60f3\u8981\u7684\u4e1c\u897f\u3002\n\u4ee5\u592a\u574a\u534f\u8bae\u65e8\u5728\u8fdb\u884c\u63a8\u5e7f\uff0c\u4ee5\u4fbf\u6838\u5fc3\u529f\u80fd\u53ef\u4ee5\u4efb\u610f\u65b9\u5f0f\u8fdb\u884c\u7ec4\u5408\u3002\n\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u4ee5\u592a\u574a\u7684dapp\u9879\u76ee\u5c06\u5229\u7528\u4ee5\u592a\u574a\u533a\u5757\u94fe\u6784\u5efa\u4f9d\u9760\u5206\u6563\u5316\u5171\u8bc6\u7684\u89e3\u51b3\u65b9\u6848\u6765\u63d0\u4f9b\u5148\u524d\u65e0\u6cd5\u5b9e\u73b0\u7684\u65b0\u4ea7\u54c1\u548c\u670d\u52a1\u3002\n\n\n\u4ee5\u592a\u574a\u53ef\u80fd\u662f\u6700\u597d\u7684\u63cf\u8ff0\u4e3a\u4e00\u4e2a\u751f\u6001\u7cfb\u7edf\uff1a\u6838\u5fc3\u534f\u8bae\u662f\u7531\u5404\u79cd\u652f\u6301\n\u4ee5\u592a\u574a\u53ef\u80fd\u662f\u6700\u597d\u7684\u63cf\u8ff0\u4e3a\u4e00\u4e2a\u751f\u6001\u7cfb\u7edf\uff1a\u6838\u5fc3\u534f\u8bae\u662f\u7531\u5404\u79cd\u652f\u6301\n\u5df2\u7ecf\u5728\u4ee5\u592a\u574a\u5efa\u7acb\u4e86\u4e00\u4e9b\u9ad8\u8c03\u7684\u9879\u76ee\uff0c\u5982Augur\uff0cDigix\uff0cMaker\u7b49\u7b49\uff08\u89c1[dapps]\uff09\u3002\n\u53e6\u5916\uff0c\u8fd8\u6709\u5f00\u53d1\u56e2\u961f\u6784\u5efa\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u4f7f\u7528\u7684\u5f00\u6e90\u7ec4\u4ef6\u3002\n\u867d\u7136\u8fd9\u4e9b\u7ec4\u7ec7\u4e0e\u4ee5\u592a\u574a\u57fa\u91d1\u4f1a\u662f\u5206\u5f00\u7684\uff0c\u5e76\u6709\u81ea\u5df1\u7684\u76ee\u6807\uff0c\u4f46\u8fd9\u65e0\u7591\u6709\u5229\u4e8e\u6574\u4e2a\u4ee5\u592a\u574a\u751f\u6001\u7cfb\u7edf\u3002\n\n\n\u8fdb\u4e00\u6b65\u89c2\u770b/\u9605\u8bfb\uff1a\n\n\n\n\nVitalik Buterin  -  TNABC 2015\uff1a\nhttps://www.youtube.com/watch?v=Fjhe0MVRHO4\n\n\n\u52a0\u6587\u6728\u6750 -  DEVCON 1  - \u4ee5\u592a\u574a\u50bb\u74dc\uff1a\nhttps://www.youtube.com/watch?v=U_LK0t_qaPo\n\n\n\u4ee5\u592a\u574a\u4f26\u6566\u805a\u4f1a\uff08\u6700\u597d\u5728\u8fd9\u91cc\u8be6\u7ec6\uff09:\nhttps://www.youtube.com/watch?v=GJGIeSCgskc\n\n\n\n\n\u667a\u80fd\u5408\u7ea6\n\n\nAlex\uff1a\n\n\n\u4f60\u4f1a\u548c\u4e00\u4e2a\u4f60\u4ece\u672a\u89c1\u8fc7\u7684\u4eba\u7b7e\u8ba2\u5408\u540c\u5417\uff1f\n\u4f60\u540c\u610f\u628a\u94b1\u501f\u7ed9\u57c3\u585e\u4fc4\u6bd4\u4e9a\u7684\u4e00\u4e9b\u519c\u6c11\u5417\uff1f\n\u4f60\u4f1a\u6210\u4e3a\u6218\u533a\u5c11\u6570\u6c11\u65cf\u62a5\u7eb8\u7684\u6295\u8d44\u4eba\u5417\uff1f\n\u4f60\u4f1a\u4e3a\u5728\u7f51\u4e0a\u8d2d\u4e70\u4ef7\u503c5\u7f8e\u5143\u7684\u5408\u6cd5\u5408\u540c\u7b7e\u8ba2\u4e00\u4efd\u9ebb\u70e6\u5417\uff1f\n\n\n\u5927\u591a\u6570\u95ee\u9898\u7684\u7b54\u6848\u662f\u5426\u5b9a\u7684\uff0c\u539f\u56e0\u662f\u5408\u540c\u9700\u8981\u5927\u91cf\u7684\u57fa\u7840\u8bbe\u65bd\uff1a\u6709\u65f6\u5019\u60a8\u9700\u8981\u53cc\u65b9\u5efa\u7acb\u8d77\u6709\u6548\u7684\u4fe1\u4efb\u5173\u7cfb\uff0c\u6709\u65f6\u60a8\u4f9d\u9760\u6709\u6548\u7684\u6cd5\u5f8b\u5236\u5ea6\uff0c\u8b66\u5bdf\u548c\u5f8b\u5e08\u8d39\u7528\u3002\n\n\n\u5728\u4ee5\u592a\u574a\u4f60\u4e0d\u9700\u8981\u4efb\u4f55\u8fd9\u6837\u7684\u4e1c\u897f\uff1a\u5982\u679c\u5408\u540c\u7684\u6240\u6709\u5fc5\u8981\u6761\u4ef6\u90fd\u53ef\u4ee5\u653e\u5728\u533a\u5757\u94fe\u4e2d\uff0c\u90a3\u4e48\u5b83\u4eec\u5c06\u5728\u51e0\u4e4e\u6ca1\u6709\u4ee3\u4ef7\u7684\u4fe1\u4efb\u73af\u5883\u4e2d\u8fdb\u884c\u3002\n\n\n\u4e0e\u5176\u8003\u8651\u5c06\u5f53\u524d\u7684\u5408\u540c\u79fb\u52a8\u5230\u533a\u5757\u94fe\uff0c\u4e0d\u5982\u8003\u8651\u6240\u6709\u90a3\u4e9b\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u540c\u610f\u7684\u5c0f\u5408\u540c\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u7ecf\u6d4e\u4e0a\u4e0d\u53ef\u884c\uff0c\u6216\u8005\u6ca1\u6709\u8db3\u591f\u7684\u6cd5\u5f8b\u4fdd\u62a4\u3002\n\n\nDAO\n\n\n\u8fd9\u53ea\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a\u5047\u8bbe\u4f60\u548c\u4f60\u7684\u670b\u53cb\u6709\u4e00\u4e2a\u5c0f\u751f\u610f\u3002\n\u5f8b\u5e08\u548c\u4f1a\u8ba1\u5e08\u662f\u6602\u8d35\u7684\uff0c\u4fe1\u4efb\u4e00\u4e2a\u5355\u4e00\u7684\u5408\u4f5c\u4f19\u4f34\u6765\u76d1\u7763\u4e66\u7c4d\u53ef\u80fd\u662f\u4e00\u4e2a\u7d27\u5f20\u7684\u6839\u6e90\uff08\u751a\u81f3\u662f\u4e00\u4e2a\u6b3a\u8bc8\u7684\u673a\u4f1a\uff09\u3002\n\u4e25\u683c\u9075\u5b88\u4e0d\u6b62\u4e00\u4e2a\u5408\u4f19\u4eba\u76d1\u7763\u4e66\u7c4d\u7684\u5236\u5ea6\uff0c\u53ea\u8981\u534f\u8bae\u6ca1\u6709\u4e25\u683c\u9075\u5b88\uff0c\u5c31\u53ef\u80fd\u4f1a\u53d7\u5230\u6b3a\u8bc8\u3002\n\n\n\u4f7f\u7528\u4e00\u4e2a\u667a\u80fd\u5408\u7ea6\uff0c\u4f60\u516c\u53f8\u7684\u6240\u6709\u6743\u548c\u8d44\u91d1\u7684\u5206\u914d\u6761\u6b3e\u53ef\u4ee5\u5728\u4e00\u5f00\u59cb\u5c31\u6307\u5b9a\u3002\n\u667a\u80fd\u5408\u7ea6\u53ef\u4ee5\u8fd9\u6837\u5199\uff0c\u53ea\u6709\u7ecf\u8fc7\u5927\u591a\u6570\u6240\u6709\u8005\u7684\u540c\u610f\u624d\u80fd\u6539\u53d8\u3002\n\u50cf\u8fd9\u6837\u7684\u667a\u80fd\u5408\u540c\u53ef\u80fd\u4f1a\u4f5c\u4e3a\u5f00\u6e90\u8f6f\u4ef6\u63d0\u4f9b\uff0c\u6240\u4ee5\u4f60\u751a\u81f3\u4e0d\u9700\u8981\u96c7\u7528\u81ea\u5df1\u7684\u7a0b\u5e8f\u5458\u800c\u4e0d\u662f\u4f1a\u8ba1\u5e08/\u5f8b\u5e08\u3002\n\n\n\u50cf\u8fd9\u6837\u7684\u667a\u80fd\u5408\u7ea6\u5373\u523b\u7f29\u653e\u3002\n\u4e00\u4e9b\u9752\u5c11\u5e74\u53ef\u4ee5\u50cf\u67e0\u6aac\u6c34\u4e00\u6837\u900f\u660e\u5206\u914d\u6536\u5165\uff0c\u800c\u4e3b\u6743\u8d22\u5bcc\u57fa\u91d1\u53ef\u4ee5\u5411\u6709\u8d44\u683c\u83b7\u5f97\u8fd9\u4e9b\u8d44\u91d1\u7684\u4ebf\u4e07\u516c\u6c11\u5206\u914d\u8d44\u91d1\u3002\n\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd9\u79cd\u900f\u660e\u5ea6\u7684\u4ef7\u683c\u53ef\u80fd\u662f\u4e00\u7f8e\u5143\u7684\u4e00\u5206\u94b1\u3002", 
            "title": "Web 3"
        }, 
        {
            "location": "/introduction/web3/#web-3", 
            "text": "\u8bb8\u591a\u4eba\u5f00\u59cb\u76f8\u4fe1\u50cf\u4ee5\u592a\u574a\u8fd9\u6837\u7684\u5f00\u653e\uff0c\u4e0d\u53ef\u9760\u7684\u533a\u5757\u94fe\u5e73\u53f0\u975e\u5e38\u9002\u5408\u4f5c\u4e3a\u5206\u6563\uff0c\u5b89\u5168\u7684\u4e92\u8054\u7f51 - \u7f51\u7edc3.0\u7684\u5171\u4eab\u201c\u540e\u7aef\u201d\u3002\n\u4e00\u4e2a\u4e92\u8054\u7f51\uff0c\u50cfDNS\u548c\u6570\u5b57\u8eab\u4efd\u8fd9\u6837\u7684\u6838\u5fc3\u670d\u52a1\u662f\u5206\u6563\u7684\uff0c\u4e2a\u4eba\u4e4b\u95f4\u53ef\u4ee5\u8fdb\u884c\u7ecf\u6d4e\u4e92\u52a8\u3002  \u6309\u7167\u4ee5\u592a\u574a\u5f00\u53d1\u8005\u7684\u610f\u56fe\uff0c\u4ee5\u592a\u574a\u662f\u4e00\u4e2a\u7a7a\u767d\u7684\u753b\u5e03\uff0c\u60a8\u53ef\u4ee5\u81ea\u7531\u5730\u968f\u610f\u521b\u5efa\u4efb\u4f55\u4f60\u60f3\u8981\u7684\u4e1c\u897f\u3002\n\u4ee5\u592a\u574a\u534f\u8bae\u65e8\u5728\u8fdb\u884c\u63a8\u5e7f\uff0c\u4ee5\u4fbf\u6838\u5fc3\u529f\u80fd\u53ef\u4ee5\u4efb\u610f\u65b9\u5f0f\u8fdb\u884c\u7ec4\u5408\u3002\n\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u4ee5\u592a\u574a\u7684dapp\u9879\u76ee\u5c06\u5229\u7528\u4ee5\u592a\u574a\u533a\u5757\u94fe\u6784\u5efa\u4f9d\u9760\u5206\u6563\u5316\u5171\u8bc6\u7684\u89e3\u51b3\u65b9\u6848\u6765\u63d0\u4f9b\u5148\u524d\u65e0\u6cd5\u5b9e\u73b0\u7684\u65b0\u4ea7\u54c1\u548c\u670d\u52a1\u3002  \u4ee5\u592a\u574a\u53ef\u80fd\u662f\u6700\u597d\u7684\u63cf\u8ff0\u4e3a\u4e00\u4e2a\u751f\u6001\u7cfb\u7edf\uff1a\u6838\u5fc3\u534f\u8bae\u662f\u7531\u5404\u79cd\u652f\u6301\n\u4ee5\u592a\u574a\u53ef\u80fd\u662f\u6700\u597d\u7684\u63cf\u8ff0\u4e3a\u4e00\u4e2a\u751f\u6001\u7cfb\u7edf\uff1a\u6838\u5fc3\u534f\u8bae\u662f\u7531\u5404\u79cd\u652f\u6301\n\u5df2\u7ecf\u5728\u4ee5\u592a\u574a\u5efa\u7acb\u4e86\u4e00\u4e9b\u9ad8\u8c03\u7684\u9879\u76ee\uff0c\u5982Augur\uff0cDigix\uff0cMaker\u7b49\u7b49\uff08\u89c1[dapps]\uff09\u3002\n\u53e6\u5916\uff0c\u8fd8\u6709\u5f00\u53d1\u56e2\u961f\u6784\u5efa\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u4f7f\u7528\u7684\u5f00\u6e90\u7ec4\u4ef6\u3002\n\u867d\u7136\u8fd9\u4e9b\u7ec4\u7ec7\u4e0e\u4ee5\u592a\u574a\u57fa\u91d1\u4f1a\u662f\u5206\u5f00\u7684\uff0c\u5e76\u6709\u81ea\u5df1\u7684\u76ee\u6807\uff0c\u4f46\u8fd9\u65e0\u7591\u6709\u5229\u4e8e\u6574\u4e2a\u4ee5\u592a\u574a\u751f\u6001\u7cfb\u7edf\u3002  \u8fdb\u4e00\u6b65\u89c2\u770b/\u9605\u8bfb\uff1a   Vitalik Buterin  -  TNABC 2015\uff1a https://www.youtube.com/watch?v=Fjhe0MVRHO4  \u52a0\u6587\u6728\u6750 -  DEVCON 1  - \u4ee5\u592a\u574a\u50bb\u74dc\uff1a https://www.youtube.com/watch?v=U_LK0t_qaPo  \u4ee5\u592a\u574a\u4f26\u6566\u805a\u4f1a\uff08\u6700\u597d\u5728\u8fd9\u91cc\u8be6\u7ec6\uff09: https://www.youtube.com/watch?v=GJGIeSCgskc", 
            "title": "Web 3: \u5206\u6563\u5f0f\u5e94\u7528\u7a0b\u5e8f\u7684\u5e73\u53f0"
        }, 
        {
            "location": "/introduction/web3/#_1", 
            "text": "Alex\uff1a  \u4f60\u4f1a\u548c\u4e00\u4e2a\u4f60\u4ece\u672a\u89c1\u8fc7\u7684\u4eba\u7b7e\u8ba2\u5408\u540c\u5417\uff1f\n\u4f60\u540c\u610f\u628a\u94b1\u501f\u7ed9\u57c3\u585e\u4fc4\u6bd4\u4e9a\u7684\u4e00\u4e9b\u519c\u6c11\u5417\uff1f\n\u4f60\u4f1a\u6210\u4e3a\u6218\u533a\u5c11\u6570\u6c11\u65cf\u62a5\u7eb8\u7684\u6295\u8d44\u4eba\u5417\uff1f\n\u4f60\u4f1a\u4e3a\u5728\u7f51\u4e0a\u8d2d\u4e70\u4ef7\u503c5\u7f8e\u5143\u7684\u5408\u6cd5\u5408\u540c\u7b7e\u8ba2\u4e00\u4efd\u9ebb\u70e6\u5417\uff1f  \u5927\u591a\u6570\u95ee\u9898\u7684\u7b54\u6848\u662f\u5426\u5b9a\u7684\uff0c\u539f\u56e0\u662f\u5408\u540c\u9700\u8981\u5927\u91cf\u7684\u57fa\u7840\u8bbe\u65bd\uff1a\u6709\u65f6\u5019\u60a8\u9700\u8981\u53cc\u65b9\u5efa\u7acb\u8d77\u6709\u6548\u7684\u4fe1\u4efb\u5173\u7cfb\uff0c\u6709\u65f6\u60a8\u4f9d\u9760\u6709\u6548\u7684\u6cd5\u5f8b\u5236\u5ea6\uff0c\u8b66\u5bdf\u548c\u5f8b\u5e08\u8d39\u7528\u3002  \u5728\u4ee5\u592a\u574a\u4f60\u4e0d\u9700\u8981\u4efb\u4f55\u8fd9\u6837\u7684\u4e1c\u897f\uff1a\u5982\u679c\u5408\u540c\u7684\u6240\u6709\u5fc5\u8981\u6761\u4ef6\u90fd\u53ef\u4ee5\u653e\u5728\u533a\u5757\u94fe\u4e2d\uff0c\u90a3\u4e48\u5b83\u4eec\u5c06\u5728\u51e0\u4e4e\u6ca1\u6709\u4ee3\u4ef7\u7684\u4fe1\u4efb\u73af\u5883\u4e2d\u8fdb\u884c\u3002  \u4e0e\u5176\u8003\u8651\u5c06\u5f53\u524d\u7684\u5408\u540c\u79fb\u52a8\u5230\u533a\u5757\u94fe\uff0c\u4e0d\u5982\u8003\u8651\u6240\u6709\u90a3\u4e9b\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u540c\u610f\u7684\u5c0f\u5408\u540c\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u7ecf\u6d4e\u4e0a\u4e0d\u53ef\u884c\uff0c\u6216\u8005\u6ca1\u6709\u8db3\u591f\u7684\u6cd5\u5f8b\u4fdd\u62a4\u3002", 
            "title": "\u667a\u80fd\u5408\u7ea6"
        }, 
        {
            "location": "/introduction/web3/#dao", 
            "text": "\u8fd9\u53ea\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a\u5047\u8bbe\u4f60\u548c\u4f60\u7684\u670b\u53cb\u6709\u4e00\u4e2a\u5c0f\u751f\u610f\u3002\n\u5f8b\u5e08\u548c\u4f1a\u8ba1\u5e08\u662f\u6602\u8d35\u7684\uff0c\u4fe1\u4efb\u4e00\u4e2a\u5355\u4e00\u7684\u5408\u4f5c\u4f19\u4f34\u6765\u76d1\u7763\u4e66\u7c4d\u53ef\u80fd\u662f\u4e00\u4e2a\u7d27\u5f20\u7684\u6839\u6e90\uff08\u751a\u81f3\u662f\u4e00\u4e2a\u6b3a\u8bc8\u7684\u673a\u4f1a\uff09\u3002\n\u4e25\u683c\u9075\u5b88\u4e0d\u6b62\u4e00\u4e2a\u5408\u4f19\u4eba\u76d1\u7763\u4e66\u7c4d\u7684\u5236\u5ea6\uff0c\u53ea\u8981\u534f\u8bae\u6ca1\u6709\u4e25\u683c\u9075\u5b88\uff0c\u5c31\u53ef\u80fd\u4f1a\u53d7\u5230\u6b3a\u8bc8\u3002  \u4f7f\u7528\u4e00\u4e2a\u667a\u80fd\u5408\u7ea6\uff0c\u4f60\u516c\u53f8\u7684\u6240\u6709\u6743\u548c\u8d44\u91d1\u7684\u5206\u914d\u6761\u6b3e\u53ef\u4ee5\u5728\u4e00\u5f00\u59cb\u5c31\u6307\u5b9a\u3002\n\u667a\u80fd\u5408\u7ea6\u53ef\u4ee5\u8fd9\u6837\u5199\uff0c\u53ea\u6709\u7ecf\u8fc7\u5927\u591a\u6570\u6240\u6709\u8005\u7684\u540c\u610f\u624d\u80fd\u6539\u53d8\u3002\n\u50cf\u8fd9\u6837\u7684\u667a\u80fd\u5408\u540c\u53ef\u80fd\u4f1a\u4f5c\u4e3a\u5f00\u6e90\u8f6f\u4ef6\u63d0\u4f9b\uff0c\u6240\u4ee5\u4f60\u751a\u81f3\u4e0d\u9700\u8981\u96c7\u7528\u81ea\u5df1\u7684\u7a0b\u5e8f\u5458\u800c\u4e0d\u662f\u4f1a\u8ba1\u5e08/\u5f8b\u5e08\u3002  \u50cf\u8fd9\u6837\u7684\u667a\u80fd\u5408\u7ea6\u5373\u523b\u7f29\u653e\u3002\n\u4e00\u4e9b\u9752\u5c11\u5e74\u53ef\u4ee5\u50cf\u67e0\u6aac\u6c34\u4e00\u6837\u900f\u660e\u5206\u914d\u6536\u5165\uff0c\u800c\u4e3b\u6743\u8d22\u5bcc\u57fa\u91d1\u53ef\u4ee5\u5411\u6709\u8d44\u683c\u83b7\u5f97\u8fd9\u4e9b\u8d44\u91d1\u7684\u4ebf\u4e07\u516c\u6c11\u5206\u914d\u8d44\u91d1\u3002\n\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd9\u79cd\u900f\u660e\u5ea6\u7684\u4ef7\u683c\u53ef\u80fd\u662f\u4e00\u7f8e\u5143\u7684\u4e00\u5206\u94b1\u3002", 
            "title": "DAO"
        }, 
        {
            "location": "/introduction/history-of-ethereum/", 
            "text": "\u4ee5\u592a\u574a\u7684\u5386\u53f2\n\n\n\u5bf9\u4e8e\u6700\u8fd1\u7684\u5386\u53f2\u5e10\u6237\uff0c\u8bf7\u53c2\u9605\n\u6cf0\u52d2\u00b7\u683c\u6797\u7684\u535a\u5ba2\u5e16\u5b50\n\n\n\u76d7\u68a6\u7a7a\u95f4\n\n\nEthereum\u6700\u521d\u662f\u7531Vitalik Buterin\u4e8e2013\u5e74\u672b\u5728\u6bd4\u7279\u5e01\u793e\u533a\u7684\u7814\u7a76\u548c\u5de5\u4f5c\u6240\u5f62\u5bb9\u7684\u3002\n\u6b64\u540e\u4e0d\u4e45\uff0cVitalik\u53d1\u8868\u4e86\n\u4ee5\u592a\u574a\u767d\u76ae\u4e66\n\uff0c\u8be6\u7ec6\u63cf\u8ff0\u4e86\u4ee5\u592a\u574a\u534f\u8bae\u548c\u667a\u80fd\u5408\u7ea6\u67b6\u6784\u7684\u6280\u672f\u8bbe\u8ba1\u548c\u57fa\u672c\u539f\u7406\u3002\n2014\u5e741\u6708\uff0cEthereum\u5728\u7f8e\u56fd\u4f5b\u7f57\u91cc\u8fbe\u5dde\u8fc8\u963f\u5bc6\u7684\u5317\u7f8e\u6bd4\u7279\u5e01\u4f1a\u8bae\u4e0a\u7531Vitalik\u6b63\u5f0f\u5ba3\u5e03\u3002\n\n\n\u5927\u7ea6\u5728\u90a3\u4e2a\u65f6\u5019\uff0cVitalik\u4e5f\u5f00\u59cb\u4e0eDr.\n\u52a0\u6587\u00b7\u4f0d\u5fb7\u548c\u5171\u540c\u521b\u7acb\u7684\u4ee5\u592a\u574a\u3002\n\u52302014\u5e744\u6708\uff0cGavin\u53d1\u8868\u4e86\nEthereum Yellow Paper\n\n\u901a\u8fc7\u9075\u5faa\u9ec4\u76ae\u4e66\u4e2d\u7684\u8be6\u7ec6\u89c4\u8303\uff0c\u4ee5\u592a\u574a\u5ba2\u6237\u7aef\u5df2\u7ecf\u5b9e\u73b0\u4e86\u4e03\u79cd\u7f16\u7a0b\u8bed\u8a00(C ++\uff0cGo\uff0cPython\uff0cJava\uff0cJavaScript\uff0cHaskell\uff0cRust)\uff0c\u5e76\u4e14\u5bfc\u81f4\u4e86\u66f4\u597d\u7684\u8f6f\u4ef6\u6574\u4f53\u3002\n\n\n\n\n\u4ee5\u592a\u574a\u63a8\u51faCryptocurrency 2.0\u7f51\u7edc\n - 2014\u5e741\u6708\u7684Coindesk\u6587\u7ae0\u5f00\u59cb\n\n\n\u4ee5\u592a\u574a\u5ba3\u5e03bitcointalk\n \u7ef4\u5854\u5229\u514b\u6700\u521d\u5ba3\u5e03\u7684\u6bd4\u7279\u5e01\u793e\u533a\u3002,\u67095000\u4e2a\u56de\u590d\u7684\u8bba\u575b\u7ebf\u7a0b\u3002\n\n\n\n\n\u4ee5\u592a\u574a\u57fa\u91d1\u4f1a\u548c\u4ee5\u8272\u5217\u9884\u552e\n\n\n\u9664\u4e86\u4e3a\u4ee5\u592a\u574a\u5f00\u53d1\u8f6f\u4ef6\u4e4b\u5916\uff0c\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u52a0\u5bc6\u8d27\u5e01\u548c\u533a\u5757\u94fe\u7684\u80fd\u529b\u9700\u8981\u5927\u89c4\u6a21\u7684\u5f15\u5bfc\u5de5\u4f5c\uff0c\u4ee5\u4fbf\u7ec4\u88c5\u542f\u52a8\u548c\u8fd0\u884c\u6240\u9700\u7684\u8d44\u6e90\u3002\n\u4e3a\u4e86\u542f\u52a8\u4e00\u4e2a\u7531\u5f00\u53d1\u5546\uff0c\u77ff\u5de5\uff0c\u6295\u8d44\u8005\u548c\u5176\u4ed6\u5229\u76ca\u76f8\u5173\u8005\u7ec4\u6210\u7684\u5e9e\u5927\u7f51\u7edc\uff0c\u4ee5\u592a\u574a\u5ba3\u5e03\u8ba1\u5212\u5bf9\u4ee5\u592a\u574a\u7684\u8d27\u5e01\u5355\u4f4d - \u919a\u4ee4\u724c\u8fdb\u884c\u9884\u552e\u3002\n\u901a\u8fc7\u9884\u552e\u7b79\u96c6\u8d44\u91d1\u7684\u6cd5\u5f8b\u548c\u8d22\u52a1\u4e0a\u7684\u590d\u6742\u6027\u5bfc\u81f4\u4e86\u51e0\u4e2a\u6cd5\u5f8b\u5b9e\u4f53\uff0c\u5305\u62ec2014\u5e746\u6708\u5728\u745e\u58eb\u695a\u683c\u6210\u7acb\u7684[\u4ee5\u592a\u574a\u57fa\u91d1\u4f1a(\u57fa\u91d1\u4f1a(\u57fa\u91d1\u4f1a)] [\u57fa\u91d1\u4f1a] {\u89d2\u8272=\u201cref\u201d}\u3002\n\n\n\u81ea\u4e8c\u96f6\u4e00\u56db\u5e74\u4e03\u6708\u8d77\uff0cEthereum\u901a\u8fc742\u5929\u516c\u5f00\u552e\u5356\u4e59\u919a\u7684\u9884\u552e\u65b9\u5f0f\u5206\u914d\u4e86\u4e59\u919a\u7684\u521d\u59cb\u5206\u914d\uff0c\u51c0\u989d\u8fbe31,591\u6bd4\u7279\u5e01\uff0c\u5f53\u65f6\u4ef7\u503c18,439,086\u7f8e\u5143\uff0c\u6362\u53d6\u7ea660,102,216\u4e59\u919a\u3002\n\u51fa\u552e\u7684\u7ed3\u679c\u6700\u521d\u662f\u7528\u6765\u507f\u8fd8\u6cd5\u5b9a\u503a\u52a1\uff0c\u4e5f\u662f\u4e3a\u4e86\u5f00\u53d1\u8005\u52aa\u529b\u7684\u51e0\u4e2a\u6708\u8fd8\u6ca1\u6709\u5f97\u5230\u8865\u507f\uff0c\u5e76\u4e3a\u4ee5\u592a\u574a\u7684\u6301\u7eed\u53d1\u5c55\u63d0\u4f9b\u8d44\u91d1\u3002\n\n\n\n\n\u542f\u52a8\u4ee5\u592a\u9500\u552e\n - \u4ee5\u592a\u574a\u535a\u5ba2\u4e0a\u7684\u539f\u521b\u5b98\u65b9\u58f0\u660e\n\n\n\u6709\u5173\u9884\u552e\u7684\u7b80\u6d01\u7684\u4fe1\u606f\u4e30\u5bcc\u7684\u7edf\u8ba1\u9875\u9762\n \u7531(\u4ece\u90a3\u4ee5\u540e\u4e0d\u6d3b\u52a8)\nEther.Fund\n\n\n\u6982\u8ff0\uff1a\u4ee5\u592a\u574a\u7684\u9996\u6b21\u516c\u5f00\u62cd\u5356\n - \u6240\u6709\u5173\u4e8e\u4ee5\u592a\u9884\u552e\u7684\u7edf\u8ba1\u6570\u636e\n\n\n\u9884\u552e\u7684\u6761\u6b3e\u548c\u6761\u4ef6\n\n\n\n\nETH / DEV\u548c\u4ee5\u592a\u574a\u53d1\u5c55\n\n\n\u4ee5\u592a\u574a\u9884\u552e\u6210\u529f\u540e\uff0cEthereum\u7684\u53d1\u5c55\u5728\u4e00\u4e2a\u540d\u4e3aETH DEV\u7684\u975e\u76c8\u5229\u7ec4\u7ec7\u4e2d\u6b63\u5f0f\u5f62\u6210\uff0c\u8be5\u7ec4\u7ec7\u6839\u636eEthereum Suisse\u7684\u5408\u540c\u6765\u7ba1\u7406\u4ee5\u592a\u574a\u7684\u53d1\u5c55 -  Vitalik Buterin\uff0cGavin Wood\u548cJeffrey Wilcke\u662f,\u8be5\u7ec4\u7ec7\u3002\n\u5f00\u53d1\u4eba\u5458\u5bf9\u4ee5\u592a\u574a\u7684\u5174\u8da3\u5728\u6574\u4e2a2014\u5e74\u7a33\u6b65\u589e\u957f\uff0cETH DEV\u56e2\u961f\u4e3a\u5f00\u53d1\u793e\u533a\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u6982\u5ff5\u9a8c\u8bc1(PoC)\u7248\u672c\u3002\nETH DEV\u56e2\u961f\u5728\n\u4ee5\u592a\u574a\u535a\u5ba2\n\u9891\u7e41\u53d1\u5e03\u7684\u5e16\u5b50\u4e5f\u8ba9\u4eba\u5174\u594b\n\u5728Ethereum\u8bba\u575b\u548c\u4ee5\u592a\u7f51subreddit\u4e0a\u589e\u52a0\u7684\u6d41\u91cf\u548c\u4e0d\u65ad\u589e\u957f\u7684\u7528\u6237\u57fa\u7840\u8bc1\u660e\uff0c\u8be5\u5e73\u53f0\u6b63\u5728\u5438\u5f15\u5feb\u901f\u53d1\u5c55\u548c\u5fe0\u8bda\u7684\u5f00\u53d1\u8005\u793e\u533a\u3002\n\u8fd9\u4e00\u8d8b\u52bf\u4e00\u76f4\u6301\u7eed\u5230\u4eca\u5929\u3002\n\n\nDEVCON-0\n\n\n2014\u5e7411\u6708\uff0cETH DEV\u7ec4\u7ec7\u4e86\nDEVCON-0\u4e8b\u4ef6\n\uff0c\u805a\u96c6\u4e86\u6765\u81ea\u5404\u5730\u7684Ethereum\u5f00\u53d1\u4eba\u5458,\u4e16\u754c\u5230\u67cf\u6797\u6765\u805a\u4f1a\u548c\u8ba8\u8bba\u4ee5\u592a\u574a\u6280\u672f\u7684\u5404\u79cd\u4e3b\u9898\u3002\nDEVcon-0\u7684\u4e00\u4e9b\u6f14\u8bb2\u548c\u4f1a\u8bae\u7a0d\u540e\u5c06\u63a8\u52a8\u91cd\u8981\u7684\u4e3e\u63aa\uff0c\u4f7f\u4ee5\u592a\u574a\u66f4\u53ef\u9760\uff0c\u66f4\u5b89\u5168\uff0c\u66f4\u53ef\u6269\u5c55\u3002\n\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u6b21\u6d3b\u52a8\u6fc0\u52b1\u4e86\u5f00\u53d1\u8005\u7ee7\u7eed\u52aa\u529b\u63a8\u51fa\u4ee5\u592a\u574a\u3002\n\n\n\n\nDEVCON-0\u4f1a\u8bb2youtube\u64ad\u653e\u5217\u8868\n\n\nDEVCON-0 reddit post\n\n\nGav\u7684DEV\u66f4\u65b0\u63d0\u53caDEVCON-0\n\n\nDEVcon-0\u56de\u987e\u535a\u5ba2\u6587\u7ae0\n\n\n\n\nDEVgrants\u7a0b\u5e8f\n\n\n2015\u5e744\u6708\uff0c\u5ba3\u5e03\u4e86\u201cDEVgrants\u8ba1\u5212\u201d(https://blog.ethereum.org/2015/04/07/devgrants-help/)\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e3a\u4ee5\u592a\u574a\u5e73\u53f0\u63d0\u4f9b\u6350\u6b3e\u7684\u8ba1\u5212\uff0c,\u5230\u57fa\u4e8eo\u7684\u9879\u76ee\n\u6570\u767e\u540d\u5f00\u53d1\u4eba\u5458\u5df2\u7ecf\u5728\u4e3aEthereum\u9879\u76ee\u548c\u5f00\u6e90\u9879\u76ee\u6295\u5165\u65f6\u95f4\u548c\u601d\u8003\u3002\n\u8be5\u8ba1\u5212\u65e8\u5728\u5956\u52b1\u548c\u652f\u6301\u8fd9\u4e9b\u5f00\u53d1\u8005\u7684\u8d21\u732e\u3002\nDEVgrants\u8ba1\u5212\u4eca\u5929\u7ee7\u7eed\u8fd0\u4f5c\uff0c\u8be5\u8ba1\u5212\u7684\u8d44\u91d1\u5df2\u4e8e2016\u5e741\u6708\u7eed\u7ea6\u3002\n\n\n\n\nDEVGRANT\u9996\u6b21\u516c\u5e03\n\n\n\u5728DEVCON-1\u4e0a\u516c\u5e03\u65b0\u7684\u8d44\u91d1\n\n\nDEVgrants\u516c\u5171\u6d4b\u91cf\u5ba4\n\n\nDEVgrants\u5728YouTube\u4e0a\u7531Wendell Davis\u5728DEVCON-1\u4e0a\u6f14\u8bb2\n\n\n\n\n\u5965\u8fd0\u6d4b\u8bd5\u7f51\uff0c\u9519\u8bef\u8d4f\u91d1\u548c\u5b89\u5168\u5ba1\u8ba1\n\n\n\u6574\u4e2a2014\u5e74\u548c2015\u5e74\u7684\u53d1\u5c55\u7ecf\u5386\u4e86\u4e00\u7cfb\u5217\u7684\u6982\u5ff5\u53d1\u5e03\u8bc1\u660e\uff0c\u5bfc\u81f4\u7b2c\u4e5d\u5c4aPOC\u516c\u5f00\u6d4b\u8bd5\u7f51\uff0c\u88ab\u79f0\u4e3a\u5965\u8fd0\n\u5f00\u53d1\u8005\u793e\u533a\n\u88ab\u9080\u8bf7\u6d4b\u8bd5\u7f51\u7edc\u7684\u6781\u9650\n\uff0c\u5e76\u5206\u914d\u4e86\u5927\u91cf\u7684\u5956\u91d1\u6765\u5956\u52b1\u90a3\u4e9b,\u6301\u6709\u5404\u79cd\u8bb0\u5f55\u6216\u4ee5\u67d0\u79cd\u65b9\u5f0f\u6210\u529f\u6253\u7834\u7cfb\u7edf\u3002\n\u73b0\u573a\u53d1\u5e03\u540e\u4e00\u4e2a\u6708\u6b63\u5f0f\u5ba3\u5e03\n\u5956\u52b1\n\u3002\n\n\n\u57282015\u5e74\u521d\uff0c\u4e00\u4e2a\n\u4ee5\u592a\u574a\u5956\u52b1\u8ba1\u5212\n\u53d1\u5e03\uff0c\u4e3a\u5728\u4ee5\u592a\u574a\u8f6f\u4ef6\u5806\u6808\u7684\u4efb\u4f55\u90e8\u5206\u627e\u5230\u6f0f\u6d1e\u63d0\u4f9bBTC\u5956\u52b1\u3002\n\u8fd9\u65e0\u7591\u6709\u52a9\u4e8e\u4ee5\u592a\u574a\u7684\u53ef\u9760\u6027\u548c\u5b89\u5168\u6027\u4ee5\u53ca\u4ee5\u592a\u574a\u5728\u6280\u672f\u65b9\u9762\u7684\u4fe1\u5fc3\u3002\n\u8d4f\u91d1\u8ba1\u5212\u76ee\u524d\u4ecd\u7136\u6d3b\u8dc3\uff0c\u5e76\u6ca1\u6709\u8ba1\u5212\u7ed3\u675f\u65e5\u671f\u3002\n\n\n\u4ee5\u592a\u574a\u5b89\u5168\u5ba1\u8ba1\u59cb\u4e8e2014\u5e74\u5e95\uff0c\u6301\u7eed\u52302015\u5e74\u4e0a\u534a\u5e74\u3002\n\u4ee5\u592a\u574a\u59d4\u6258\u591a\u4e2a\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u5b89\u5168\u516c\u53f8\u5bf9\u6240\u6709\u534f\u8bae\u5173\u952e\u7ec4\u4ef6(Ethereum\u865a\u62df\u673a\uff0c\u7f51\u7edc\uff0c\u5de5\u4f5c\u8bc1\u660e)\u8fdb\u884c\u7aef\u5230\u7aef\u5ba1\u8ba1\u3002\n\u5ba1\u8ba1\u53d1\u73b0\u4e86\u518d\u6b21\u89e3\u51b3\u548c\u6d4b\u8bd5\u7684\u5b89\u5168\u95ee\u9898\uff0c\u6700\u7ec8\u5bfc\u81f4\u4e86\u4e00\u4e2a\u66f4\u5b89\u5168\u7684\u5e73\u53f0\u3002\n\n\n\n\n\u5965\u8fd0\u6d4b\u8bd5\u7f51\u7edc\u9884\u53d1\u5e03\n - \u7ef4\u5854\u5229\u514b\u7684\u535a\u6587\u8be6\u8ff0\u5965\u8fd0\u5956\u52b1\n\n\n\u5965\u8fd0\u5956\u52b1\u5ba3\u5e03\n - Vitalik\u7684\u535a\u5ba2\u5e16\u5b50\n\n\n\u9519\u8bef\u8d4f\u91d1\u8ba1\u5212\u542f\u52a8\n\n\n\u4ee5\u592a\u574a\u8d4f\u91d1\u8ba1\u5212\u7f51\u7ad9\n\n\n\u6700\u4f4e\u6743\u9650\u5ba1\u8ba1\u535a\u5ba2\u5e16\u5b50\n - \u5e76\u9644\u6709\u5ba1\u8ba1\u62a5\u544a\u7684\u94fe\u63a5\n\n\n\u5df2\u7ecfVu\u5ba1\u8ba1\u535a\u5ba2\u6587\u7ae0\n\n\n\n\n\u4ee5\u592a\u574a\u8fb9\u5883\u53d1\u5c04\n\n\nEthereum Frontier\u7f51\u7edc\u4e8e2015\u5e747\u670830\u65e5\u63a8\u51fa\uff0c\u5f00\u53d1\u4eba\u5458\u5f00\u59cb\u7f16\u5199\u667a\u80fd\u5408\u7ea6\n\u6b64\u5916\uff0c\u77ff\u5de5\u5f00\u59cb\u52a0\u5165\u4ee5\u592a\u574a\u7f51\u7edc\uff0c\u5e2e\u52a9\u5de9\u56fa\u4ee5\u592a\u574a\u533a\u5757\u94fe\uff0c\u5e76\u4ece\u91c7\u77ff\u533a\u5757\u4e2d\u8d5a\u53d6\u4e59\u919a\u3002\n\u5373\u4f7fFrontier\u53d1\u884c\u7248\u662fEthereum\u9879\u76ee\u4e2d\u7684\u7b2c\u4e00\u4e2a\u91cc\u7a0b\u7891\uff0c\u5e76\u88ab\u5f00\u53d1\u8005\u7528\u4f5c\u6d4b\u8bd5\u7248\u672c\uff0c\u4f46\u5b83\u5374\u6bd4\u4efb\u4f55\u4eba\u6240\u671f\u671b\u7684\u66f4\u6709\u80fd\u529b\u548c\u53ef\u9760\u6027\uff0c\u5f00\u53d1\u4eba\u5458\u5df2\u7ecf\u7740\u624b\u5236\u5b9a\u89e3\u51b3\u65b9\u6848\u5e76\u6539\u8fdb\u4ee5\u592a\u574a,\u751f\u6001\u7cfb\u7edf\u3002\n\u4e5f\u53ef\u4ee5\u770b\u770b\uff1a\n\n\n\n\n\u53d1\u5e03\u8ba1\u5212\u7684\u539f\u59cb\u516c\u544a\n by Vinay Gupta\n\n\n\u8fb9\u5883\u6765\u4e86\n -  Frontier launch announcement by Stephan Tual\n\n\n\u524d\u6cbf\u542f\u52a8\u6700\u540e\u6b65\u9aa4\n - Follow-up post to announcement\n\n\n\u4ee5\u592a\u574a\u5728Frontier\u53d1\u5c04\n\n\n\u8fb9\u5883\u7f51\u7ad9\n\n\n\n\nDEVCON-1\n\n\n\u7b2c\u4e8c\u6b21\u5f00\u53d1\u8005\u5927\u4f1a\nDEVCON-1\n\u4e8e2015\u5e7411\u6708\u521d\u5728\u4f26\u6566\u5e02\u4e3e\u884c\u3002\n\u4e3a\u671f5\u5929\u7684\u6d3b\u52a8\u6709100\u591a\u573a\u6f14\u8bb2\uff0c\u5c0f\u7ec4\u8ba8\u8bba\u548c\u95ea\u7535\u8c08\u8bdd\uff0c\u5438\u5f15\u4e86\u66f4\u591a\n\u4f1a\u8c08\u5168\u90e8\u8bb0\u5f55\u5728\u6848\uff0c\u5e76\n\u514d\u8d39\u63d0\u4f9b\n\n\n\u50cfUBS\uff0cIBM\u548c\u5fae\u8f6f\u8fd9\u6837\u7684\u5927\u516c\u53f8\u7684\u51fa\u73b0\u6e05\u695a\u5730\u8868\u660e\u4e86\u4f01\u4e1a\u5bf9\u4e2d\u56fd\u7684\u5174\u8da3\n\u5fae\u8f6f\u5ba3\u5e03\u5b83\u5c06\u63d0\u4f9b\n\u4ee5\u592a\u574a\u5728\u5176\u65b0\u7684\u533a\u5757\u94fe\u5373\u670d\u52a1\n\n\u4e0eDEVCON-1\u4e00\u8d77\uff0c\u5f53\u533a\u5757\u94fe\u6280\u672f\u6210\u4e3a\u4e3b\u6d41\uff0cEthereum\u6210\u4e3a\u4e3b\u6d41\u65f6\uff0c\u8fd9\u4e00\u5ba3\u5e03\u5c06\u88ab\u94ed\u8bb0\u3002\n\n\n\n\nDEVCON-1\u4f1a\u8c08Youtube\u64ad\u653e\u5217\u8868\n\n\nDEVCON-1\u7f51\u7ad9\n full listing of presentations with links to the slides if available.\n\n\n\n\n\u5386\u53f2\u8d44\u6e90\n\n\n\n\n\u4e00\u4e2a\u7b80\u5355\u7684\u56fe\u5f62\u65f6\u95f4\u8868", 
            "title": "\u4ee5\u592a\u7f51\u7684\u5386\u53f2"
        }, 
        {
            "location": "/introduction/history-of-ethereum/#_1", 
            "text": "\u5bf9\u4e8e\u6700\u8fd1\u7684\u5386\u53f2\u5e10\u6237\uff0c\u8bf7\u53c2\u9605 \u6cf0\u52d2\u00b7\u683c\u6797\u7684\u535a\u5ba2\u5e16\u5b50", 
            "title": "\u4ee5\u592a\u574a\u7684\u5386\u53f2"
        }, 
        {
            "location": "/introduction/history-of-ethereum/#_2", 
            "text": "Ethereum\u6700\u521d\u662f\u7531Vitalik Buterin\u4e8e2013\u5e74\u672b\u5728\u6bd4\u7279\u5e01\u793e\u533a\u7684\u7814\u7a76\u548c\u5de5\u4f5c\u6240\u5f62\u5bb9\u7684\u3002\n\u6b64\u540e\u4e0d\u4e45\uff0cVitalik\u53d1\u8868\u4e86 \u4ee5\u592a\u574a\u767d\u76ae\u4e66 \uff0c\u8be6\u7ec6\u63cf\u8ff0\u4e86\u4ee5\u592a\u574a\u534f\u8bae\u548c\u667a\u80fd\u5408\u7ea6\u67b6\u6784\u7684\u6280\u672f\u8bbe\u8ba1\u548c\u57fa\u672c\u539f\u7406\u3002\n2014\u5e741\u6708\uff0cEthereum\u5728\u7f8e\u56fd\u4f5b\u7f57\u91cc\u8fbe\u5dde\u8fc8\u963f\u5bc6\u7684\u5317\u7f8e\u6bd4\u7279\u5e01\u4f1a\u8bae\u4e0a\u7531Vitalik\u6b63\u5f0f\u5ba3\u5e03\u3002  \u5927\u7ea6\u5728\u90a3\u4e2a\u65f6\u5019\uff0cVitalik\u4e5f\u5f00\u59cb\u4e0eDr.\n\u52a0\u6587\u00b7\u4f0d\u5fb7\u548c\u5171\u540c\u521b\u7acb\u7684\u4ee5\u592a\u574a\u3002\n\u52302014\u5e744\u6708\uff0cGavin\u53d1\u8868\u4e86 Ethereum Yellow Paper \n\u901a\u8fc7\u9075\u5faa\u9ec4\u76ae\u4e66\u4e2d\u7684\u8be6\u7ec6\u89c4\u8303\uff0c\u4ee5\u592a\u574a\u5ba2\u6237\u7aef\u5df2\u7ecf\u5b9e\u73b0\u4e86\u4e03\u79cd\u7f16\u7a0b\u8bed\u8a00(C ++\uff0cGo\uff0cPython\uff0cJava\uff0cJavaScript\uff0cHaskell\uff0cRust)\uff0c\u5e76\u4e14\u5bfc\u81f4\u4e86\u66f4\u597d\u7684\u8f6f\u4ef6\u6574\u4f53\u3002   \u4ee5\u592a\u574a\u63a8\u51faCryptocurrency 2.0\u7f51\u7edc  - 2014\u5e741\u6708\u7684Coindesk\u6587\u7ae0\u5f00\u59cb  \u4ee5\u592a\u574a\u5ba3\u5e03bitcointalk  \u7ef4\u5854\u5229\u514b\u6700\u521d\u5ba3\u5e03\u7684\u6bd4\u7279\u5e01\u793e\u533a\u3002,\u67095000\u4e2a\u56de\u590d\u7684\u8bba\u575b\u7ebf\u7a0b\u3002", 
            "title": "\u76d7\u68a6\u7a7a\u95f4"
        }, 
        {
            "location": "/introduction/history-of-ethereum/#_3", 
            "text": "\u9664\u4e86\u4e3a\u4ee5\u592a\u574a\u5f00\u53d1\u8f6f\u4ef6\u4e4b\u5916\uff0c\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u52a0\u5bc6\u8d27\u5e01\u548c\u533a\u5757\u94fe\u7684\u80fd\u529b\u9700\u8981\u5927\u89c4\u6a21\u7684\u5f15\u5bfc\u5de5\u4f5c\uff0c\u4ee5\u4fbf\u7ec4\u88c5\u542f\u52a8\u548c\u8fd0\u884c\u6240\u9700\u7684\u8d44\u6e90\u3002\n\u4e3a\u4e86\u542f\u52a8\u4e00\u4e2a\u7531\u5f00\u53d1\u5546\uff0c\u77ff\u5de5\uff0c\u6295\u8d44\u8005\u548c\u5176\u4ed6\u5229\u76ca\u76f8\u5173\u8005\u7ec4\u6210\u7684\u5e9e\u5927\u7f51\u7edc\uff0c\u4ee5\u592a\u574a\u5ba3\u5e03\u8ba1\u5212\u5bf9\u4ee5\u592a\u574a\u7684\u8d27\u5e01\u5355\u4f4d - \u919a\u4ee4\u724c\u8fdb\u884c\u9884\u552e\u3002\n\u901a\u8fc7\u9884\u552e\u7b79\u96c6\u8d44\u91d1\u7684\u6cd5\u5f8b\u548c\u8d22\u52a1\u4e0a\u7684\u590d\u6742\u6027\u5bfc\u81f4\u4e86\u51e0\u4e2a\u6cd5\u5f8b\u5b9e\u4f53\uff0c\u5305\u62ec2014\u5e746\u6708\u5728\u745e\u58eb\u695a\u683c\u6210\u7acb\u7684[\u4ee5\u592a\u574a\u57fa\u91d1\u4f1a(\u57fa\u91d1\u4f1a(\u57fa\u91d1\u4f1a)] [\u57fa\u91d1\u4f1a] {\u89d2\u8272=\u201cref\u201d}\u3002  \u81ea\u4e8c\u96f6\u4e00\u56db\u5e74\u4e03\u6708\u8d77\uff0cEthereum\u901a\u8fc742\u5929\u516c\u5f00\u552e\u5356\u4e59\u919a\u7684\u9884\u552e\u65b9\u5f0f\u5206\u914d\u4e86\u4e59\u919a\u7684\u521d\u59cb\u5206\u914d\uff0c\u51c0\u989d\u8fbe31,591\u6bd4\u7279\u5e01\uff0c\u5f53\u65f6\u4ef7\u503c18,439,086\u7f8e\u5143\uff0c\u6362\u53d6\u7ea660,102,216\u4e59\u919a\u3002\n\u51fa\u552e\u7684\u7ed3\u679c\u6700\u521d\u662f\u7528\u6765\u507f\u8fd8\u6cd5\u5b9a\u503a\u52a1\uff0c\u4e5f\u662f\u4e3a\u4e86\u5f00\u53d1\u8005\u52aa\u529b\u7684\u51e0\u4e2a\u6708\u8fd8\u6ca1\u6709\u5f97\u5230\u8865\u507f\uff0c\u5e76\u4e3a\u4ee5\u592a\u574a\u7684\u6301\u7eed\u53d1\u5c55\u63d0\u4f9b\u8d44\u91d1\u3002   \u542f\u52a8\u4ee5\u592a\u9500\u552e  - \u4ee5\u592a\u574a\u535a\u5ba2\u4e0a\u7684\u539f\u521b\u5b98\u65b9\u58f0\u660e  \u6709\u5173\u9884\u552e\u7684\u7b80\u6d01\u7684\u4fe1\u606f\u4e30\u5bcc\u7684\u7edf\u8ba1\u9875\u9762  \u7531(\u4ece\u90a3\u4ee5\u540e\u4e0d\u6d3b\u52a8) Ether.Fund  \u6982\u8ff0\uff1a\u4ee5\u592a\u574a\u7684\u9996\u6b21\u516c\u5f00\u62cd\u5356  - \u6240\u6709\u5173\u4e8e\u4ee5\u592a\u9884\u552e\u7684\u7edf\u8ba1\u6570\u636e  \u9884\u552e\u7684\u6761\u6b3e\u548c\u6761\u4ef6", 
            "title": "\u4ee5\u592a\u574a\u57fa\u91d1\u4f1a\u548c\u4ee5\u8272\u5217\u9884\u552e"
        }, 
        {
            "location": "/introduction/history-of-ethereum/#eth-dev", 
            "text": "\u4ee5\u592a\u574a\u9884\u552e\u6210\u529f\u540e\uff0cEthereum\u7684\u53d1\u5c55\u5728\u4e00\u4e2a\u540d\u4e3aETH DEV\u7684\u975e\u76c8\u5229\u7ec4\u7ec7\u4e2d\u6b63\u5f0f\u5f62\u6210\uff0c\u8be5\u7ec4\u7ec7\u6839\u636eEthereum Suisse\u7684\u5408\u540c\u6765\u7ba1\u7406\u4ee5\u592a\u574a\u7684\u53d1\u5c55 -  Vitalik Buterin\uff0cGavin Wood\u548cJeffrey Wilcke\u662f,\u8be5\u7ec4\u7ec7\u3002\n\u5f00\u53d1\u4eba\u5458\u5bf9\u4ee5\u592a\u574a\u7684\u5174\u8da3\u5728\u6574\u4e2a2014\u5e74\u7a33\u6b65\u589e\u957f\uff0cETH DEV\u56e2\u961f\u4e3a\u5f00\u53d1\u793e\u533a\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u6982\u5ff5\u9a8c\u8bc1(PoC)\u7248\u672c\u3002\nETH DEV\u56e2\u961f\u5728 \u4ee5\u592a\u574a\u535a\u5ba2 \u9891\u7e41\u53d1\u5e03\u7684\u5e16\u5b50\u4e5f\u8ba9\u4eba\u5174\u594b\n\u5728Ethereum\u8bba\u575b\u548c\u4ee5\u592a\u7f51subreddit\u4e0a\u589e\u52a0\u7684\u6d41\u91cf\u548c\u4e0d\u65ad\u589e\u957f\u7684\u7528\u6237\u57fa\u7840\u8bc1\u660e\uff0c\u8be5\u5e73\u53f0\u6b63\u5728\u5438\u5f15\u5feb\u901f\u53d1\u5c55\u548c\u5fe0\u8bda\u7684\u5f00\u53d1\u8005\u793e\u533a\u3002\n\u8fd9\u4e00\u8d8b\u52bf\u4e00\u76f4\u6301\u7eed\u5230\u4eca\u5929\u3002", 
            "title": "ETH / DEV\u548c\u4ee5\u592a\u574a\u53d1\u5c55"
        }, 
        {
            "location": "/introduction/history-of-ethereum/#devcon-0", 
            "text": "2014\u5e7411\u6708\uff0cETH DEV\u7ec4\u7ec7\u4e86 DEVCON-0\u4e8b\u4ef6 \uff0c\u805a\u96c6\u4e86\u6765\u81ea\u5404\u5730\u7684Ethereum\u5f00\u53d1\u4eba\u5458,\u4e16\u754c\u5230\u67cf\u6797\u6765\u805a\u4f1a\u548c\u8ba8\u8bba\u4ee5\u592a\u574a\u6280\u672f\u7684\u5404\u79cd\u4e3b\u9898\u3002\nDEVcon-0\u7684\u4e00\u4e9b\u6f14\u8bb2\u548c\u4f1a\u8bae\u7a0d\u540e\u5c06\u63a8\u52a8\u91cd\u8981\u7684\u4e3e\u63aa\uff0c\u4f7f\u4ee5\u592a\u574a\u66f4\u53ef\u9760\uff0c\u66f4\u5b89\u5168\uff0c\u66f4\u53ef\u6269\u5c55\u3002\n\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u6b21\u6d3b\u52a8\u6fc0\u52b1\u4e86\u5f00\u53d1\u8005\u7ee7\u7eed\u52aa\u529b\u63a8\u51fa\u4ee5\u592a\u574a\u3002   DEVCON-0\u4f1a\u8bb2youtube\u64ad\u653e\u5217\u8868  DEVCON-0 reddit post  Gav\u7684DEV\u66f4\u65b0\u63d0\u53caDEVCON-0  DEVcon-0\u56de\u987e\u535a\u5ba2\u6587\u7ae0", 
            "title": "DEVCON-0"
        }, 
        {
            "location": "/introduction/history-of-ethereum/#devgrants", 
            "text": "2015\u5e744\u6708\uff0c\u5ba3\u5e03\u4e86\u201cDEVgrants\u8ba1\u5212\u201d(https://blog.ethereum.org/2015/04/07/devgrants-help/)\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e3a\u4ee5\u592a\u574a\u5e73\u53f0\u63d0\u4f9b\u6350\u6b3e\u7684\u8ba1\u5212\uff0c,\u5230\u57fa\u4e8eo\u7684\u9879\u76ee\n\u6570\u767e\u540d\u5f00\u53d1\u4eba\u5458\u5df2\u7ecf\u5728\u4e3aEthereum\u9879\u76ee\u548c\u5f00\u6e90\u9879\u76ee\u6295\u5165\u65f6\u95f4\u548c\u601d\u8003\u3002\n\u8be5\u8ba1\u5212\u65e8\u5728\u5956\u52b1\u548c\u652f\u6301\u8fd9\u4e9b\u5f00\u53d1\u8005\u7684\u8d21\u732e\u3002\nDEVgrants\u8ba1\u5212\u4eca\u5929\u7ee7\u7eed\u8fd0\u4f5c\uff0c\u8be5\u8ba1\u5212\u7684\u8d44\u91d1\u5df2\u4e8e2016\u5e741\u6708\u7eed\u7ea6\u3002   DEVGRANT\u9996\u6b21\u516c\u5e03  \u5728DEVCON-1\u4e0a\u516c\u5e03\u65b0\u7684\u8d44\u91d1  DEVgrants\u516c\u5171\u6d4b\u91cf\u5ba4  DEVgrants\u5728YouTube\u4e0a\u7531Wendell Davis\u5728DEVCON-1\u4e0a\u6f14\u8bb2", 
            "title": "DEVgrants\u7a0b\u5e8f"
        }, 
        {
            "location": "/introduction/history-of-ethereum/#_4", 
            "text": "\u6574\u4e2a2014\u5e74\u548c2015\u5e74\u7684\u53d1\u5c55\u7ecf\u5386\u4e86\u4e00\u7cfb\u5217\u7684\u6982\u5ff5\u53d1\u5e03\u8bc1\u660e\uff0c\u5bfc\u81f4\u7b2c\u4e5d\u5c4aPOC\u516c\u5f00\u6d4b\u8bd5\u7f51\uff0c\u88ab\u79f0\u4e3a\u5965\u8fd0\n\u5f00\u53d1\u8005\u793e\u533a \u88ab\u9080\u8bf7\u6d4b\u8bd5\u7f51\u7edc\u7684\u6781\u9650 \uff0c\u5e76\u5206\u914d\u4e86\u5927\u91cf\u7684\u5956\u91d1\u6765\u5956\u52b1\u90a3\u4e9b,\u6301\u6709\u5404\u79cd\u8bb0\u5f55\u6216\u4ee5\u67d0\u79cd\u65b9\u5f0f\u6210\u529f\u6253\u7834\u7cfb\u7edf\u3002\n\u73b0\u573a\u53d1\u5e03\u540e\u4e00\u4e2a\u6708\u6b63\u5f0f\u5ba3\u5e03 \u5956\u52b1 \u3002  \u57282015\u5e74\u521d\uff0c\u4e00\u4e2a \u4ee5\u592a\u574a\u5956\u52b1\u8ba1\u5212 \u53d1\u5e03\uff0c\u4e3a\u5728\u4ee5\u592a\u574a\u8f6f\u4ef6\u5806\u6808\u7684\u4efb\u4f55\u90e8\u5206\u627e\u5230\u6f0f\u6d1e\u63d0\u4f9bBTC\u5956\u52b1\u3002\n\u8fd9\u65e0\u7591\u6709\u52a9\u4e8e\u4ee5\u592a\u574a\u7684\u53ef\u9760\u6027\u548c\u5b89\u5168\u6027\u4ee5\u53ca\u4ee5\u592a\u574a\u5728\u6280\u672f\u65b9\u9762\u7684\u4fe1\u5fc3\u3002\n\u8d4f\u91d1\u8ba1\u5212\u76ee\u524d\u4ecd\u7136\u6d3b\u8dc3\uff0c\u5e76\u6ca1\u6709\u8ba1\u5212\u7ed3\u675f\u65e5\u671f\u3002  \u4ee5\u592a\u574a\u5b89\u5168\u5ba1\u8ba1\u59cb\u4e8e2014\u5e74\u5e95\uff0c\u6301\u7eed\u52302015\u5e74\u4e0a\u534a\u5e74\u3002\n\u4ee5\u592a\u574a\u59d4\u6258\u591a\u4e2a\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u5b89\u5168\u516c\u53f8\u5bf9\u6240\u6709\u534f\u8bae\u5173\u952e\u7ec4\u4ef6(Ethereum\u865a\u62df\u673a\uff0c\u7f51\u7edc\uff0c\u5de5\u4f5c\u8bc1\u660e)\u8fdb\u884c\u7aef\u5230\u7aef\u5ba1\u8ba1\u3002\n\u5ba1\u8ba1\u53d1\u73b0\u4e86\u518d\u6b21\u89e3\u51b3\u548c\u6d4b\u8bd5\u7684\u5b89\u5168\u95ee\u9898\uff0c\u6700\u7ec8\u5bfc\u81f4\u4e86\u4e00\u4e2a\u66f4\u5b89\u5168\u7684\u5e73\u53f0\u3002   \u5965\u8fd0\u6d4b\u8bd5\u7f51\u7edc\u9884\u53d1\u5e03  - \u7ef4\u5854\u5229\u514b\u7684\u535a\u6587\u8be6\u8ff0\u5965\u8fd0\u5956\u52b1  \u5965\u8fd0\u5956\u52b1\u5ba3\u5e03  - Vitalik\u7684\u535a\u5ba2\u5e16\u5b50  \u9519\u8bef\u8d4f\u91d1\u8ba1\u5212\u542f\u52a8  \u4ee5\u592a\u574a\u8d4f\u91d1\u8ba1\u5212\u7f51\u7ad9  \u6700\u4f4e\u6743\u9650\u5ba1\u8ba1\u535a\u5ba2\u5e16\u5b50  - \u5e76\u9644\u6709\u5ba1\u8ba1\u62a5\u544a\u7684\u94fe\u63a5  \u5df2\u7ecfVu\u5ba1\u8ba1\u535a\u5ba2\u6587\u7ae0", 
            "title": "\u5965\u8fd0\u6d4b\u8bd5\u7f51\uff0c\u9519\u8bef\u8d4f\u91d1\u548c\u5b89\u5168\u5ba1\u8ba1"
        }, 
        {
            "location": "/introduction/history-of-ethereum/#_5", 
            "text": "Ethereum Frontier\u7f51\u7edc\u4e8e2015\u5e747\u670830\u65e5\u63a8\u51fa\uff0c\u5f00\u53d1\u4eba\u5458\u5f00\u59cb\u7f16\u5199\u667a\u80fd\u5408\u7ea6\n\u6b64\u5916\uff0c\u77ff\u5de5\u5f00\u59cb\u52a0\u5165\u4ee5\u592a\u574a\u7f51\u7edc\uff0c\u5e2e\u52a9\u5de9\u56fa\u4ee5\u592a\u574a\u533a\u5757\u94fe\uff0c\u5e76\u4ece\u91c7\u77ff\u533a\u5757\u4e2d\u8d5a\u53d6\u4e59\u919a\u3002\n\u5373\u4f7fFrontier\u53d1\u884c\u7248\u662fEthereum\u9879\u76ee\u4e2d\u7684\u7b2c\u4e00\u4e2a\u91cc\u7a0b\u7891\uff0c\u5e76\u88ab\u5f00\u53d1\u8005\u7528\u4f5c\u6d4b\u8bd5\u7248\u672c\uff0c\u4f46\u5b83\u5374\u6bd4\u4efb\u4f55\u4eba\u6240\u671f\u671b\u7684\u66f4\u6709\u80fd\u529b\u548c\u53ef\u9760\u6027\uff0c\u5f00\u53d1\u4eba\u5458\u5df2\u7ecf\u7740\u624b\u5236\u5b9a\u89e3\u51b3\u65b9\u6848\u5e76\u6539\u8fdb\u4ee5\u592a\u574a,\u751f\u6001\u7cfb\u7edf\u3002\n\u4e5f\u53ef\u4ee5\u770b\u770b\uff1a   \u53d1\u5e03\u8ba1\u5212\u7684\u539f\u59cb\u516c\u544a  by Vinay Gupta  \u8fb9\u5883\u6765\u4e86  -  Frontier launch announcement by Stephan Tual  \u524d\u6cbf\u542f\u52a8\u6700\u540e\u6b65\u9aa4  - Follow-up post to announcement  \u4ee5\u592a\u574a\u5728Frontier\u53d1\u5c04  \u8fb9\u5883\u7f51\u7ad9", 
            "title": "\u4ee5\u592a\u574a\u8fb9\u5883\u53d1\u5c04"
        }, 
        {
            "location": "/introduction/history-of-ethereum/#devcon-1", 
            "text": "\u7b2c\u4e8c\u6b21\u5f00\u53d1\u8005\u5927\u4f1a DEVCON-1 \u4e8e2015\u5e7411\u6708\u521d\u5728\u4f26\u6566\u5e02\u4e3e\u884c\u3002\n\u4e3a\u671f5\u5929\u7684\u6d3b\u52a8\u6709100\u591a\u573a\u6f14\u8bb2\uff0c\u5c0f\u7ec4\u8ba8\u8bba\u548c\u95ea\u7535\u8c08\u8bdd\uff0c\u5438\u5f15\u4e86\u66f4\u591a\n\u4f1a\u8c08\u5168\u90e8\u8bb0\u5f55\u5728\u6848\uff0c\u5e76 \u514d\u8d39\u63d0\u4f9b  \u50cfUBS\uff0cIBM\u548c\u5fae\u8f6f\u8fd9\u6837\u7684\u5927\u516c\u53f8\u7684\u51fa\u73b0\u6e05\u695a\u5730\u8868\u660e\u4e86\u4f01\u4e1a\u5bf9\u4e2d\u56fd\u7684\u5174\u8da3\n\u5fae\u8f6f\u5ba3\u5e03\u5b83\u5c06\u63d0\u4f9b \u4ee5\u592a\u574a\u5728\u5176\u65b0\u7684\u533a\u5757\u94fe\u5373\u670d\u52a1 \n\u4e0eDEVCON-1\u4e00\u8d77\uff0c\u5f53\u533a\u5757\u94fe\u6280\u672f\u6210\u4e3a\u4e3b\u6d41\uff0cEthereum\u6210\u4e3a\u4e3b\u6d41\u65f6\uff0c\u8fd9\u4e00\u5ba3\u5e03\u5c06\u88ab\u94ed\u8bb0\u3002   DEVCON-1\u4f1a\u8c08Youtube\u64ad\u653e\u5217\u8868  DEVCON-1\u7f51\u7ad9  full listing of presentations with links to the slides if available.", 
            "title": "DEVCON-1"
        }, 
        {
            "location": "/introduction/history-of-ethereum/#_6", 
            "text": "\u4e00\u4e2a\u7b80\u5355\u7684\u56fe\u5f62\u65f6\u95f4\u8868", 
            "title": "\u5386\u53f2\u8d44\u6e90"
        }, 
        {
            "location": "/introduction/community/", 
            "text": "\u793e\u533a\n\n\n\u8bf7\u5728\u5f00\u59cb\u8ba8\u8bba\u6216\u63d0\u95ee\u65f6\u660e\u667a\u5730\u9009\u62e9\u4f60\u7684\u8bba\u575b\uff0c\u5e2e\u52a9\u4fdd\u6301\u6211\u4eec\u5404\u79cd\u8bba\u575b\u7684\u6574\u6d01\u3002\n\n\nReddit\n\n\nEthereum subreddit\n\u662f\u6700\u5177\u5305\u5bb9\u6027\u7684\u4ee5\u592a\u574a\u8bba\u575b\uff0c\u5927\u90e8\u5206\u7684\u793e\u533a\u8ba8\u8bba\u6b63\u5728\u8fdb\u884c\uff0c\u6838\u5fc3\u5f00\u53d1\u8005\u4e5f\u5728\u8fd9\u91cc\u5f00\u5c55\u6d3b\u52a8\u3002\n\u8fd9\u662f\u60a8\u7684\u65b0\u95fb\uff0c\u5a92\u4f53\u62a5\u9053\uff0c\u516c\u544a\uff0c\u5934\u8111\u98ce\u66b4\u7684\u901a\u7528\u8ba8\u8bba\u7684\u9996\u9009\u8bba\u575b\u3002\n\u4e00\u822c\u6765\u8bf4\uff0c\u4ee5\u592a\u574a\u4e0e\u66f4\u5e7f\u6cdb\u7684\u793e\u533a\u6709\u5173\u3002\n\n\n\u4e25\u683c\u6ca1\u6709\u4ef7\u683c\u8c08\u8bdd\n\n\n\u6b64\u5916\uff0c\u8fd9\u4e0d\u662f\u8981\u6c42\u4eb2\u81ea\u52a8\u624b\u5e2e\u52a9\u6216\u63d0\u51fa\u95ee\u9898\u7684\u7406\u60f3\u573a\u6240\uff0c\u60a8\u5e0c\u671b\u6709\u660e\u786e\u7684\u5373\u65f6\u7b54\u6848\uff08\u5206\u522b\u4f7f\u7528[gitter-rooms]\u548c[stack-exchange]\uff09\u3002\n\n\n\u5728\u53d1\u5e03\u4e4b\u524d\u9605\u8bfb\n\u4ee5\u592a\u574asubreddit\u89c4\u5219\n\u3002\n\n\n\u8fdb\u4e00\u6b65\u4e13\u95e8subreddits\uff1a\n\n\n\n\nEthTrader\n - Ether trading, price and market\n\n\nEtherMining\n - Ether mining discussion\n\n\nEthmarket\n - Marketplace for individuals looking to exchange goods and services for Ether\n\n\nEthinvestor\n - News and prospects for Ethereum investors. Following the long term trends in the Ethereum marketplace.\n\n\nethereumism/\n - A bit more ism, ostic, ical, ist and tinfoil hats, pyramids and crystal ball type of views - the ethereal side of Ethereum\n\n\n\n\n\u5806\u6808\u4ea4\u6362\n\n\n\u4ee5\u592a\u574a\u534f\u8bae\u6808\n\u662fQ\uff06A\u793e\u533a\u7684StackExchange\u7f51\u7edc\u7684\u4e00\u90e8\u5206\u3002\nStackExchange\u662f\u4e00\u4e2a\u514d\u8d39\u7684\u95ee\u7b54\u7f51\u7ad9\uff0c\u6240\u6709\u7684\u95ee\u9898\u548c\u7b54\u6848\u90fd\u4fdd\u5b58\u4e3a\u540e\u4eba\u3002\n\n\n\u8fd9\u662f\u8be2\u95ee\u6280\u672f\u95ee\u9898\u7684\u6700\u4f73\u5730\u70b9\u3002\n\u901a\u8fc7\u56de\u7b54\u95ee\u9898\u548c\u6536\u96c6\u4fe1\u8a89\u70b9\u6765\u5e2e\u52a9\u4f60\u7684\u540c\u80de\u3002\n\n\n\u683c\u5b50\u5ba4\n\n\nGitter\u662f\u6211\u4eec\u65e5\u5e38\u804a\u5929\u7684\u9996\u9009\u8bba\u575b\u3002\n\u8fd9\u662f\u865a\u62df\u7684\u5f00\u53d1\u7a7a\u95f4\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728\u8fd9\u91cc\u83b7\u5f97\u5feb\u901f\u7684\u5e2e\u52a9\uff0c\u5982\u679c\u9700\u8981\u7684\u8bdd\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u624b\u6301\u8bbe\u5907\n\n\nGitter\u4f7f\u7528Github\u5e10\u6237\uff0c\u63d0\u4f9bGithub\u96c6\u6210\uff08\u901a\u77e5\u62c9\u53d6\u8bf7\u6c42\u7b49\uff09\uff0c\u79c1\u4eba\u9891\u9053\uff0c\u63d0\u4f9b\u964d\u4ef7\u683c\u5f0f\u7b49\u7b49\u3002\n\n\n\u5927\u591a\u6570Gitter\u9891\u9053\u662f\u56f4\u7ed5\u7279\u5b9a\u7684\u5b58\u50a8\u5e93\u8fdb\u884c\u7ec4\u7ec7\u7684\u6216\u50cf\u7814\u7a76\u6216\u6cbb\u7406\u4e00\u822c\u7684\u8bdd\u9898\u3002\n\n\n\u8bf7\u9009\u62e9\u9002\u5f53\u7684\u623f\u95f4\uff0c\u5e76\u8ba8\u8bba\u4e3b\u9898\u3002\n\n\n\u8bf7\u53c2\u9605\n\u4ee5\u592a\u574a\u7ec4\u7ec7\u7684gitter\u5ba4\u7684\u5b8c\u6574\u5217\u8868\n.\n\n\n\u4ee5\u4e0b\u662f\u6d3b\u8dc3\u7684\u516c\u5171\u9891\u9053\u5217\u8868:\n\n\n\n\ngo-ethereum\n - about geth (and tools related to the go implementation)\n\n\ncpp-ethereum\n - about eth (and tools related to the C++ implementation)\n\n\nweb3.js\n - about web3.js, Ethereum JavaScript API library\n\n\nSolidity\n - The Solidity Contract-Oriented Programming Language\n\n\nserpent\n - The Serpent language for contract development\n\n\nmist\n - GUI dapp browser, official wallet app\n\n\nlight-client\n - about light client and the LES protocol\n\n\nresearch\n - Ethereum research - \ngovernance\n - about dev governance\n\n\nwhisper\n - anonymous datagram publishing\n\n\nswarm\n - decentralised content storage and distribution network\n\n\nEIPs\n - discussion of _Ethereum Improvement Proposals (EIPs)\n\n\nethereumjs-lib\n - a JavaScript library of core Ethereum functions\n\n\ndevp2p\n - \u00d0\u039eV\\'s p2p network protocol \n framework\n\n\n\n\n\u4ee5\u592a\u574a\u6539\u8fdb\u5efa\u8bae\uff08EIPs\uff09\n\n\nEIP\u8ba1\u5212\u7684\u76ee\u6807\u662f\u6210\u4e3a\u4e00\u4e2a\u6846\u67b6\uff0c\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u975e\u6b63\u5f0f\u7684\u4e1a\u52a1\u6d41\u7a0b\uff0c\u534f\u8c03\u534f\u8bae\u7684\u6539\u8fdb\u3002\n\u4eba\u4eec\u5e94\u8be5\u9996\u5148\u63d0\u51fa\u81ea\u5df1\u7684\u60f3\u6cd5\uff0c\u6216\u8005\u5411EIPs\u5b58\u50a8\u5e93\u63d0\u51fa\u8bf7\u6c42\u3002\n\u57fa\u672c\u8fc7\u6ee4\u540e\uff0c\u63d0\u6848\u5c06\u6536\u5230\u4e00\u4e2a\u6570\u5b57\uff0c\u5e76\u4ee5\u8349\u7a3f\u5f62\u5f0f\u53d1\u5e03\u3002\n\u8981\u4f7fEIP\u6d3b\u8dc3\u8d77\u6765\uff0c\u9700\u8981\u793e\u533a\u7684\u5171\u540c\u540c\u610f\u3002\n\u90a3\u4e9b\u63d0\u51fa\u4fee\u6539\u7684\u4eba\u5e94\u8be5\u8003\u8651\u5230\uff0c\u6700\u7ec8\u7684\u540c\u610f\u53ef\u80fd\u4f1a\u53d6\u51b3\u4e8e\u4ee5\u592a\u574a\u7528\u6237\u7684\u5171\u8bc6\u3002\n\u5173\u4e8eEIP\u7684\u8ba8\u8bba\uff0c\u8bf7\u4f7f\u7528\nEIG\u8ba8\u8bba\u7684gitter\u901a\u9053\n\u3002\n\n\n\n\nEIP\u51c6\u5219\u548c\u6837\u672cEIP\n\n\nEIP\u6a21\u677f\n\n\nEIP\u5b58\u50a8\u5e93\u548cREADME\n\n\nGIP\u9891\u9053\u8fdb\u884cEIP\u8ba8\u8bba\n\n\n\n\n\u805a\u4f1a\n\n\n\n\n\u5728Meetup\u4e0a\u6258\u7ba1\u7684\u76ee\u5f55\n\n\n\u4ee5\u592a\u574a\u8bba\u575b\u805a\u4f1a\u9891\u9053\n\n\n\n\n\u5f03\u7528\n\n\nSkype\n\n\n\u4e00\u4e9b\u793e\u533a\u8ba8\u8bba\u8bba\u575b\u4ecd\u7136\u4f7f\u7528Skype\u7684\u623f\u95f4\uff0c\u4f46\u662f\u6211\u4eec\u5e0c\u671b\u6446\u8131\u8fd9\u79cd\u60c5\u51b5\uff0c\u5e76\u9f13\u52b1\u4eba\u4eec\u4f7f\u7528[gitter]\uff08http://gitter.im\uff09\u6216[slack\n\n\n\u4ee5\u592a\u574a\u8bba\u575b\n\n\n\u65af\u8482\u82ac\u00b7\u56fe\u7684\u4f20\u5947[\u4ee5\u592a\u574a\u8bba\u575b]\uff08https://forum.ethereum.org/\uff09\u4e0d\u518d\u7ef4\u62a4\uff0c\u53ef\u80fd\u4f1a\u9000\u5f79\n\u6211\u4eec\u9f13\u52b1\u4eba\u4eec\u4f7f\u7528\u4e0a\u9762\u5217\u51fa\u7684\u5efa\u8bae\u66ff\u4ee3\u65b9\u6848\u4e4b\u4e00\u3002", 
            "title": "\u793e\u533a"
        }, 
        {
            "location": "/introduction/community/#_1", 
            "text": "\u8bf7\u5728\u5f00\u59cb\u8ba8\u8bba\u6216\u63d0\u95ee\u65f6\u660e\u667a\u5730\u9009\u62e9\u4f60\u7684\u8bba\u575b\uff0c\u5e2e\u52a9\u4fdd\u6301\u6211\u4eec\u5404\u79cd\u8bba\u575b\u7684\u6574\u6d01\u3002", 
            "title": "\u793e\u533a"
        }, 
        {
            "location": "/introduction/community/#reddit", 
            "text": "Ethereum subreddit \u662f\u6700\u5177\u5305\u5bb9\u6027\u7684\u4ee5\u592a\u574a\u8bba\u575b\uff0c\u5927\u90e8\u5206\u7684\u793e\u533a\u8ba8\u8bba\u6b63\u5728\u8fdb\u884c\uff0c\u6838\u5fc3\u5f00\u53d1\u8005\u4e5f\u5728\u8fd9\u91cc\u5f00\u5c55\u6d3b\u52a8\u3002\n\u8fd9\u662f\u60a8\u7684\u65b0\u95fb\uff0c\u5a92\u4f53\u62a5\u9053\uff0c\u516c\u544a\uff0c\u5934\u8111\u98ce\u66b4\u7684\u901a\u7528\u8ba8\u8bba\u7684\u9996\u9009\u8bba\u575b\u3002\n\u4e00\u822c\u6765\u8bf4\uff0c\u4ee5\u592a\u574a\u4e0e\u66f4\u5e7f\u6cdb\u7684\u793e\u533a\u6709\u5173\u3002  \u4e25\u683c\u6ca1\u6709\u4ef7\u683c\u8c08\u8bdd  \u6b64\u5916\uff0c\u8fd9\u4e0d\u662f\u8981\u6c42\u4eb2\u81ea\u52a8\u624b\u5e2e\u52a9\u6216\u63d0\u51fa\u95ee\u9898\u7684\u7406\u60f3\u573a\u6240\uff0c\u60a8\u5e0c\u671b\u6709\u660e\u786e\u7684\u5373\u65f6\u7b54\u6848\uff08\u5206\u522b\u4f7f\u7528[gitter-rooms]\u548c[stack-exchange]\uff09\u3002  \u5728\u53d1\u5e03\u4e4b\u524d\u9605\u8bfb \u4ee5\u592a\u574asubreddit\u89c4\u5219 \u3002  \u8fdb\u4e00\u6b65\u4e13\u95e8subreddits\uff1a   EthTrader  - Ether trading, price and market  EtherMining  - Ether mining discussion  Ethmarket  - Marketplace for individuals looking to exchange goods and services for Ether  Ethinvestor  - News and prospects for Ethereum investors. Following the long term trends in the Ethereum marketplace.  ethereumism/  - A bit more ism, ostic, ical, ist and tinfoil hats, pyramids and crystal ball type of views - the ethereal side of Ethereum", 
            "title": "Reddit"
        }, 
        {
            "location": "/introduction/community/#_2", 
            "text": "\u4ee5\u592a\u574a\u534f\u8bae\u6808 \u662fQ\uff06A\u793e\u533a\u7684StackExchange\u7f51\u7edc\u7684\u4e00\u90e8\u5206\u3002\nStackExchange\u662f\u4e00\u4e2a\u514d\u8d39\u7684\u95ee\u7b54\u7f51\u7ad9\uff0c\u6240\u6709\u7684\u95ee\u9898\u548c\u7b54\u6848\u90fd\u4fdd\u5b58\u4e3a\u540e\u4eba\u3002  \u8fd9\u662f\u8be2\u95ee\u6280\u672f\u95ee\u9898\u7684\u6700\u4f73\u5730\u70b9\u3002\n\u901a\u8fc7\u56de\u7b54\u95ee\u9898\u548c\u6536\u96c6\u4fe1\u8a89\u70b9\u6765\u5e2e\u52a9\u4f60\u7684\u540c\u80de\u3002", 
            "title": "\u5806\u6808\u4ea4\u6362"
        }, 
        {
            "location": "/introduction/community/#_3", 
            "text": "Gitter\u662f\u6211\u4eec\u65e5\u5e38\u804a\u5929\u7684\u9996\u9009\u8bba\u575b\u3002\n\u8fd9\u662f\u865a\u62df\u7684\u5f00\u53d1\u7a7a\u95f4\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728\u8fd9\u91cc\u83b7\u5f97\u5feb\u901f\u7684\u5e2e\u52a9\uff0c\u5982\u679c\u9700\u8981\u7684\u8bdd\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u624b\u6301\u8bbe\u5907  Gitter\u4f7f\u7528Github\u5e10\u6237\uff0c\u63d0\u4f9bGithub\u96c6\u6210\uff08\u901a\u77e5\u62c9\u53d6\u8bf7\u6c42\u7b49\uff09\uff0c\u79c1\u4eba\u9891\u9053\uff0c\u63d0\u4f9b\u964d\u4ef7\u683c\u5f0f\u7b49\u7b49\u3002  \u5927\u591a\u6570Gitter\u9891\u9053\u662f\u56f4\u7ed5\u7279\u5b9a\u7684\u5b58\u50a8\u5e93\u8fdb\u884c\u7ec4\u7ec7\u7684\u6216\u50cf\u7814\u7a76\u6216\u6cbb\u7406\u4e00\u822c\u7684\u8bdd\u9898\u3002  \u8bf7\u9009\u62e9\u9002\u5f53\u7684\u623f\u95f4\uff0c\u5e76\u8ba8\u8bba\u4e3b\u9898\u3002  \u8bf7\u53c2\u9605 \u4ee5\u592a\u574a\u7ec4\u7ec7\u7684gitter\u5ba4\u7684\u5b8c\u6574\u5217\u8868 .  \u4ee5\u4e0b\u662f\u6d3b\u8dc3\u7684\u516c\u5171\u9891\u9053\u5217\u8868:   go-ethereum  - about geth (and tools related to the go implementation)  cpp-ethereum  - about eth (and tools related to the C++ implementation)  web3.js  - about web3.js, Ethereum JavaScript API library  Solidity  - The Solidity Contract-Oriented Programming Language  serpent  - The Serpent language for contract development  mist  - GUI dapp browser, official wallet app  light-client  - about light client and the LES protocol  research  - Ethereum research -  governance  - about dev governance  whisper  - anonymous datagram publishing  swarm  - decentralised content storage and distribution network  EIPs  - discussion of _Ethereum Improvement Proposals (EIPs)  ethereumjs-lib  - a JavaScript library of core Ethereum functions  devp2p  - \u00d0\u039eV\\'s p2p network protocol   framework", 
            "title": "\u683c\u5b50\u5ba4"
        }, 
        {
            "location": "/introduction/community/#eips", 
            "text": "EIP\u8ba1\u5212\u7684\u76ee\u6807\u662f\u6210\u4e3a\u4e00\u4e2a\u6846\u67b6\uff0c\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u975e\u6b63\u5f0f\u7684\u4e1a\u52a1\u6d41\u7a0b\uff0c\u534f\u8c03\u534f\u8bae\u7684\u6539\u8fdb\u3002\n\u4eba\u4eec\u5e94\u8be5\u9996\u5148\u63d0\u51fa\u81ea\u5df1\u7684\u60f3\u6cd5\uff0c\u6216\u8005\u5411EIPs\u5b58\u50a8\u5e93\u63d0\u51fa\u8bf7\u6c42\u3002\n\u57fa\u672c\u8fc7\u6ee4\u540e\uff0c\u63d0\u6848\u5c06\u6536\u5230\u4e00\u4e2a\u6570\u5b57\uff0c\u5e76\u4ee5\u8349\u7a3f\u5f62\u5f0f\u53d1\u5e03\u3002\n\u8981\u4f7fEIP\u6d3b\u8dc3\u8d77\u6765\uff0c\u9700\u8981\u793e\u533a\u7684\u5171\u540c\u540c\u610f\u3002\n\u90a3\u4e9b\u63d0\u51fa\u4fee\u6539\u7684\u4eba\u5e94\u8be5\u8003\u8651\u5230\uff0c\u6700\u7ec8\u7684\u540c\u610f\u53ef\u80fd\u4f1a\u53d6\u51b3\u4e8e\u4ee5\u592a\u574a\u7528\u6237\u7684\u5171\u8bc6\u3002\n\u5173\u4e8eEIP\u7684\u8ba8\u8bba\uff0c\u8bf7\u4f7f\u7528 EIG\u8ba8\u8bba\u7684gitter\u901a\u9053 \u3002   EIP\u51c6\u5219\u548c\u6837\u672cEIP  EIP\u6a21\u677f  EIP\u5b58\u50a8\u5e93\u548cREADME  GIP\u9891\u9053\u8fdb\u884cEIP\u8ba8\u8bba", 
            "title": "\u4ee5\u592a\u574a\u6539\u8fdb\u5efa\u8bae\uff08EIPs\uff09"
        }, 
        {
            "location": "/introduction/community/#_4", 
            "text": "\u5728Meetup\u4e0a\u6258\u7ba1\u7684\u76ee\u5f55  \u4ee5\u592a\u574a\u8bba\u575b\u805a\u4f1a\u9891\u9053", 
            "title": "\u805a\u4f1a"
        }, 
        {
            "location": "/introduction/community/#_5", 
            "text": "", 
            "title": "\u5f03\u7528"
        }, 
        {
            "location": "/introduction/community/#skype", 
            "text": "\u4e00\u4e9b\u793e\u533a\u8ba8\u8bba\u8bba\u575b\u4ecd\u7136\u4f7f\u7528Skype\u7684\u623f\u95f4\uff0c\u4f46\u662f\u6211\u4eec\u5e0c\u671b\u6446\u8131\u8fd9\u79cd\u60c5\u51b5\uff0c\u5e76\u9f13\u52b1\u4eba\u4eec\u4f7f\u7528[gitter]\uff08http://gitter.im\uff09\u6216[slack", 
            "title": "Skype"
        }, 
        {
            "location": "/introduction/community/#_6", 
            "text": "\u65af\u8482\u82ac\u00b7\u56fe\u7684\u4f20\u5947[\u4ee5\u592a\u574a\u8bba\u575b]\uff08https://forum.ethereum.org/\uff09\u4e0d\u518d\u7ef4\u62a4\uff0c\u53ef\u80fd\u4f1a\u9000\u5f79\n\u6211\u4eec\u9f13\u52b1\u4eba\u4eec\u4f7f\u7528\u4e0a\u9762\u5217\u51fa\u7684\u5efa\u8bae\u66ff\u4ee3\u65b9\u6848\u4e4b\u4e00\u3002", 
            "title": "\u4ee5\u592a\u574a\u8bba\u575b"
        }, 
        {
            "location": "/introduction/foundation/", 
            "text": "\u4ee5\u592a\u574a\u57fa\u91d1\u4f1a\n\n\n\u4ee5\u592a\u574a\u57fa\u91d1\u4f1a\u662f\u4e00\u4e2a\u5728\u745e\u58eb\u6ce8\u518c\u7684\u975e\u8425\u5229\u6027\u7ec4\u7ec7\uff0c\u5176\u5b97\u65e8\u662f\u7ba1\u7406\u4ece\u4ee5\u592a\u574a\u51fa\u552e\u7684\u8d44\u91d1\uff0c\u4ee5\u4fbf\u4e3a\u4ee5\u592a\u574a\u548c\u5206\u6563\u5f0f\u6280\u672f\u751f\u6001\u7cfb\u7edf\u63d0\u4f9b\u6700\u4f73\u670d\u52a1\u3002\n\n\nStiftung Ethereum\u4e8e2014\u5e747\u6708\u5728\u745e\u58eb\u6210\u7acb\uff0c\u5176\u5b97\u65e8\u662f\u4fc3\u8fdb\u65b0\u6280\u672f\u548c\u5e94\u7528\u7684\u53d1\u5c55\uff0c\u7279\u522b\u662f\u5728\u65b0\u7684\u5f00\u653e\u5f0f\u548c\u5206\u6563\u5f0f\u8f6f\u4ef6\u67b6\u6784\u9886\u57df\u3002\n\n\n\u5206\u6743\u5f00\u653e\u6280\u672f\u7684\u57f9\u80b2\u548c\u57f9\u517b\u662f\u76ee\u6807\u3002\n\u4e3b\u5bfc\u800c\u975e\u6392\u4ed6\u6027\u7684\u91cd\u70b9\u662f\u4fc3\u8fdb\u4ee5\u592a\u574a\u8bae\u5b9a\u4e66\u53ca\u5176\u76f8\u5173\u6280\u672f\u7684\u53d1\u5c55\u4ee5\u53ca\u4f7f\u7528\u4ee5\u592a\u574a\u6280\u672f\u6216\u8bae\u5b9a\u4e66\u6765\u63a8\u5e7f\u548c\u652f\u6301\u5e94\u7528\u3002\nStiftung Ethereum\u8fd8\u5c06\u4ee5\u5404\u79cd\u5f62\u5f0f\u652f\u6301\u548c\u5021\u5bfc\u5206\u6563\u7684\u4e92\u8054\u7f51\u3002\n\n\n\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\n\u7f51\u7ad9\u4e0a\u7684\u57fa\u91d1\u4f1a\u7ba1\u7406\u56e2\u961f\n\n\n\u4ee5\u592a\u574a\u57fa\u91d1\u4f1a\u9762\u5411\u793e\u533a\n\n\n\n\n\u5b98\u65b9\u5bb6\u56ed\u7248\u7f51\u7ad9\n - \u4e3b\u8981\u5165\u53e3\u70b9\n\n\n\u4e66\u7b7e\u4ea4\u6613\n - \u770b[\u793e\u533a]\n\n\n\u535a\u5ba2\n\n\n\u63a8\u7279\n\n\n\u6cb9\u7ba1\n\n\n\u8138\u4e66\n - \u57fa\u672c\u4e0a\u6ca1\u6709\u4f7f\u7528\n\n\n\u7535\u5b50\u90ae\u4ef6\n - \u5982\u679c\u4f60\u5fc5\u987b\u4f7f\u7528\n\n\n\n\nOfficial communication from the Ethereum foundation most often comes in\nthe form of a comprehensive blogpost on the \nEthereum blog\n. Some of the posts there are\ntechnical, some organisational, some personal.\nAll blog posts are announced on \nTwitter\n and \nReddit\n.\n\n\nThe foundation \nYoutube channel\n hosts our videos,\nincluding all talks of the developers conferences DEVCON0 and DEVCON1.\n\n\n\u6709\u5173\u793e\u533a\u8ba8\u8bba\u8bba\u575b\uff0c\u8bf7\u53c2\u9605[\u793e\u533a]\u3002", 
            "title": "\u4ee5\u592a\u574a\u57fa\u91d1\u4f1a"
        }, 
        {
            "location": "/introduction/foundation/#_1", 
            "text": "\u4ee5\u592a\u574a\u57fa\u91d1\u4f1a\u662f\u4e00\u4e2a\u5728\u745e\u58eb\u6ce8\u518c\u7684\u975e\u8425\u5229\u6027\u7ec4\u7ec7\uff0c\u5176\u5b97\u65e8\u662f\u7ba1\u7406\u4ece\u4ee5\u592a\u574a\u51fa\u552e\u7684\u8d44\u91d1\uff0c\u4ee5\u4fbf\u4e3a\u4ee5\u592a\u574a\u548c\u5206\u6563\u5f0f\u6280\u672f\u751f\u6001\u7cfb\u7edf\u63d0\u4f9b\u6700\u4f73\u670d\u52a1\u3002  Stiftung Ethereum\u4e8e2014\u5e747\u6708\u5728\u745e\u58eb\u6210\u7acb\uff0c\u5176\u5b97\u65e8\u662f\u4fc3\u8fdb\u65b0\u6280\u672f\u548c\u5e94\u7528\u7684\u53d1\u5c55\uff0c\u7279\u522b\u662f\u5728\u65b0\u7684\u5f00\u653e\u5f0f\u548c\u5206\u6563\u5f0f\u8f6f\u4ef6\u67b6\u6784\u9886\u57df\u3002  \u5206\u6743\u5f00\u653e\u6280\u672f\u7684\u57f9\u80b2\u548c\u57f9\u517b\u662f\u76ee\u6807\u3002\n\u4e3b\u5bfc\u800c\u975e\u6392\u4ed6\u6027\u7684\u91cd\u70b9\u662f\u4fc3\u8fdb\u4ee5\u592a\u574a\u8bae\u5b9a\u4e66\u53ca\u5176\u76f8\u5173\u6280\u672f\u7684\u53d1\u5c55\u4ee5\u53ca\u4f7f\u7528\u4ee5\u592a\u574a\u6280\u672f\u6216\u8bae\u5b9a\u4e66\u6765\u63a8\u5e7f\u548c\u652f\u6301\u5e94\u7528\u3002\nStiftung Ethereum\u8fd8\u5c06\u4ee5\u5404\u79cd\u5f62\u5f0f\u652f\u6301\u548c\u5021\u5bfc\u5206\u6563\u7684\u4e92\u8054\u7f51\u3002  \u4e86\u89e3\u66f4\u591a\u5173\u4e8e \u7f51\u7ad9\u4e0a\u7684\u57fa\u91d1\u4f1a\u7ba1\u7406\u56e2\u961f", 
            "title": "\u4ee5\u592a\u574a\u57fa\u91d1\u4f1a"
        }, 
        {
            "location": "/introduction/foundation/#_2", 
            "text": "\u5b98\u65b9\u5bb6\u56ed\u7248\u7f51\u7ad9  - \u4e3b\u8981\u5165\u53e3\u70b9  \u4e66\u7b7e\u4ea4\u6613  - \u770b[\u793e\u533a]  \u535a\u5ba2  \u63a8\u7279  \u6cb9\u7ba1  \u8138\u4e66  - \u57fa\u672c\u4e0a\u6ca1\u6709\u4f7f\u7528  \u7535\u5b50\u90ae\u4ef6  - \u5982\u679c\u4f60\u5fc5\u987b\u4f7f\u7528   Official communication from the Ethereum foundation most often comes in\nthe form of a comprehensive blogpost on the  Ethereum blog . Some of the posts there are\ntechnical, some organisational, some personal.\nAll blog posts are announced on  Twitter  and  Reddit .  The foundation  Youtube channel  hosts our videos,\nincluding all talks of the developers conferences DEVCON0 and DEVCON1.  \u6709\u5173\u793e\u533a\u8ba8\u8bba\u8bba\u575b\uff0c\u8bf7\u53c2\u9605[\u793e\u533a]\u3002", 
            "title": "\u4ee5\u592a\u574a\u57fa\u91d1\u4f1a\u9762\u5411\u793e\u533a"
        }, 
        {
            "location": "/introduction/contributors/", 
            "text": "\u8d21\u732e\u8005\n\n\n\u672c\u6587\u6863\u7531Ethereum\u793e\u533a\u5171\u540c\u6784\u5efa\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u540d\u4e3a\n\u5bb6\u56ed\u7248\u6587\u6863\u8ba1\u5212\n\u7684\u9879\u76ee\u7684\u4e00\u90e8\u5206:\n\n\n\n\nViktor Tr\u00f3n (\"zelig\")\n\n\nHudson Jameson (\"Souptacular\")\n\n\n\n\n\u5b9e\u540d\u8d21\u732e\u8005\n\n\n\u6211\u4eec\u8981\u611f\u8c22\u6240\u6709\u4e3a\u8fd9\u4e2a\u9879\u76ee\u52aa\u529b\u7684\u4eba:\n\u8d21\u732e\u9875\u9762\n\n\n\n\nRicardo de Azevedo Brandao\n\n\nSantanu Barai\n\n\nBrooks Boyd\n\n\nRJ Catalano\n\n\nJoseph Chow\n\n\nKeri Clowes\n\n\nFran\u00e7ois Deppierraz\n\n\nBertie Dinneen\n\n\nGregg Dourgarian\n\n\nRaghav Dua\n\n\nErik Edrosa\n\n\nAndrey Fedorov\n\n\nRocky Fikki\n\n\nAlex Fisher\n\n\nEnrique Fynn\n\n\nArno Gaboury\n\n\nTaylor Gerring\n\n\nDave Hoover\n\n\nJo\u00ebl Hubert\n\n\nMakoto Inoue\n\n\nKeith Irwin\n\n\nMatthias K\u00e4ppler\n\n\nBas van Kervel\n\n\nMichael Kilday\n\n\nChandra Kumar\n\n\nGuangmian Kung\n\n\nHugh Lang\n\n\nYann Levreau\n\n\nRoman Mandeleil\n\n\nK\u00e9vin Maschtaler\n\n\nAndrew Mazzola\n\n\nDominik Miszkiewicz\n\n\nJohn Mooney\n\n\nSteven Natera\n\n\nChris Peel\n\n\nCraig Polley\n\n\nColm Ragu\n\n\nLaurent Raufaste\n\n\nChristian Reitwiessner\n\n\nJosh Stark\n\n\nScott Stevenson\n\n\nBob Summerwill\n\n\nAlex van de Sande\n\n\nPaul Schmitzer\n\n\nAfri Schoedon\n\n\nSudeep Singh\n\n\nConor Svensson\n\n\nGiacomo Tazzari\n\n\nBen Tannenbaum\n\n\nDean Alain Vernon\n\n\nDaniel Weinmann\n\n\nPaul Worrall\n\n\nHaoyu Yang\n\n\nLuca Zeug\n\n\nWeiyang Zhu\n\n\nWill Zeng\n\n\n\n\n\u533f\u540d\u8d21\u732e\u8005\uff1a\n\n\n\n\n12v\n\n\nana0\n\n\nc0d3inj3cT\n\n\nijcoe6ru\n\n\nLucaTony\n\n\nmadhancr\n\n\nmista66\n\n\nmWo\n\n\nOmkara\n\n\ntflux99\n\n\nTim H\n\n\nxyzether", 
            "title": "\u8d21\u732e\u8005"
        }, 
        {
            "location": "/introduction/contributors/#_1", 
            "text": "\u672c\u6587\u6863\u7531Ethereum\u793e\u533a\u5171\u540c\u6784\u5efa\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u540d\u4e3a \u5bb6\u56ed\u7248\u6587\u6863\u8ba1\u5212 \u7684\u9879\u76ee\u7684\u4e00\u90e8\u5206:   Viktor Tr\u00f3n (\"zelig\")  Hudson Jameson (\"Souptacular\")", 
            "title": "\u8d21\u732e\u8005"
        }, 
        {
            "location": "/introduction/contributors/#_2", 
            "text": "\u6211\u4eec\u8981\u611f\u8c22\u6240\u6709\u4e3a\u8fd9\u4e2a\u9879\u76ee\u52aa\u529b\u7684\u4eba: \u8d21\u732e\u9875\u9762   Ricardo de Azevedo Brandao  Santanu Barai  Brooks Boyd  RJ Catalano  Joseph Chow  Keri Clowes  Fran\u00e7ois Deppierraz  Bertie Dinneen  Gregg Dourgarian  Raghav Dua  Erik Edrosa  Andrey Fedorov  Rocky Fikki  Alex Fisher  Enrique Fynn  Arno Gaboury  Taylor Gerring  Dave Hoover  Jo\u00ebl Hubert  Makoto Inoue  Keith Irwin  Matthias K\u00e4ppler  Bas van Kervel  Michael Kilday  Chandra Kumar  Guangmian Kung  Hugh Lang  Yann Levreau  Roman Mandeleil  K\u00e9vin Maschtaler  Andrew Mazzola  Dominik Miszkiewicz  John Mooney  Steven Natera  Chris Peel  Craig Polley  Colm Ragu  Laurent Raufaste  Christian Reitwiessner  Josh Stark  Scott Stevenson  Bob Summerwill  Alex van de Sande  Paul Schmitzer  Afri Schoedon  Sudeep Singh  Conor Svensson  Giacomo Tazzari  Ben Tannenbaum  Dean Alain Vernon  Daniel Weinmann  Paul Worrall  Haoyu Yang  Luca Zeug  Weiyang Zhu  Will Zeng", 
            "title": "\u5b9e\u540d\u8d21\u732e\u8005"
        }, 
        {
            "location": "/introduction/contributors/#_3", 
            "text": "12v  ana0  c0d3inj3cT  ijcoe6ru  LucaTony  madhancr  mista66  mWo  Omkara  tflux99  Tim H  xyzether", 
            "title": "\u533f\u540d\u8d21\u732e\u8005\uff1a"
        }, 
        {
            "location": "/clients/", 
            "text": "\u9009\u62e9\u5ba2\u6237\u7aef\n\n\n\u4e3a\u4ec0\u4e48\u6709\u591a\u4e2a\u4ee5\u592a\u574a\u5ba2\u6237\uff1f\n\n\n\u4ece\u9879\u76ee\u65e9\u671f\u5f00\u59cb\uff0c\u5c31\u6709\u591a\u79cd\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u7684\u5ba2\u6237\u7aef\u5b9e\u73b0\u3002\n\u5ba2\u6237\u7684\u591a\u6837\u6027\u662f\u6574\u4e2a\u751f\u6001\u7cfb\u7edf\u7684\u5de8\u5927\u80dc\u5229\u3002\n\u5b83\u8ba9\u6211\u4eec\u9a8c\u8bc1\u534f\u8bae(\u5728\n\u9ec4\u76ae\u4e66\n\u4e2d\u6307\u5b9a)\u662f\u660e\u786e\u7684\u3002\n\u5b83\u4e3a\u65b0\u7684\u521b\u65b0\u655e\u5f00\u4e86\u5927\u95e8\u3002\n\u8fd9\u4f7f\u6211\u4eec\u90fd\u8bda\u5b9e\u3002\n\u7136\u800c\uff0c\u6700\u7ec8\u7528\u6237\u53ef\u80fd\u4f1a\u611f\u5230\u56f0\u60d1\uff0c\u56e0\u4e3a\u6ca1\u6709\u901a\u7528\u7684\u201c\u4ee5\u592a\u574a\u5b89\u88c5\u8005\u201d\u4f9b\u4ed6\u4eec\u4f7f\u7528\u3002\n\n\n\u622a\u81f32016\u5e749\u6708\uff0c\u9886\u5148\u7684\u5b9e\u65bd\u662f[go-ethereum]\u548c[Parity]\u3002\n\n\n\n\n\n\n\n\n\u5ba2\u6237\u7aef\n\n\n\u8bed\u8a00\n\n\n\u5f00\u53d1\u5546\n\n\n\u6700\u65b0\u7248\u672c\n\n\n\n\n\n\n\n\n\n\n[go-ethereum]\n\n\nGo\n\n\nEthereum Foundation\n\n\ngo-ethereum-v1.4.18\n\n\n\n\n\n\n[Parity]\n\n\nRust\n\n\nEthcore\n\n\nParity-v1.4.0\n\n\n\n\n\n\n[cpp-ethereum]\n\n\nC++\n\n\nEthereum Foundation\n\n\ncpp-ethereum-v1.3.0\n\n\n\n\n\n\n[pyethapp]\n\n\nPython\n\n\nEthereum Foundation\n\n\npyethapp-v1.5.0\n\n\n\n\n\n\n[ethereumjs-lib]\n\n\njs\n\n\nEthereum Foundation\n\n\nethereumjs-lib-v3.0.0\n\n\n\n\n\n\n[Ethereum(J)]\n\n\nJava\n\n\n\n\nethereumJ-v1.3.1\n\n\n\n\n\n\n[ruby-ethereum]\n\n\nRuby\n\n\nJan Xie\n\n\nruby-ethereum-v0.9.6\n\n\n\n\n\n\n[ethereumH]\n\n\nHaskell\n\n\nBlockApps\n\n\nno Homestead release yet\n\n\n\n\n\n\n\n\n\u6211\u5e94\u8be5\u5728\u684c\u9762/\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u5b89\u88c5\u4ec0\u4e48\uff1f\n\n\n\u5927\u591a\u6570\u7528\u6237\u53ef\u80fd\u4f1a\u5b89\u88c5\nMist / Ethereum\u94b1\u5305\n\uff0c\u8fd9\u5c06\u8db3\u591f\u6ee1\u8db3\u4ed6\u4eec\u7684\u9700\u6c42\u3002\n\n\n\u4ee5\u592a\u574a\u94b1\u5305\u662f\n Mist\u6d4f\u89c8\u5668\n\u7684\u201c\u5355\u4e00\u7684dapp\u201d\u90e8\u7f72\uff0c\u8fd9\u5c06\u662f\u5927\u90fd\u4f1a\u53d1\u5c55\u9636\u6bb5\u7684\u6838\u5fc3\uff0c\n\n\nMist\u5e26\u6709\u6346\u7ed1\u7684[go-ethereum]\u548c[cpp-ethereum]\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5982\u679c\u4f60\u5728Mist\u542f\u52a8\u65f6\u6ca1\u6709\u8fd0\u884c\u547d\u4ee4\u884c\u4ee5\u592a\u574a\u5ba2\u6237\u7aef\uff0c\n\u5982\u679c\u4f60\u60f3\u4f7f\u7528\u55b7Mist\u5947\u5076\uff0c\u6216\u8005\u5728\u4e13\u7528\u7f51\u7edc\u4e0a\u8fd0\u884c\u55b7Mist\uff0c\u53ea\u9700\u5728\u55b7Mist\u4e4b\u524d\u542f\u52a8\u8282\u70b9\uff0c\u800c\u55b7Mist\u5c06\u8fde\u63a5\u5230\u4f60\u7684\u8282\u70b9\n\n\nWork is underway to add Parity and other clients as \"first-class entities\" to Mist too.\n\n\n\u5982\u679c\u4f60\u60f3\u5728\u547d\u4ee4\u884c\u4e2d\u4e0eEthereum\u4ea4\u4e92\uff0c\u5e76\u5229\u7528Javascript\u63a7\u5236\u53f0\uff0c\u90a3\u4e48\u4f60\u5c06\u9700\u8981\u5b89\u88c5\u4e00\u4e2a\u5ba2\u6237\u7aef\n\u6309\u7167\u4e0a\u8868\u4e2d\u7684\u94fe\u63a5\u8fdb\u4e00\u6b65\u8bf4\u660e\u3002\n\n\n\u5982\u679c\u4f60\u60f3\u5f00\u91c7\uff0c\u90a3\u4e48Mist\u5c06\u662f\u4e0d\u591f\u7684\u3002\n\u67e5\u770b[\u91c7\u77ff]\u90e8\u5206\u3002\n\n\n\u6211\u5e94\u8be5\u5728\u624b\u673a/\u5e73\u677f\u7535\u8111\u4e0a\u5b89\u88c5\u4ec0\u4e48\uff1f\n\n\n\u6211\u4eec\u521a\u521a\u5f00\u59cb\u652f\u6301\u79fb\u52a8\u8bbe\u5907\u3002\nGo\u56e2\u961f\u6b63\u5728\u53d1\u5e03\u5b9e\u9a8c\u6027\u7684iOS\u548cAndroid\u5e93\uff0c\u4e00\u4e9b\u5f00\u53d1\u4eba\u5458\u6b63\u5728\u4f7f\u7528\u8fd9\u4e9b\u5e93\u5f00\u59cb\u5f15\u5bfc\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u8fd8\u6ca1\u6709\u4efb\u4f55\u53ef\u7528\u7684\u79fb\u52a8Ethereum\u5ba2\u6237\u7aef\u3002\n\n\n\u5728\u79fb\u52a8\u8bbe\u5907\u4e0a\u4f7f\u7528\u4ee5\u592a\u574a\u7684\u4e3b\u8981\u969c\u788d\u662fLight Client\u652f\u6301\u4ecd\u7136\u4e0d\u5b8c\u6574\u3002\n\u5df2\u7ecf\u5b8c\u6210\u7684\u5de5\u4f5c\u662f\u5728\u79c1\u4eba\u5206\u652f\uff0c\u53ea\u6709Go\u5ba2\u6237\u7aef\u53ef\u7528\u3002\ndoublethinkco\u5c06\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u6708\u5185\u5f00\u59cb\u4e3aC ++\u5ba2\u6237\u5f00\u53d1Light Client\u3002\n\n\n\u67e5\u770b\nStatus.im\n\uff0c\u6700\u521d\u4f7f\u7528\nethereumj-personal\n\u57fa\u4e8e[Ethereum(J) ,]\uff0c\u4f46\u6700\u8fd1\u7ffb\u8f6c\u5230\u4e0eLight Client\u4ea4\u53c9\u6784\u5efa\u3002\n\n\n\u6211\u5e94\u8be5\u5728\u6211\u7684SBC\u4e0a\u5b89\u88c5\u4ec0\u4e48\uff1f\n\n\n\u4f60\u6709\u4e00\u4e9b\u9009\u62e9\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u7684\u6280\u80fd\u6c34\u5e73\uff0c\u4ee5\u53ca\u4f60\u6b63\u5728\u505a\u4ec0\u4e48\u3002\n\n\n\n\n\u4e0b\u8f7d\u5b8c\u6574\u51c6\u5907\u7684\u56fe\u50cf(\u94fe\u63a5\u5230\u9875\u9762\uff0c\u63d0\u4f9b\u8be6\u7ec6\u7684\u4e0b\u8f7d\u548c\u5b89\u88c5\u8bf4\u660e)\n\n\n\u5982\u679c\u4f60\u662f\u65b0\u6765\u7684\u4ee5\u592a\u574a\u548cSBC\u8463\u4e8b\u4f1a\uff0c\u5982\u6811\u8393\u6d3e\uff0c\u90a3\u4e48\u8fd9\u662f\u7ed9\u4f60\u7684\uff01,\u53ea\u9700\u4e0b\u8f7d\u7279\u5b9a\u4e8e\u60a8\u6b63\u5728\u4f7f\u7528\u7684\u5f00\u53d1\u677f\u7684\u56fe\u50cf\uff0c\u5c06\u5176\u523b\u5f55\u5230SD\u5361\uff0c\u5f15\u5bfc\u8bbe\u5907\u5e76\u8fd0\u884c\u4ee5\u592a\u574a\uff01\n\n\n\u4e0b\u8f7d\u9884\u7f16\u8bd1\u7684\u5e94\u7528\u7a0b\u5e8f(\u94fe\u63a5\u5230\u9875\u9762\uff0c\u63d0\u4f9b\u8be6\u7ec6\u7684\u4e0b\u8f7d\u548c\u5b89\u88c5\u8bf4\u660e)\n\n\n\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e00\u4e2aSBC\u8fd0\u884c\uff0c\u5e76\u6709\u4e00\u4e2a\u7279\u5b9a\u7684\uff0c\u9996\u9009\u7684\u64cd\u4f5c\u7cfb\u7edf\u6216\u8bbe\u7f6e\uff0c\u4f60\u60f3\u4fdd\u6301\uff0c\u90a3\u4e48\u8fd9\u662f\u4f60\u6700\u597d\u7684\u9009\u62e9\uff01,\u6839\u636e\u5e73\u53f0\u7684\u4e0d\u540c\uff0c\u60a8\u53ef\u4ee5\u7b80\u5355\u5730\u4e0b\u8f7d\u76f8\u5e94\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5e76\u4e14\u53ea\u9700\u5c06\u5e93\u548cPATH\u8bbe\u7f6e\u7684\u94fe\u63a5\u6700\u5c0f\u5316\uff0c\u5c31\u53ef\u4ee5\u5728\u73b0\u6709\u73af\u5883\u4e2d\u8fd0\u884c\u4ee5\u592a\u574a\u3002\n\n\n\u4ece\u6e90\u4ee3\u7801\u4f7f\u7528\u53ef\u5b9a\u5236\u7684\u811a\u672c(\u94fe\u63a5\u5230\u66f4\u591a\u7684\u7ec6\u8282\u548c\u5355\u4e2aSBC\u94fe\u63a5\u5230\n\u94fe\u63a5\n)\n\n\n\u5e0c\u671b\u6267\u884c\u81ea\u5b9a\u4e49\u5b89\u88c5\uff1f,\u6211\u4eec\u6709\u811a\u672c\u53ef\u4ee5\u4ece\u201c\u5728\u8bbe\u5907\u4e0a\u201d\u8fdb\u884c\u7f16\u8bd1\u3002\u6211\u4eec\u7684\u811a\u672c\u5305\u542b\u81ea\u52a8\u5b89\u88c5\u7684\u4f9d\u8d56\u5173\u7cfb\u4ee5\u53ca\u5ba2\u6237\u7aef\u672c\u8eab\u3002\n    \u8fd9\u5c06\u5141\u8bb8\u60a8\u5b89\u88c5\u4ee5\u592a\u574a\u5ba2\u6237\u7aef\u7684\u7279\u5b9a\u7248\u672c(i.e.-\"develop\", \"master\", etc.), \u7f16\u8bd1\u4f60\u81ea\u5df1\u7684\u5206\u652f\u7248\u672c\u7684\u5ba2\u6237\u7aef, \u800c\u4e14\u4e00\u822c\u90fd\u662f\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d\u9519\u7efc\u590d\u6742\u7684\u3002\n\n\n\n\n\u4e0e\u5ba2\u6237\u4e92\u52a8\n\n\n\u4e3a\u4e86\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u4e0e\u4ee5\u592a\u574a\u5ba2\u6237\u7aef\u8fdb\u884c\u4ea4\u4e92\uff0c\u8bf7\u53c2\u9605[\u6b63\u5728\u8fde\u63a5\u5ba2\u6237\u7aef]\u90e8\u5206\u3002", 
            "title": "\u7b80\u4ecb"
        }, 
        {
            "location": "/clients/#_1", 
            "text": "", 
            "title": "\u9009\u62e9\u5ba2\u6237\u7aef"
        }, 
        {
            "location": "/clients/#_2", 
            "text": "\u4ece\u9879\u76ee\u65e9\u671f\u5f00\u59cb\uff0c\u5c31\u6709\u591a\u79cd\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u7684\u5ba2\u6237\u7aef\u5b9e\u73b0\u3002\n\u5ba2\u6237\u7684\u591a\u6837\u6027\u662f\u6574\u4e2a\u751f\u6001\u7cfb\u7edf\u7684\u5de8\u5927\u80dc\u5229\u3002\n\u5b83\u8ba9\u6211\u4eec\u9a8c\u8bc1\u534f\u8bae(\u5728 \u9ec4\u76ae\u4e66 \u4e2d\u6307\u5b9a)\u662f\u660e\u786e\u7684\u3002\n\u5b83\u4e3a\u65b0\u7684\u521b\u65b0\u655e\u5f00\u4e86\u5927\u95e8\u3002\n\u8fd9\u4f7f\u6211\u4eec\u90fd\u8bda\u5b9e\u3002\n\u7136\u800c\uff0c\u6700\u7ec8\u7528\u6237\u53ef\u80fd\u4f1a\u611f\u5230\u56f0\u60d1\uff0c\u56e0\u4e3a\u6ca1\u6709\u901a\u7528\u7684\u201c\u4ee5\u592a\u574a\u5b89\u88c5\u8005\u201d\u4f9b\u4ed6\u4eec\u4f7f\u7528\u3002  \u622a\u81f32016\u5e749\u6708\uff0c\u9886\u5148\u7684\u5b9e\u65bd\u662f[go-ethereum]\u548c[Parity]\u3002     \u5ba2\u6237\u7aef  \u8bed\u8a00  \u5f00\u53d1\u5546  \u6700\u65b0\u7248\u672c      [go-ethereum]  Go  Ethereum Foundation  go-ethereum-v1.4.18    [Parity]  Rust  Ethcore  Parity-v1.4.0    [cpp-ethereum]  C++  Ethereum Foundation  cpp-ethereum-v1.3.0    [pyethapp]  Python  Ethereum Foundation  pyethapp-v1.5.0    [ethereumjs-lib]  js  Ethereum Foundation  ethereumjs-lib-v3.0.0    [Ethereum(J)]  Java   ethereumJ-v1.3.1    [ruby-ethereum]  Ruby  Jan Xie  ruby-ethereum-v0.9.6    [ethereumH]  Haskell  BlockApps  no Homestead release yet", 
            "title": "\u4e3a\u4ec0\u4e48\u6709\u591a\u4e2a\u4ee5\u592a\u574a\u5ba2\u6237\uff1f"
        }, 
        {
            "location": "/clients/#_3", 
            "text": "\u5927\u591a\u6570\u7528\u6237\u53ef\u80fd\u4f1a\u5b89\u88c5 Mist / Ethereum\u94b1\u5305 \uff0c\u8fd9\u5c06\u8db3\u591f\u6ee1\u8db3\u4ed6\u4eec\u7684\u9700\u6c42\u3002  \u4ee5\u592a\u574a\u94b1\u5305\u662f  Mist\u6d4f\u89c8\u5668 \u7684\u201c\u5355\u4e00\u7684dapp\u201d\u90e8\u7f72\uff0c\u8fd9\u5c06\u662f\u5927\u90fd\u4f1a\u53d1\u5c55\u9636\u6bb5\u7684\u6838\u5fc3\uff0c  Mist\u5e26\u6709\u6346\u7ed1\u7684[go-ethereum]\u548c[cpp-ethereum]\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5982\u679c\u4f60\u5728Mist\u542f\u52a8\u65f6\u6ca1\u6709\u8fd0\u884c\u547d\u4ee4\u884c\u4ee5\u592a\u574a\u5ba2\u6237\u7aef\uff0c\n\u5982\u679c\u4f60\u60f3\u4f7f\u7528\u55b7Mist\u5947\u5076\uff0c\u6216\u8005\u5728\u4e13\u7528\u7f51\u7edc\u4e0a\u8fd0\u884c\u55b7Mist\uff0c\u53ea\u9700\u5728\u55b7Mist\u4e4b\u524d\u542f\u52a8\u8282\u70b9\uff0c\u800c\u55b7Mist\u5c06\u8fde\u63a5\u5230\u4f60\u7684\u8282\u70b9  Work is underway to add Parity and other clients as \"first-class entities\" to Mist too.  \u5982\u679c\u4f60\u60f3\u5728\u547d\u4ee4\u884c\u4e2d\u4e0eEthereum\u4ea4\u4e92\uff0c\u5e76\u5229\u7528Javascript\u63a7\u5236\u53f0\uff0c\u90a3\u4e48\u4f60\u5c06\u9700\u8981\u5b89\u88c5\u4e00\u4e2a\u5ba2\u6237\u7aef\n\u6309\u7167\u4e0a\u8868\u4e2d\u7684\u94fe\u63a5\u8fdb\u4e00\u6b65\u8bf4\u660e\u3002  \u5982\u679c\u4f60\u60f3\u5f00\u91c7\uff0c\u90a3\u4e48Mist\u5c06\u662f\u4e0d\u591f\u7684\u3002\n\u67e5\u770b[\u91c7\u77ff]\u90e8\u5206\u3002", 
            "title": "\u6211\u5e94\u8be5\u5728\u684c\u9762/\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u5b89\u88c5\u4ec0\u4e48\uff1f"
        }, 
        {
            "location": "/clients/#_4", 
            "text": "\u6211\u4eec\u521a\u521a\u5f00\u59cb\u652f\u6301\u79fb\u52a8\u8bbe\u5907\u3002\nGo\u56e2\u961f\u6b63\u5728\u53d1\u5e03\u5b9e\u9a8c\u6027\u7684iOS\u548cAndroid\u5e93\uff0c\u4e00\u4e9b\u5f00\u53d1\u4eba\u5458\u6b63\u5728\u4f7f\u7528\u8fd9\u4e9b\u5e93\u5f00\u59cb\u5f15\u5bfc\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u8fd8\u6ca1\u6709\u4efb\u4f55\u53ef\u7528\u7684\u79fb\u52a8Ethereum\u5ba2\u6237\u7aef\u3002  \u5728\u79fb\u52a8\u8bbe\u5907\u4e0a\u4f7f\u7528\u4ee5\u592a\u574a\u7684\u4e3b\u8981\u969c\u788d\u662fLight Client\u652f\u6301\u4ecd\u7136\u4e0d\u5b8c\u6574\u3002\n\u5df2\u7ecf\u5b8c\u6210\u7684\u5de5\u4f5c\u662f\u5728\u79c1\u4eba\u5206\u652f\uff0c\u53ea\u6709Go\u5ba2\u6237\u7aef\u53ef\u7528\u3002\ndoublethinkco\u5c06\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u6708\u5185\u5f00\u59cb\u4e3aC ++\u5ba2\u6237\u5f00\u53d1Light Client\u3002  \u67e5\u770b Status.im \uff0c\u6700\u521d\u4f7f\u7528 ethereumj-personal \u57fa\u4e8e[Ethereum(J) ,]\uff0c\u4f46\u6700\u8fd1\u7ffb\u8f6c\u5230\u4e0eLight Client\u4ea4\u53c9\u6784\u5efa\u3002", 
            "title": "\u6211\u5e94\u8be5\u5728\u624b\u673a/\u5e73\u677f\u7535\u8111\u4e0a\u5b89\u88c5\u4ec0\u4e48\uff1f"
        }, 
        {
            "location": "/clients/#sbc", 
            "text": "\u4f60\u6709\u4e00\u4e9b\u9009\u62e9\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u7684\u6280\u80fd\u6c34\u5e73\uff0c\u4ee5\u53ca\u4f60\u6b63\u5728\u505a\u4ec0\u4e48\u3002   \u4e0b\u8f7d\u5b8c\u6574\u51c6\u5907\u7684\u56fe\u50cf(\u94fe\u63a5\u5230\u9875\u9762\uff0c\u63d0\u4f9b\u8be6\u7ec6\u7684\u4e0b\u8f7d\u548c\u5b89\u88c5\u8bf4\u660e)  \u5982\u679c\u4f60\u662f\u65b0\u6765\u7684\u4ee5\u592a\u574a\u548cSBC\u8463\u4e8b\u4f1a\uff0c\u5982\u6811\u8393\u6d3e\uff0c\u90a3\u4e48\u8fd9\u662f\u7ed9\u4f60\u7684\uff01,\u53ea\u9700\u4e0b\u8f7d\u7279\u5b9a\u4e8e\u60a8\u6b63\u5728\u4f7f\u7528\u7684\u5f00\u53d1\u677f\u7684\u56fe\u50cf\uff0c\u5c06\u5176\u523b\u5f55\u5230SD\u5361\uff0c\u5f15\u5bfc\u8bbe\u5907\u5e76\u8fd0\u884c\u4ee5\u592a\u574a\uff01  \u4e0b\u8f7d\u9884\u7f16\u8bd1\u7684\u5e94\u7528\u7a0b\u5e8f(\u94fe\u63a5\u5230\u9875\u9762\uff0c\u63d0\u4f9b\u8be6\u7ec6\u7684\u4e0b\u8f7d\u548c\u5b89\u88c5\u8bf4\u660e)  \u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e00\u4e2aSBC\u8fd0\u884c\uff0c\u5e76\u6709\u4e00\u4e2a\u7279\u5b9a\u7684\uff0c\u9996\u9009\u7684\u64cd\u4f5c\u7cfb\u7edf\u6216\u8bbe\u7f6e\uff0c\u4f60\u60f3\u4fdd\u6301\uff0c\u90a3\u4e48\u8fd9\u662f\u4f60\u6700\u597d\u7684\u9009\u62e9\uff01,\u6839\u636e\u5e73\u53f0\u7684\u4e0d\u540c\uff0c\u60a8\u53ef\u4ee5\u7b80\u5355\u5730\u4e0b\u8f7d\u76f8\u5e94\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5e76\u4e14\u53ea\u9700\u5c06\u5e93\u548cPATH\u8bbe\u7f6e\u7684\u94fe\u63a5\u6700\u5c0f\u5316\uff0c\u5c31\u53ef\u4ee5\u5728\u73b0\u6709\u73af\u5883\u4e2d\u8fd0\u884c\u4ee5\u592a\u574a\u3002  \u4ece\u6e90\u4ee3\u7801\u4f7f\u7528\u53ef\u5b9a\u5236\u7684\u811a\u672c(\u94fe\u63a5\u5230\u66f4\u591a\u7684\u7ec6\u8282\u548c\u5355\u4e2aSBC\u94fe\u63a5\u5230 \u94fe\u63a5 )  \u5e0c\u671b\u6267\u884c\u81ea\u5b9a\u4e49\u5b89\u88c5\uff1f,\u6211\u4eec\u6709\u811a\u672c\u53ef\u4ee5\u4ece\u201c\u5728\u8bbe\u5907\u4e0a\u201d\u8fdb\u884c\u7f16\u8bd1\u3002\u6211\u4eec\u7684\u811a\u672c\u5305\u542b\u81ea\u52a8\u5b89\u88c5\u7684\u4f9d\u8d56\u5173\u7cfb\u4ee5\u53ca\u5ba2\u6237\u7aef\u672c\u8eab\u3002\n    \u8fd9\u5c06\u5141\u8bb8\u60a8\u5b89\u88c5\u4ee5\u592a\u574a\u5ba2\u6237\u7aef\u7684\u7279\u5b9a\u7248\u672c(i.e.-\"develop\", \"master\", etc.), \u7f16\u8bd1\u4f60\u81ea\u5df1\u7684\u5206\u652f\u7248\u672c\u7684\u5ba2\u6237\u7aef, \u800c\u4e14\u4e00\u822c\u90fd\u662f\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d\u9519\u7efc\u590d\u6742\u7684\u3002", 
            "title": "\u6211\u5e94\u8be5\u5728\u6211\u7684SBC\u4e0a\u5b89\u88c5\u4ec0\u4e48\uff1f"
        }, 
        {
            "location": "/clients/#_5", 
            "text": "\u4e3a\u4e86\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u4e0e\u4ee5\u592a\u574a\u5ba2\u6237\u7aef\u8fdb\u884c\u4ea4\u4e92\uff0c\u8bf7\u53c2\u9605[\u6b63\u5728\u8fde\u63a5\u5ba2\u6237\u7aef]\u90e8\u5206\u3002", 
            "title": "\u4e0e\u5ba2\u6237\u4e92\u52a8"
        }, 
        {
            "location": "/clients/cpp-ethereum/", 
            "text": "cpp-ethereum\n\n\n \n\n\n\u5feb\u901f\u5f00\u59cb\n\n\n\n\n\u6b22\u8fce\u6765\u5230\u4ee5\u592a\u574aC ++\u9879\u76ee:-)\n\n\n\u8fd9\u4e2a\u9879\u76ee\u7684GitHub\u4ed3\u5e93\u662f\nethereum/cpp-ethereum\n\n\n\u81ea\u52a8\u5316\u5728\nAppveyor\n\u548c\nTravisCI\n\u4e0a\u8fd0\u884c\u3002\n\n\n\u6211\u4eec\u6709[\u5b89\u88c5\u4e8c\u8fdb\u5236\u6587\u4ef6]\u548c[\u4ece\u6e90\u4ee3\u7801\u6784\u5efa]\u7684\u6307\u4ee4\u3002\n\n\n\u5927\u591a\u6570\u9879\u76ee\u4ea4\u6d41\u53d1\u751f\u5728\u6211\u4eec\u7684\n\u7528\u6237\n\u548c\nDeveloper\nGitter\u6e20\u9053\u3002\n\n\n\u95ee\u9898\u5728\u6211\u4eec\u7684\nGithub\u95ee\u9898\u8ddf\u8e2a\u5668\n\u4e2d\u8fdb\u884c\u8ddf\u8e2a\u3002\n\n\ncpp-ethereum\u662f\u975e\u5e38\u4fbf\u643a\u7684\uff0c\u7528\u4e8e\n\u975e\u5e38\u5e7f\u6cdb\u7684\u5e73\u53f0\n.", 
            "title": "\u6982\u8ff0"
        }, 
        {
            "location": "/clients/cpp-ethereum/#cpp-ethereum", 
            "text": "", 
            "title": "cpp-ethereum"
        }, 
        {
            "location": "/clients/cpp-ethereum/#_1", 
            "text": "\u6b22\u8fce\u6765\u5230\u4ee5\u592a\u574aC ++\u9879\u76ee:-)  \u8fd9\u4e2a\u9879\u76ee\u7684GitHub\u4ed3\u5e93\u662f ethereum/cpp-ethereum  \u81ea\u52a8\u5316\u5728 Appveyor \u548c TravisCI \u4e0a\u8fd0\u884c\u3002  \u6211\u4eec\u6709[\u5b89\u88c5\u4e8c\u8fdb\u5236\u6587\u4ef6]\u548c[\u4ece\u6e90\u4ee3\u7801\u6784\u5efa]\u7684\u6307\u4ee4\u3002  \u5927\u591a\u6570\u9879\u76ee\u4ea4\u6d41\u53d1\u751f\u5728\u6211\u4eec\u7684 \u7528\u6237 \u548c Developer Gitter\u6e20\u9053\u3002  \u95ee\u9898\u5728\u6211\u4eec\u7684 Github\u95ee\u9898\u8ddf\u8e2a\u5668 \u4e2d\u8fdb\u884c\u8ddf\u8e2a\u3002  cpp-ethereum\u662f\u975e\u5e38\u4fbf\u643a\u7684\uff0c\u7528\u4e8e \u975e\u5e38\u5e7f\u6cdb\u7684\u5e73\u53f0 .", 
            "title": "\u5feb\u901f\u5f00\u59cb"
        }, 
        {
            "location": "/clients/cpp-ethereum/current-status/", 
            "text": "\u5f53\u524d\u72b6\u6001\n\n\n\u6211\u4eec\u5b9a\u671f\u5728\n\u5b98\u65b9\u4ee5\u592a\u7f51\u535a\u5ba2\n\u548c\u5176\u4ed6\u5730\u65b9\u53d1\u5e03\u5173\u4e8e\u4ee3\u7801\u5e93\u7684\u535a\u5ba2\u3002\n\u4ee5\u4e0b\u662f\u5f00\u53d1\u56e2\u961f\u6700\u8fd1\u7684\u4e00\u4e9b\u6587\u7ae0\uff1a\n\n\n\n\n\u4ee5\u592a\u574aDEV\u66f4\u65b0\uff1aC ++\u8def\u7ebf\u56fe\n(February 2016)\n\n\nC ++ DEV\u66f4\u65b0\uff1a\u5ba3\u5e03\u6df7\u97f3\n(May 2016)\n\n\nC ++ DEV\u66f4\u65b0 - \u4e03\u6708\u7248\n(July 2016)\n\n\n\u4ee5\u592a\u574a\u65e0\u5904\u4e0d\u5728\n(July 2016)\n\n\nC ++\u91cd\u65b0\u6388\u6743\u8ba1\u5212\n(July 2016)\n\n\n\n\nWe \nsimplified the project naming\n at Homestead (March 2016), although some naming shadows of the past still linger. With the homecoming we have another name to retire - \nwebthree-umbrella\n.\n\n\nAt the time of writing (August 2016), we are just completing our \\\"Homecoming\\\", where the code has been reconsolidated into the \nethereum/cpp-ethereum\n repository. From October 2015 until August 2016 it was split across multiple repositories under \nethereum/webthree-umbrella\n\n\nThe re-licensing plan is the culmination of a very long-term plan to \nliberalize the core\n.An effort was begun in 2015 to re-license the cpp-ethereum core as MIT, but it was never completed.\n\n\nThis is a revival of that effort, especially with a view towards the potential for collaboration with the \nLinux Foundation\n\\'s \nHyperledger\n project, and with other corporations outside of Hyperledger who wish to build Ethereum private/consortium chain solutions similar to \nHydraChain\n. The \nRubix by Deloitte\n project is an example of that approach.", 
            "title": "\u5f53\u524d\u72b6\u6001"
        }, 
        {
            "location": "/clients/cpp-ethereum/current-status/#_1", 
            "text": "\u6211\u4eec\u5b9a\u671f\u5728 \u5b98\u65b9\u4ee5\u592a\u7f51\u535a\u5ba2 \u548c\u5176\u4ed6\u5730\u65b9\u53d1\u5e03\u5173\u4e8e\u4ee3\u7801\u5e93\u7684\u535a\u5ba2\u3002\n\u4ee5\u4e0b\u662f\u5f00\u53d1\u56e2\u961f\u6700\u8fd1\u7684\u4e00\u4e9b\u6587\u7ae0\uff1a   \u4ee5\u592a\u574aDEV\u66f4\u65b0\uff1aC ++\u8def\u7ebf\u56fe (February 2016)  C ++ DEV\u66f4\u65b0\uff1a\u5ba3\u5e03\u6df7\u97f3 (May 2016)  C ++ DEV\u66f4\u65b0 - \u4e03\u6708\u7248 (July 2016)  \u4ee5\u592a\u574a\u65e0\u5904\u4e0d\u5728 (July 2016)  C ++\u91cd\u65b0\u6388\u6743\u8ba1\u5212 (July 2016)   We  simplified the project naming  at Homestead (March 2016), although some naming shadows of the past still linger. With the homecoming we have another name to retire -  webthree-umbrella .  At the time of writing (August 2016), we are just completing our \\\"Homecoming\\\", where the code has been reconsolidated into the  ethereum/cpp-ethereum  repository. From October 2015 until August 2016 it was split across multiple repositories under  ethereum/webthree-umbrella  The re-licensing plan is the culmination of a very long-term plan to  liberalize the core .An effort was begun in 2015 to re-license the cpp-ethereum core as MIT, but it was never completed.  This is a revival of that effort, especially with a view towards the potential for collaboration with the  Linux Foundation \\'s  Hyperledger  project, and with other corporations outside of Hyperledger who wish to build Ethereum private/consortium chain solutions similar to  HydraChain . The  Rubix by Deloitte  project is an example of that approach.", 
            "title": "\u5f53\u524d\u72b6\u6001"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/", 
            "text": "\u4ece\u6e90\u5934\u5efa\u8bbe\n\n\n\u6982\u89c2\n\n\nThe \ncpp-ethereum\n codebase lives on Github.com in the \ncpp-ethereum\n repository.\n\n\nBetween October 2015 and August 2016 it was split into various repositories which were grouped as sub-modules under the \nwebthree-umbrella\n repository, and you will likely see many references to \nwebthree-umbrella\n online. Those all refer to the \ncpp-ethereum\n\ncodebase during that period of its development.\n\n\nWe use a common \nCMake\n build system to generate platform-specific build files, meaning that the workflow is very similar whatever operating system you use:\n\n\n\n\nInstall build tools and external packages (these are platform     dependent)\n\n\nClone the source code from the \nwebthree-umbrella\n git repository\n\n\nRun CMake to generate a build file (makefile, Visual Studio     solution, etc)\n\n\nBuild it\n\n\n\n\n\u5e73\u53f0\u7279\u5b9a\u7684\u8bf4\u660e\n\n\n::: {.toctree}\nlinux.rst\nwindows.rst\nmacos.rst\nfreebsd.rst\nandroid.rst\nios.rst\nrpi.rst\nodroid.rst\nbeaglebone.rst\nwandboard.rst\nlinux-arm.rst\n:::", 
            "title": "\u6982\u8ff0"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/#_1", 
            "text": "", 
            "title": "\u4ece\u6e90\u5934\u5efa\u8bbe"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/#_2", 
            "text": "The  cpp-ethereum  codebase lives on Github.com in the  cpp-ethereum  repository.  Between October 2015 and August 2016 it was split into various repositories which were grouped as sub-modules under the  webthree-umbrella  repository, and you will likely see many references to  webthree-umbrella  online. Those all refer to the  cpp-ethereum \ncodebase during that period of its development.  We use a common  CMake  build system to generate platform-specific build files, meaning that the workflow is very similar whatever operating system you use:   Install build tools and external packages (these are platform     dependent)  Clone the source code from the  webthree-umbrella  git repository  Run CMake to generate a build file (makefile, Visual Studio     solution, etc)  Build it", 
            "title": "\u6982\u89c2"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/#_3", 
            "text": "::: {.toctree}\nlinux.rst\nwindows.rst\nmacos.rst\nfreebsd.rst\nandroid.rst\nios.rst\nrpi.rst\nodroid.rst\nbeaglebone.rst\nwandboard.rst\nlinux-arm.rst\n:::", 
            "title": "\u5e73\u53f0\u7279\u5b9a\u7684\u8bf4\u660e"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/linux/", 
            "text": "Linux\u6784\u5efa\n\n\n\u83b7\u53d6\u6e90\u4ee3\u7801\n\n\n\u6211\u4eec\u4f7f\u7528git\u548cGitHub\u6765\u7ef4\u62a4\u6e90\u4ee3\u7801,\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u514b\u9686\u5b58\u50a8\u5e93\uff1a\n\n\ngit clone --recursive https://github.com/ethereum/cpp-ethereum.git\n\ncd\n cpp-ethereum\n\n\n\n\nThe \n--recursive\n option is important. It orders git to clone additional submodules which are required to build the project. If you missed it you can correct your mistake with command \ngit submodule update --init\n.\n\n\nCMake\n\n\nWe use CMake to control the build configuration of the project. Quite recent version of CMake is required (at the time of writing 3.4 is the minimum). We recommend installing CMake by downloading and unpacking the binary distribution of the latest version available on the download page:\n\n\nhttps://cmake.org/download/\n\n\n\n\nAlternative method\n\n\nThe repository contains the script\n\ninstall_cmake.sh\n\nthat downloads a fixed version of CMake and unpacks it to the given\ndirectory prefix. Example usage\n\nscripts/install_cmake.sh --prefix /usr/local\n.\n\n\n\n\n\u5b89\u88c5\u4f9d\u8d56\u5173\u7cfb\n\n\nThe following \nlibraries\n are required to be installed in the system:\n\n\n\n\nboost\n\n\nleveldb\n\n\ncurl\n\n\nmicrohttpd\n\n\nminiupnp\n\n\ngmp\n\n\n\n\nThey usually can be installed using distribution-specific package\nmanager. For example on Debian-based systems:\n\n\nsudo apt-get install libboost-all-dev libleveldb-dev libcurl4-openssl-dev libmicrohttpd-dev libminiupnpc-dev libgmp-dev\n\n\n\n\n\nor on RedHat-based systems:\n\n\ndnf install boost-devel leveldb-devel curl-devel libmicrohttpd-devel miniupnpc-devel gmp-devel\n\n\n\n\n\nLinux has a horror-show of fragmentation when it comes to packaging\nsystems.\n\n\nWe support a \n\\\"one-button\\\" bash script\n which attempts to make this minefield more navigable for users of common distros. It identifies your distro and installs the external packages which you will need, using whatever combination of package servers and build-from-source is required for your specific distro version. This is a non-trivial task, but by that token is also something which we don\\'t want anybody to have to replicate themselves.\n\n\nscripts/install_deps.sh\n\n\n\n\nWe use the same script for automated builds and continuous integration, so it is continuously tested, which is especially important on MacOS, where Homebrew is a constantly moving target.\n\n\nIf you try it, and it doesn\\'t work for you, please \nreport the problem\n with details of your distro, your version number and any other important details and we can work together to get it working for your use-case. We have manual instructions for Fedora, openSUSE and Arch Linux (see below). If you using some other distro then please contact us and we\\'ll see if we can get you going.\n\n\n::: {.toctree}\nlinux-fedora.rst linux-opensuse.rst linux-arch.rst\n:::\n\n\n\u5efa\u7acb\u5728\u547d\u4ee4\u884c\u4e0a\n\n\nWhen you have installed your dependencies you can build.\n\n\nmkdir build                                              Make a directory \nfor\n the build output\n\ncd\n build                                                 Switch into that directory\n\ncmake ..                                                 To generate a makefile.\nmake                                                     To build that makefile on the command-line\nmake -j\nnumber\n                                          \n(\nor\n)\n Execute makefile with multiple cores in parallel\n\n\n\n\n32\u4f4d\u7684Linux\u7248\u672c\n\n\nWe have cpp-ethereum building and running successfully on many 32-bit Linux distros, with the main constraint being the availability of external dependencies in 32-bit variants. Probably the most active demand here is for single-board computers like the Raspberry Pi family.\n\n\nYou will need to disable the JIT and the heavy-weight LLVM dependency which comes with that. EVMJIT only supports x86_64. Other than that, cpp-ethereum should \\\"just work\\\" on 32-bit platforms. To disable JIT, you will need to use the following command for the Makefile generation phase:\n\n\ncmake .. -DEVMJIT\n=\nOff", 
            "title": "Linux"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/linux/#linux", 
            "text": "", 
            "title": "Linux\u6784\u5efa"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/linux/#_1", 
            "text": "\u6211\u4eec\u4f7f\u7528git\u548cGitHub\u6765\u7ef4\u62a4\u6e90\u4ee3\u7801,\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u514b\u9686\u5b58\u50a8\u5e93\uff1a  git clone --recursive https://github.com/ethereum/cpp-ethereum.git cd  cpp-ethereum  The  --recursive  option is important. It orders git to clone additional submodules which are required to build the project. If you missed it you can correct your mistake with command  git submodule update --init .", 
            "title": "\u83b7\u53d6\u6e90\u4ee3\u7801"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/linux/#cmake", 
            "text": "We use CMake to control the build configuration of the project. Quite recent version of CMake is required (at the time of writing 3.4 is the minimum). We recommend installing CMake by downloading and unpacking the binary distribution of the latest version available on the download page:  https://cmake.org/download/   Alternative method  The repository contains the script install_cmake.sh \nthat downloads a fixed version of CMake and unpacks it to the given\ndirectory prefix. Example usage scripts/install_cmake.sh --prefix /usr/local .", 
            "title": "CMake"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/linux/#_2", 
            "text": "The following  libraries  are required to be installed in the system:   boost  leveldb  curl  microhttpd  miniupnp  gmp   They usually can be installed using distribution-specific package\nmanager. For example on Debian-based systems:  sudo apt-get install libboost-all-dev libleveldb-dev libcurl4-openssl-dev libmicrohttpd-dev libminiupnpc-dev libgmp-dev  or on RedHat-based systems:  dnf install boost-devel leveldb-devel curl-devel libmicrohttpd-devel miniupnpc-devel gmp-devel  Linux has a horror-show of fragmentation when it comes to packaging\nsystems.  We support a  \\\"one-button\\\" bash script  which attempts to make this minefield more navigable for users of common distros. It identifies your distro and installs the external packages which you will need, using whatever combination of package servers and build-from-source is required for your specific distro version. This is a non-trivial task, but by that token is also something which we don\\'t want anybody to have to replicate themselves.  scripts/install_deps.sh  We use the same script for automated builds and continuous integration, so it is continuously tested, which is especially important on MacOS, where Homebrew is a constantly moving target.  If you try it, and it doesn\\'t work for you, please  report the problem  with details of your distro, your version number and any other important details and we can work together to get it working for your use-case. We have manual instructions for Fedora, openSUSE and Arch Linux (see below). If you using some other distro then please contact us and we\\'ll see if we can get you going.  ::: {.toctree}\nlinux-fedora.rst linux-opensuse.rst linux-arch.rst\n:::", 
            "title": "\u5b89\u88c5\u4f9d\u8d56\u5173\u7cfb"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/linux/#_3", 
            "text": "When you have installed your dependencies you can build.  mkdir build                                              Make a directory  for  the build output cd  build                                                 Switch into that directory\n\ncmake ..                                                 To generate a makefile.\nmake                                                     To build that makefile on the command-line\nmake -j number                                            ( or )  Execute makefile with multiple cores in parallel", 
            "title": "\u5efa\u7acb\u5728\u547d\u4ee4\u884c\u4e0a"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/linux/#32linux", 
            "text": "We have cpp-ethereum building and running successfully on many 32-bit Linux distros, with the main constraint being the availability of external dependencies in 32-bit variants. Probably the most active demand here is for single-board computers like the Raspberry Pi family.  You will need to disable the JIT and the heavy-weight LLVM dependency which comes with that. EVMJIT only supports x86_64. Other than that, cpp-ethereum should \\\"just work\\\" on 32-bit platforms. To disable JIT, you will need to use the following command for the Makefile generation phase:  cmake .. -DEVMJIT = Off", 
            "title": "32\u4f4d\u7684Linux\u7248\u672c"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/windows/", 
            "text": "Windows\u6784\u5efa\n\n\n\u6211\u4eec\u4ec5\u652f\u6301\n 64\u4f4d\n\u7248\u672c\uff0c\u4ec5\u9002\u7528\u4e8e\u4ee5\u4e0b\u7248\u672c\u7684Windows\uff1a\n\n\n\n\nWindows 7\n\n\nWindows 8/8.1\n\n\nWindows 10\n\n\nWindows Server 2012     R2\n\n\n\n\nIt may be possible to get the client working for Windows 32-bit, by disabling EVMJIT and maybe other features too. We might accept pull-requests to add such support, but we will not put any of our own development time into supporting Windows 32-bit builds.\n\n\n\u5148\u51b3\u6761\u4ef6\n\n\nYou will need to install the following dependencies\n\n\n\n\nSoftware                                                                Notes\n\n\n\n\nGit for Windows\n                     Command-line tool for retrieving source from\n                                                                          Github.\n\n\nCMake\n                                    Cross-platform build file generator.\n\n\nVisual Studio                                                          C++ compiler and dev environment.\n  2015\n\n\n\n\n\u83b7\u53d6\u6e90\u4ee3\u7801\n\n\nClone the git repository containing all the source code by executing the\nfollowing command: :\n\n\ngit clone --recursive https://github.com/ethereum/cpp-ethereum.git\ncd cpp-ethereum\n\n\n\n\n\n\u83b7\u53d6\u5916\u90e8\u4f9d\u8d56\u5173\u7cfb\n\n\nExecute the CMake script that downloads and unpacks pre-built external libraries needed to build the project: :\n\n\nscripts\\install_deps.bat\n\n\n\n\n\n\u751f\u6210Visual Studio\u9879\u76ee\u6587\u4ef6\n\n\nThen execute the following commands, which will generate a Visual Studio solution file using CMake: :\n\n\nmkdir build\ncd build\ncmake -G \nVisual Studio 14 2015 Win64\n ..\n\n\n\n\n\nWhich should result in the creation of \ncpp-ethereum.sln\n in that build directory.\n\n\nNOTE: We only support Visual Studio 2015 as of cpp-ethereum-v.1.3.0.\nIf you don\\'t have it already, install the \nVisual C++ 2015 Build\nTools\n\n\nDouble-clicking on that file should result in Visual Studio firing up. We suggest building \nRelWithDebugInfo\n configuration, but all others work.\n\n\n\u5efa\u7acb\u5728\u547d\u4ee4\u884c\u4e0a\n\n\nAlternatively, you can build the project on the command-line, like so: :\n\n\ncmake --build . --config RelWithDebInfo", 
            "title": "Windows"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/windows/#windows", 
            "text": "\u6211\u4eec\u4ec5\u652f\u6301  64\u4f4d \u7248\u672c\uff0c\u4ec5\u9002\u7528\u4e8e\u4ee5\u4e0b\u7248\u672c\u7684Windows\uff1a   Windows 7  Windows 8/8.1  Windows 10  Windows Server 2012     R2   It may be possible to get the client working for Windows 32-bit, by disabling EVMJIT and maybe other features too. We might accept pull-requests to add such support, but we will not put any of our own development time into supporting Windows 32-bit builds.", 
            "title": "Windows\u6784\u5efa"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/windows/#_1", 
            "text": "You will need to install the following dependencies   Software                                                                Notes   Git for Windows                      Command-line tool for retrieving source from\n                                                                          Github.  CMake                                     Cross-platform build file generator.  Visual Studio                                                          C++ compiler and dev environment.\n  2015", 
            "title": "\u5148\u51b3\u6761\u4ef6"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/windows/#_2", 
            "text": "Clone the git repository containing all the source code by executing the\nfollowing command: :  git clone --recursive https://github.com/ethereum/cpp-ethereum.git\ncd cpp-ethereum", 
            "title": "\u83b7\u53d6\u6e90\u4ee3\u7801"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/windows/#_3", 
            "text": "Execute the CMake script that downloads and unpacks pre-built external libraries needed to build the project: :  scripts\\install_deps.bat", 
            "title": "\u83b7\u53d6\u5916\u90e8\u4f9d\u8d56\u5173\u7cfb"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/windows/#visual-studio", 
            "text": "Then execute the following commands, which will generate a Visual Studio solution file using CMake: :  mkdir build\ncd build\ncmake -G  Visual Studio 14 2015 Win64  ..  Which should result in the creation of  cpp-ethereum.sln  in that build directory.  NOTE: We only support Visual Studio 2015 as of cpp-ethereum-v.1.3.0.\nIf you don\\'t have it already, install the  Visual C++ 2015 Build\nTools  Double-clicking on that file should result in Visual Studio firing up. We suggest building  RelWithDebugInfo  configuration, but all others work.", 
            "title": "\u751f\u6210Visual Studio\u9879\u76ee\u6587\u4ef6"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/windows/#_4", 
            "text": "Alternatively, you can build the project on the command-line, like so: :  cmake --build . --config RelWithDebInfo", 
            "title": "\u5efa\u7acb\u5728\u547d\u4ee4\u884c\u4e0a"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/macos/", 
            "text": "OS X\u6784\u5efa\n\n\n\u6982\u8ff0 - \u8fd9\u91cc\u662f\u9f99\uff01\n\n\nIt is impossible for us to avoid OS X build breaks because \nHomebrew is a \"rolling release\" package manager\n which means that the ground will forever be moving underneath us unless we add all external dependencies to our \nHomebrew tap\n, or add them as git sub-modules. End-user results vary depending on when they are build the project. Building yesterday may have worked for you, but that doesn't guarantee that your friend will have the same result today on their machine. Needless to say, this isn't a happy situation.\n\n\nIf you hit build breaks for OS X please look through the \nGithub issues\n to see whether the issue you are experiencing has already been reported. If so, please comment on that existing issue. If you don't see anything which looks similar, please create a new issue, detailing your OS X version, cpp-ethereum version, hardware and any other details you think might be relevant. Please add verbose log files via \ngist.github.com\n or a similar service.\n\n\nThe \ncpp-ethereum-development\n gitter channel is where we hang out, and try to work together to get known issues resolved.\n\n\nWe only support the following OS X versions:\n\n\n\n\nOS X Mavericks (10.9)\n\n\nOS X Yosemite (10.10)\n\n\nOS X El Capitan (10.11)\n\n\n\n\nThe cpp-ethereum code base does not build on older OS X versions and this is not something which we will ever support. If you are using an older OS X version, we recommend that you update to the latest release, not just so that you can build cpp-ethereum, but for your own security.\n\n\n\u514b\u9686\u5b58\u50a8\u5e93\n\n\nTo clone the source code, execute the following command: :\n\n\ngit clone --recursive https://github.com/ethereum/cpp-ethereum.git\ncd cpp-ethereum\n\n\n\n\n\n\u5148\u51b3\u6761\u4ef6\u548c\u5916\u90e8\u4f9d\u8d56\u5173\u7cfb\n\n\nEnsure that you have the latest version of \nxcode\ninstalled\n. This contains\nthe \nClang C++ compiler\n, the\n\nxcode IDE\n and other Apple\ndevelopment tools which are required for building C++ applications on OS\nX. If you are installing xcode for the first time, or have just\ninstalled a new version then you will need to agree to the license\nbefore you can do command-line builds: :\n\n\nsudo xcodebuild -license accept\n\n\n\n\n\nOur OS X builds require you to \ninstall the Homebrew\n\npackage manager for installing external dependencies. Here's how to\n\nuninstall\nHomebrew\n,\nif you ever want to start again from scratch.\n\n\nWe now have a \"one button\" script which installs all required external dependencies on macOS and on numerous Linux distros. This used to a multi-step manual process: :\n\n\n./scripts/install_deps.sh\n\n\n\n\n\n\u547d\u4ee4\u884c\u6784\u5efa\n\n\nFrom the project root: :\n\n\nmkdir build\ncd build\ncmake ..\nmake -j4             (or different value, depending on your number of CPU cores)\n\n\n\n\n\n\u5b89\u88c5\u4f60\u81ea\u5df1\u7684\u7248\u672c\n\n\nYou can also use the same Makefile to install your own build globally on\nyour machine: :\n\n\nmake install\n\n\n\n\n\nThis will install binaries into \n/usr/local/\n and \n/usr/bin/\n.\n\n\n\u751f\u6210xcode\u9879\u76ee\n\n\nFrom the project root: :\n\n\nmkdir build_xc\ncd build_xc\ncmake -G Xcode ..\n\n\n\n\n\nThis will generate an Xcode project file called\n\ncpp-ethereum.xcodeproj\n, which you can then open with xcode and\nbuild/debug/run.", 
            "title": "Macos"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/macos/#os-x", 
            "text": "", 
            "title": "OS X\u6784\u5efa"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/macos/#-", 
            "text": "It is impossible for us to avoid OS X build breaks because  Homebrew is a \"rolling release\" package manager  which means that the ground will forever be moving underneath us unless we add all external dependencies to our  Homebrew tap , or add them as git sub-modules. End-user results vary depending on when they are build the project. Building yesterday may have worked for you, but that doesn't guarantee that your friend will have the same result today on their machine. Needless to say, this isn't a happy situation.  If you hit build breaks for OS X please look through the  Github issues  to see whether the issue you are experiencing has already been reported. If so, please comment on that existing issue. If you don't see anything which looks similar, please create a new issue, detailing your OS X version, cpp-ethereum version, hardware and any other details you think might be relevant. Please add verbose log files via  gist.github.com  or a similar service.  The  cpp-ethereum-development  gitter channel is where we hang out, and try to work together to get known issues resolved.  We only support the following OS X versions:   OS X Mavericks (10.9)  OS X Yosemite (10.10)  OS X El Capitan (10.11)   The cpp-ethereum code base does not build on older OS X versions and this is not something which we will ever support. If you are using an older OS X version, we recommend that you update to the latest release, not just so that you can build cpp-ethereum, but for your own security.", 
            "title": "\u6982\u8ff0 - \u8fd9\u91cc\u662f\u9f99\uff01"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/macos/#_1", 
            "text": "To clone the source code, execute the following command: :  git clone --recursive https://github.com/ethereum/cpp-ethereum.git\ncd cpp-ethereum", 
            "title": "\u514b\u9686\u5b58\u50a8\u5e93"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/macos/#_2", 
            "text": "Ensure that you have the latest version of  xcode\ninstalled . This contains\nthe  Clang C++ compiler , the xcode IDE  and other Apple\ndevelopment tools which are required for building C++ applications on OS\nX. If you are installing xcode for the first time, or have just\ninstalled a new version then you will need to agree to the license\nbefore you can do command-line builds: :  sudo xcodebuild -license accept  Our OS X builds require you to  install the Homebrew \npackage manager for installing external dependencies. Here's how to uninstall\nHomebrew ,\nif you ever want to start again from scratch.  We now have a \"one button\" script which installs all required external dependencies on macOS and on numerous Linux distros. This used to a multi-step manual process: :  ./scripts/install_deps.sh", 
            "title": "\u5148\u51b3\u6761\u4ef6\u548c\u5916\u90e8\u4f9d\u8d56\u5173\u7cfb"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/macos/#_3", 
            "text": "From the project root: :  mkdir build\ncd build\ncmake ..\nmake -j4             (or different value, depending on your number of CPU cores)", 
            "title": "\u547d\u4ee4\u884c\u6784\u5efa"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/macos/#_4", 
            "text": "You can also use the same Makefile to install your own build globally on\nyour machine: :  make install  This will install binaries into  /usr/local/  and  /usr/bin/ .", 
            "title": "\u5b89\u88c5\u4f60\u81ea\u5df1\u7684\u7248\u672c"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/macos/#xcode", 
            "text": "From the project root: :  mkdir build_xc\ncd build_xc\ncmake -G Xcode ..  This will generate an Xcode project file called cpp-ethereum.xcodeproj , which you can then open with xcode and\nbuild/debug/run.", 
            "title": "\u751f\u6210xcode\u9879\u76ee"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/freebsd/", 
            "text": "FreeBSD\u6784\u5efa\n\n\nNOTE - Once the packages are in the FreeBSD main ports this guide should be changed to something much more simple\n\n\n\u624b\u52a8\u5b89\u88c5ports\n\n\nFor some of this steps you must require a root access to modify the ports directory.\n\n\nThe webthree-umbrella depends on \nlibjson-rpc-cpp.shar\n that is also not in the ports system.\n\n\nFirst you need to download the shar file and place it on your ports directory under the \"devel\" session, usually /usr/ports/devel :\n\n\ncurl https://raw.githubusercontent.com/enriquefynn/webthree-umbrella-port/master/libjson-rpc-cpp.shar \n /usr/ports/devel/libjson-rpc-cpp.shar\n\n\n\n\n\nNow we execute the script with: :\n\n\ncd /usr/ports/devel\nsh libjson-rpc-cpp.shar\n\n\n\n\n\nThis will create the libjson-rpc-cpp port. Now you should do the same for the webthree-umbrella port, we should get the \nwebthree-umbrella\n\nfile and create the port under \"net-p2p\" directory. :\n\n\ncurl https://raw.githubusercontent.com/enriquefynn/webthree-umbrella-port/master/webthree-umbrella.shar\n /usr/ports/net-p2p/webthree-umbrella.shar\ncd /usr/ports/net-p2p\nsh webthree-umbrella.shar\n\n\n\n\n\n\u6784\u5efa\u548c\u5b89\u88c5\n\n\nNow you can navigate to the webthree-umbrella directory and install the\nport: :\n\n\ncd /usr/ports/net-p2p/webthree-umbrella\nmake install clean", 
            "title": "FreeBSD"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/freebsd/#freebsd", 
            "text": "NOTE - Once the packages are in the FreeBSD main ports this guide should be changed to something much more simple", 
            "title": "FreeBSD\u6784\u5efa"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/freebsd/#ports", 
            "text": "For some of this steps you must require a root access to modify the ports directory.  The webthree-umbrella depends on  libjson-rpc-cpp.shar  that is also not in the ports system.  First you need to download the shar file and place it on your ports directory under the \"devel\" session, usually /usr/ports/devel :  curl https://raw.githubusercontent.com/enriquefynn/webthree-umbrella-port/master/libjson-rpc-cpp.shar   /usr/ports/devel/libjson-rpc-cpp.shar  Now we execute the script with: :  cd /usr/ports/devel\nsh libjson-rpc-cpp.shar  This will create the libjson-rpc-cpp port. Now you should do the same for the webthree-umbrella port, we should get the  webthree-umbrella \nfile and create the port under \"net-p2p\" directory. :  curl https://raw.githubusercontent.com/enriquefynn/webthree-umbrella-port/master/webthree-umbrella.shar  /usr/ports/net-p2p/webthree-umbrella.shar\ncd /usr/ports/net-p2p\nsh webthree-umbrella.shar", 
            "title": "\u624b\u52a8\u5b89\u88c5ports"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/freebsd/#_1", 
            "text": "Now you can navigate to the webthree-umbrella directory and install the\nport: :  cd /usr/ports/net-p2p/webthree-umbrella\nmake install clean", 
            "title": "\u6784\u5efa\u548c\u5b89\u88c5"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/android/", 
            "text": "Android\u6784\u5efa\n\n\nWe don't currently have a working Android build, though that is \non the roadmap\n for \ndoublethinkco\n. Android uses the Linux kernel, but has a \ndifferent API\n than the ARM Linux cross-builds, meaning that specific binaries will be required.\n\n\nARM Linux distros use the GLIBC runtime library, where Android uses bionic.", 
            "title": "Android"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/android/#android", 
            "text": "We don't currently have a working Android build, though that is  on the roadmap  for  doublethinkco . Android uses the Linux kernel, but has a  different API  than the ARM Linux cross-builds, meaning that specific binaries will be required.  ARM Linux distros use the GLIBC runtime library, where Android uses bionic.", 
            "title": "Android\u6784\u5efa"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/ios/", 
            "text": "iOS\u6784\u5efa\n\n\nWe don't currently have a working iOS build, though that is \non the roadmap\n for \ndoublethinkco\n. iOS is a UNIX-like operating system based on Darwin (BSD) using ARM chips. This is a \ndifferent API\n than the ARM Linux cross-builds, meaning that specific binaries will be required.", 
            "title": "IOS"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/ios/#ios", 
            "text": "We don't currently have a working iOS build, though that is  on the roadmap  for  doublethinkco . iOS is a UNIX-like operating system based on Darwin (BSD) using ARM chips. This is a  different API  than the ARM Linux cross-builds, meaning that specific binaries will be required.", 
            "title": "iOS\u6784\u5efa"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/rpi/", 
            "text": "\u5efa\u7acb\u6811\u8393\u6d3e\u6a21\u578bA\uff0cB +\uff0c\u96f6\uff0c2\u548c3\n\n\nEthEmbedded\n maintain build scripts for all Raspberry Mi models. They are on Github in the \nRaspi-Eth-Install\n repository. It is also possible to cross-build for these platforms.", 
            "title": "\u6811\u8393\u6d3e-\u5d4c"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/rpi/#ab-23", 
            "text": "EthEmbedded  maintain build scripts for all Raspberry Mi models. They are on Github in the  Raspi-Eth-Install  repository. It is also possible to cross-build for these platforms.", 
            "title": "\u5efa\u7acb\u6811\u8393\u6d3e\u6a21\u578bA\uff0cB +\uff0c\u96f6\uff0c2\u548c3"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/odroid/", 
            "text": "Odroid XU3 / XU4\u6253\u9020\n\n\nEthEmbedded\n maintain build scripts for both of these Odroid models. Support for a broader range of Odroid devices is likely in the future. They are on Github in the \nOdroidXU3-Eth-Install\n repository. It is also possible to cross-build for these platforms.", 
            "title": "Odroid-\u5d4c"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/odroid/#odroid-xu3-xu4", 
            "text": "EthEmbedded  maintain build scripts for both of these Odroid models. Support for a broader range of Odroid devices is likely in the future. They are on Github in the  OdroidXU3-Eth-Install  repository. It is also possible to cross-build for these platforms.", 
            "title": "Odroid XU3 / XU4\u6253\u9020"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/beaglebone/", 
            "text": "BeagleBone Black \u6784\u5efa\n\n\nEthEmbedded\n maintain build scripts for BBB on Github in the \nBBB-Eth-Install\n repository. It is also possible to cross-build for this platform.", 
            "title": "BeagleBone-\u5d4c"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/beaglebone/#beaglebone-black", 
            "text": "EthEmbedded  maintain build scripts for BBB on Github in the  BBB-Eth-Install  repository. It is also possible to cross-build for this platform.", 
            "title": "BeagleBone Black \u6784\u5efa"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/wandboard/", 
            "text": "WandBoard\u6784\u5efa\n\n\nEthEmbedded\n maintain build scripts for the\nWandBoard on Github in the \nWandBoard-Eth-Install\n repository. It is also possible to cross-build for this platform.", 
            "title": "WandBoard-\u5d4c"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/wandboard/#wandboard", 
            "text": "EthEmbedded  maintain build scripts for the\nWandBoard on Github in the  WandBoard-Eth-Install  repository. It is also possible to cross-build for this platform.", 
            "title": "WandBoard\u6784\u5efa"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/linux-arm/", 
            "text": "Building for Linux for ARM (cross builds)\n\n\ndoublethinkco\n maintain a Docker-based cross-build infrastructure which is hosted on Github in the \ncpp-ethereum-cross\n repository.\n\n\nAt the time of writing, these cross-built binaries have been successfully used on the following devices:\n\n\n\n\nJolla Phone (Sailfish OS)\n\n\nNexus 5 (Sailfish OS)\n\n\nMeizu MX4 Ubuntu Edition (Ubuntu Phone)\n\n\nRaspberry Pi Model B+, Rpi2 (Raspbian)\n\n\nOdroid XU3 (Ubuntu MATE)\n\n\nBeagleBone Black (Debian)\n\n\nWandboard Quad (Debian)\n\n\nC.H.I.P. (Debian)\n\n\n\n\nStill TODO:\n\n\n\n\nTizen\n\n\nAndroid\n\n\niOS", 
            "title": "Linux-ARM"
        }, 
        {
            "location": "/clients/cpp-ethereum/building-from-source/linux-arm/#building-for-linux-for-arm-cross-builds", 
            "text": "doublethinkco  maintain a Docker-based cross-build infrastructure which is hosted on Github in the  cpp-ethereum-cross  repository.  At the time of writing, these cross-built binaries have been successfully used on the following devices:   Jolla Phone (Sailfish OS)  Nexus 5 (Sailfish OS)  Meizu MX4 Ubuntu Edition (Ubuntu Phone)  Raspberry Pi Model B+, Rpi2 (Raspbian)  Odroid XU3 (Ubuntu MATE)  BeagleBone Black (Debian)  Wandboard Quad (Debian)  C.H.I.P. (Debian)   Still TODO:   Tizen  Android  iOS", 
            "title": "Building for Linux for ARM (cross builds)"
        }, 
        {
            "location": "/clients/cpp-ethereum/installing-binaries/", 
            "text": "Installing binaries {#Installing binaries}\n\n\nThe cpp-ethereum development team and the broader Ethereum community publish binary releases in many different forms for a variety of platforms. This aims to be a complete list of those releases.\n\n\nIf you are aware of other third-party packaging efforts, please let us know on the \ncpp-ethereum gitter channel\n, and we will add them to this list.\n\n\n::: {.toctree}\ndocker.rst linux-ubuntu-snap.rst linux-ubuntu-ppa.rst\nwindows-chocolatey.rst osx-homebrew.rst linux-sbcs.rst\nlinux-cross-builds.rst linux-arch-aur.rst linux-mageia.rst\n:::", 
            "title": "\u5b89\u88c5\u4e8c\u8fdb\u5236"
        }, 
        {
            "location": "/clients/cpp-ethereum/installing-binaries/#installing-binaries-installing-binaries", 
            "text": "The cpp-ethereum development team and the broader Ethereum community publish binary releases in many different forms for a variety of platforms. This aims to be a complete list of those releases.  If you are aware of other third-party packaging efforts, please let us know on the  cpp-ethereum gitter channel , and we will add them to this list.  ::: {.toctree}\ndocker.rst linux-ubuntu-snap.rst linux-ubuntu-ppa.rst\nwindows-chocolatey.rst osx-homebrew.rst linux-sbcs.rst\nlinux-cross-builds.rst linux-arch-aur.rst linux-mageia.rst\n:::", 
            "title": "Installing binaries {#Installing binaries}"
        }, 
        {
            "location": "/clients/cpp-ethereum/contributing/", 
            "text": "Contributing\n\n\nHelp in whatever form is always more than welcome.\n\n\nYou can just start by [Building from source]{role=\"ref\"} and\nfamiliarizing yourself with the [Architecture]{role=\"ref\"}. If something\nstrange happens, please report an issue (see below).\n\n\nOnce you get to know the technology, you can try to answer questions\nfrom other users (we do not always have time for that) either on\n\ncpp-ethereum gitter\n,\n\nstackexchange\n or just comment on\nissues.\n\n\nIf you are a C++ developer, you can help by submitting pull requests\n(see below).\n\n\nWe try to keep a list of \ngood tasks to start\nwith\n.\nPlease get in contact on gitter if you have any questions or\nsuggestions.\n\n\nThe backlog is kept in github issues with an overview in our \nwaffle\nboard\n.\n\n\nThe waffle board is also useful to keep track of pull requests pending\nreviews (if you switch the filter on the top right to \\\"pull requests\nonly\\\").\n\n\nHow to Report Issues\n\n\nPlease report issues against the specific projects using GitHub Issues:\n\n\n\n\ncpp-ethereum\n    issues\n\n\ncpp-dependencies\n    issues\n\n\nevmjit issues\n\n\n\n\nTry to mention which version of the software you used and on which\nplatform (Windows, MacOS, Linux, ...), how you got into the situation\n(what did you do), what did you expect to happen and what actually\nhappened.\n\n\nHow to Submit Pull Requests / Workflow\n\n\nSet up your workspace using the [Building from source]{role=\"ref\"}\ninstructions. To contribute you will need to fork/clone the\nrepositories.\n\n\nPlease also respect the \nCoding\nStandards\n.\n\n\nIf you encounter any problems, please ask on gitter.\n\n\nCreate pull requests against the develop branch of the repository you\nmade changes in. Try not to include any merges with the pull request and\nrebase if necessary. If you can set labels on a pull request, set it to\nplease review and also ask for a review in\n\ngitter\n.\n\n\nYou can also do reviews on others\\' pull requests. In this case either\ncomment with \\\"looks good\\\" or set the label if you can. If at least one\ncore developer apart from the author is confident about the change, it\ncan be merged. If the reviewer thinks that corrections are necessary,\nthey put he label got issues. If the author addressed all comments, they\nagain put please review or comment appropriately.\n\n\nAutomation runs on\n\nAppveyor\n and\n\nTravisCI\n.\n\n\nThanks for helping and have fun!", 
            "title": "\u8d21\u732e"
        }, 
        {
            "location": "/clients/cpp-ethereum/contributing/#contributing", 
            "text": "Help in whatever form is always more than welcome.  You can just start by [Building from source]{role=\"ref\"} and\nfamiliarizing yourself with the [Architecture]{role=\"ref\"}. If something\nstrange happens, please report an issue (see below).  Once you get to know the technology, you can try to answer questions\nfrom other users (we do not always have time for that) either on cpp-ethereum gitter , stackexchange  or just comment on\nissues.  If you are a C++ developer, you can help by submitting pull requests\n(see below).  We try to keep a list of  good tasks to start\nwith .\nPlease get in contact on gitter if you have any questions or\nsuggestions.  The backlog is kept in github issues with an overview in our  waffle\nboard .  The waffle board is also useful to keep track of pull requests pending\nreviews (if you switch the filter on the top right to \\\"pull requests\nonly\\\").", 
            "title": "Contributing"
        }, 
        {
            "location": "/clients/cpp-ethereum/contributing/#how-to-report-issues", 
            "text": "Please report issues against the specific projects using GitHub Issues:   cpp-ethereum\n    issues  cpp-dependencies\n    issues  evmjit issues   Try to mention which version of the software you used and on which\nplatform (Windows, MacOS, Linux, ...), how you got into the situation\n(what did you do), what did you expect to happen and what actually\nhappened.", 
            "title": "How to Report Issues"
        }, 
        {
            "location": "/clients/cpp-ethereum/contributing/#how-to-submit-pull-requests-workflow", 
            "text": "Set up your workspace using the [Building from source]{role=\"ref\"}\ninstructions. To contribute you will need to fork/clone the\nrepositories.  Please also respect the  Coding\nStandards .  If you encounter any problems, please ask on gitter.  Create pull requests against the develop branch of the repository you\nmade changes in. Try not to include any merges with the pull request and\nrebase if necessary. If you can set labels on a pull request, set it to\nplease review and also ask for a review in gitter .  You can also do reviews on others\\' pull requests. In this case either\ncomment with \\\"looks good\\\" or set the label if you can. If at least one\ncore developer apart from the author is confident about the change, it\ncan be merged. If the reviewer thinks that corrections are necessary,\nthey put he label got issues. If the author addressed all comments, they\nagain put please review or comment appropriately.  Automation runs on Appveyor  and TravisCI .  Thanks for helping and have fun!", 
            "title": "How to Submit Pull Requests / Workflow"
        }, 
        {
            "location": "/clients/cpp-ethereum/architecture/", 
            "text": "Architecture {#Architecture}\n\n\n\n\n\n\nbench: trie benchmarking\n\n\ncmake: cmake files for build system, contains specification of\n    inter-dependencies\n\n\neth A command-line Ethereum full-node that can be controlled via\n    RPC.\n\n\nethkey: stand-alone key management\n\n\nethminer: stand-alone ethash miner\n\n\nethvm: stand-alone EVM execution utility\n\n\nevmjit: library for the EVM just-in-time compiler\n\n\nlibdevcore: data structures, utilities, rlp, trie, memory db\n\n\nlibdevcrypto: crypto primitives. Depends on libsecp256k1 and\n    libcrypto++.\n\n\nlibp2p: core peer to peer networking implementation (excluding\n    specific sub-protocols)\n\n\nlibethash: ethash mining POW algorithm implementation\n\n\nlibethash-cl: ethash mining code for GPU mining (OpenCL)\n\n\nlibethashseal: generic wrapper around the POW block seal engine.\n    Also contains the genesis states for all ethash-based chains.\n\n\nlibethcore: collection of core data structures and concepts\n\n\nlibethereum: main consensus engine (minus EVM). Includes the State\n    and BlockChain classes.\n\n\nlibevm: Ethereum Virtual Machine implementation (interpreter).\n\n\nlibevmasm: EVM assembly tools, also contains the optimizer.\n\n\nlibevmcore: elementary data structures of the EVM, opcodes, gas\n    costs, ...\n\n\nlibweb3jsonrpc: json-rpc server-side endpoint, provides http and IPC\n    (unix socket, windows pipe) connectors\n\n\nlibwebthree: service connectors for ethereum, swarm/ipfs and\n    whisper.\n\n\nlibwhisper: whisper implementation\n\n\nrlp: stand-alone rlp en-/decoder\n\n\ntesteth: tests for the modules formerly within the \nlibethereum\n\n    repo\n\n\ntestweb3core: tests for the modules formerly within the\n    \nlibweb3core\n repo\n\n\ntestweb3: tests for the modules formerly within the \nwebthree\n\n    repo\n\n\nutils/json_spirit: JSON parser written for Boost\\'s Spirit library.\n\n\nutils/libscrypt: scrypt implementation\n\n\nutils/secp256k1: implementation of the SECP 256k1 ECDSA signing\n    algorithm.", 
            "title": "\u6784\u67b6"
        }, 
        {
            "location": "/clients/cpp-ethereum/architecture/#architecture-architecture", 
            "text": "bench: trie benchmarking  cmake: cmake files for build system, contains specification of\n    inter-dependencies  eth A command-line Ethereum full-node that can be controlled via\n    RPC.  ethkey: stand-alone key management  ethminer: stand-alone ethash miner  ethvm: stand-alone EVM execution utility  evmjit: library for the EVM just-in-time compiler  libdevcore: data structures, utilities, rlp, trie, memory db  libdevcrypto: crypto primitives. Depends on libsecp256k1 and\n    libcrypto++.  libp2p: core peer to peer networking implementation (excluding\n    specific sub-protocols)  libethash: ethash mining POW algorithm implementation  libethash-cl: ethash mining code for GPU mining (OpenCL)  libethashseal: generic wrapper around the POW block seal engine.\n    Also contains the genesis states for all ethash-based chains.  libethcore: collection of core data structures and concepts  libethereum: main consensus engine (minus EVM). Includes the State\n    and BlockChain classes.  libevm: Ethereum Virtual Machine implementation (interpreter).  libevmasm: EVM assembly tools, also contains the optimizer.  libevmcore: elementary data structures of the EVM, opcodes, gas\n    costs, ...  libweb3jsonrpc: json-rpc server-side endpoint, provides http and IPC\n    (unix socket, windows pipe) connectors  libwebthree: service connectors for ethereum, swarm/ipfs and\n    whisper.  libwhisper: whisper implementation  rlp: stand-alone rlp en-/decoder  testeth: tests for the modules formerly within the  libethereum \n    repo  testweb3core: tests for the modules formerly within the\n     libweb3core  repo  testweb3: tests for the modules formerly within the  webthree \n    repo  utils/json_spirit: JSON parser written for Boost\\'s Spirit library.  utils/libscrypt: scrypt implementation  utils/secp256k1: implementation of the SECP 256k1 ECDSA signing\n    algorithm.", 
            "title": "Architecture {#Architecture}"
        }, 
        {
            "location": "/clients/cpp-ethereum/portability/", 
            "text": "Portability {#cpp-ethereum-portability}\n\n\nThe Ethereum C++ client code is exceedingly portable, and is being successfully used on a huge range of different operating systems and devices.\n\n\nWe continue to expand our range and are very open to pull-requests which add support for additional operating systems, compilers or devices.\n\n\nOperating systems verified as working\n\n\n-\n\n\nLinux\n\n:   -   Alpine Linux\n    -   Arch Linux\n    -   Debian 8 (Jessie and Stretch)\n    -   Fedora 20\n    -   Fedora 21\n    -   Fedora 22\n    -   openSUSE Leap 42.1\n    -   PureOS 2.1\n    -   Raspbian\n    -   Sailfish OS 2.0\n    -   Ubuntu 14.04 (Trusty)\n    -   Ubuntu 14.10 (Utopic)\n    -   Ubuntu 15.04 (Vivid)\n    -   Ubuntu 15.10 (Wily)\n    -   Ubuntu 16.04 (Xenial)\n    -   Ubuntu Touch\n    -   Ubuntu 15.04 MATE\n\n\n\n\n\n-\n\n\nBSD\n\n:   -   FreeBSD\n\n\n\n\n\n-\n\n\nOS X\n\n:   -   OS X Yosemite (10.10)\n    -   OS X El Capitan (10.11)\n    -   OS X 10.10 (Yosemite Server 4.0)\n    -   OS X 10.11 (Yosemite Server 5.0)\n    -   OS X 10.11 (Yosemite Server 5.1)\n\n\n\n\n\n-\n\n\nWindows\n\n:   -   Windows 7\n    -   Windows 8\n    -   Windows 8.1\n    -   Windows 10\n    -   Windows Server 2012 R2\n\n\n\n\n\nOperating systems - work in progress\n\n\n-\n\n\nLinux\n\n:   -   Maemo\n    -   MeeGo\n    -   Tizen\n\n\n\n\n\n-\n\n\nBSD\n\n:   -   iOS\n    -   tvOS\n    -   WatchOS\n\n\n\n\n\n\n\nAndroid\n\n\n\n\nDevices verified as working\n\n\n-\n\n\nAll varieties of desktop and laptop devices (Windows, OS X, Desktop Linux)\n\n:   -   64-bit (with rebuilt binaries)\n    -   32-bit (not official supported, but they work)\n\n\n\n\n\n-\n\n\nSmartphones\n\n:   -\n\n        Linux\n\n        :   -   Jolla Phone\n            -   Meizu MX4 Ubuntu Edition\n            -   Nexus 5 (SailfishOS 2.0)\n\n\n\n\n\n-\n\n\nSBCs\n\n:   -\n\n        Linux\n\n        :   -   BeagleBone Black\n            -   Odroid XU3\n            -   Project C.H.I.P.\n            -   Raspberry Pi Model A\n            -   Raspberry Pi Model B+\n            -   Raspberry Pi Zero\n            -   Raspberry Pi 2\n            -   Raspberry Pi 3\n            -   Wandboard Quad\n\n\n\n\n\nDevices - work in progress\n\n\n-\n\n\nSmartwatches\n\n:   -\n\n        Linux\n\n        :   -   Samsung Gear S2\n\n    -\n\n        BSD\n\n        :   -   Apple Watch\n\n\n\n\n\n-\n\n\nSmartphones\n\n:   -\n\n        Linux\n\n        :   -   Nokia N9 (MeeGo)\n            -   Nokia N900 (Meemo)\n            -   Samsung Z1\n            -   Samsung Z3\n\n    -\n\n        Android\n\n        :   -   Samsung Galaxy S3\n            -   Samsung Galaxy S4\n\n    -\n\n        BSD\n\n        :   -   iPhone 3GS\n            -   iPhone 5\n\n\n\n\n\n-\n\n\nDeveloper phones\n\n:   -\n\n        Linux\n\n        :   -   Samsung RD-210\n            -   Samsung RD-PQ\n            -   Samsung TM1\n\n\n\n\n\n-\n\n\nTablets\n\n:   -\n\n        Android\n\n        :   -   Samsung Galaxy Tab S 10.5\n            -   Nexus 7\n\n    -\n\n        BSD\n\n        :   -   iPad Air 2\n\n\n\n\n\n-\n\n\nSBCs\n\n:   -\n\n        Linux\n\n        :   -   DragonBoard 410c\n            -   Intel Curie\n            -   Intel Edison\n            -   Intel NUC\n            -   Minnowboard Max\n            -   Odroid XU4", 
            "title": "\u53ef\u6291\u5236\u6027"
        }, 
        {
            "location": "/clients/cpp-ethereum/portability/#portability-cpp-ethereum-portability", 
            "text": "The Ethereum C++ client code is exceedingly portable, and is being successfully used on a huge range of different operating systems and devices.  We continue to expand our range and are very open to pull-requests which add support for additional operating systems, compilers or devices.", 
            "title": "Portability {#cpp-ethereum-portability}"
        }, 
        {
            "location": "/clients/cpp-ethereum/portability/#operating-systems-verified-as-working", 
            "text": "-  Linux\n\n:   -   Alpine Linux\n    -   Arch Linux\n    -   Debian 8 (Jessie and Stretch)\n    -   Fedora 20\n    -   Fedora 21\n    -   Fedora 22\n    -   openSUSE Leap 42.1\n    -   PureOS 2.1\n    -   Raspbian\n    -   Sailfish OS 2.0\n    -   Ubuntu 14.04 (Trusty)\n    -   Ubuntu 14.10 (Utopic)\n    -   Ubuntu 15.04 (Vivid)\n    -   Ubuntu 15.10 (Wily)\n    -   Ubuntu 16.04 (Xenial)\n    -   Ubuntu Touch\n    -   Ubuntu 15.04 MATE  -  BSD\n\n:   -   FreeBSD  -  OS X\n\n:   -   OS X Yosemite (10.10)\n    -   OS X El Capitan (10.11)\n    -   OS X 10.10 (Yosemite Server 4.0)\n    -   OS X 10.11 (Yosemite Server 5.0)\n    -   OS X 10.11 (Yosemite Server 5.1)  -  Windows\n\n:   -   Windows 7\n    -   Windows 8\n    -   Windows 8.1\n    -   Windows 10\n    -   Windows Server 2012 R2", 
            "title": "Operating systems verified as working"
        }, 
        {
            "location": "/clients/cpp-ethereum/portability/#operating-systems-work-in-progress", 
            "text": "-  Linux\n\n:   -   Maemo\n    -   MeeGo\n    -   Tizen  -  BSD\n\n:   -   iOS\n    -   tvOS\n    -   WatchOS   Android", 
            "title": "Operating systems - work in progress"
        }, 
        {
            "location": "/clients/cpp-ethereum/portability/#devices-verified-as-working", 
            "text": "-  All varieties of desktop and laptop devices (Windows, OS X, Desktop Linux)\n\n:   -   64-bit (with rebuilt binaries)\n    -   32-bit (not official supported, but they work)  -  Smartphones\n\n:   -\n\n        Linux\n\n        :   -   Jolla Phone\n            -   Meizu MX4 Ubuntu Edition\n            -   Nexus 5 (SailfishOS 2.0)  -  SBCs\n\n:   -\n\n        Linux\n\n        :   -   BeagleBone Black\n            -   Odroid XU3\n            -   Project C.H.I.P.\n            -   Raspberry Pi Model A\n            -   Raspberry Pi Model B+\n            -   Raspberry Pi Zero\n            -   Raspberry Pi 2\n            -   Raspberry Pi 3\n            -   Wandboard Quad", 
            "title": "Devices verified as working"
        }, 
        {
            "location": "/clients/cpp-ethereum/portability/#devices-work-in-progress", 
            "text": "-  Smartwatches\n\n:   -\n\n        Linux\n\n        :   -   Samsung Gear S2\n\n    -\n\n        BSD\n\n        :   -   Apple Watch  -  Smartphones\n\n:   -\n\n        Linux\n\n        :   -   Nokia N9 (MeeGo)\n            -   Nokia N900 (Meemo)\n            -   Samsung Z1\n            -   Samsung Z3\n\n    -\n\n        Android\n\n        :   -   Samsung Galaxy S3\n            -   Samsung Galaxy S4\n\n    -\n\n        BSD\n\n        :   -   iPhone 3GS\n            -   iPhone 5  -  Developer phones\n\n:   -\n\n        Linux\n\n        :   -   Samsung RD-210\n            -   Samsung RD-PQ\n            -   Samsung TM1  -  Tablets\n\n:   -\n\n        Android\n\n        :   -   Samsung Galaxy Tab S 10.5\n            -   Nexus 7\n\n    -\n\n        BSD\n\n        :   -   iPad Air 2  -  SBCs\n\n:   -\n\n        Linux\n\n        :   -   DragonBoard 410c\n            -   Intel Curie\n            -   Intel Edison\n            -   Intel NUC\n            -   Minnowboard Max\n            -   Odroid XU4", 
            "title": "Devices - work in progress"
        }, 
        {
            "location": "/clients/cpp-ethereum/running/", 
            "text": "Running {#Runnig cpp-ethereum}\n\n\nRunning eth without any argument will synchronise your node to the\npublic blockchain. It is also possible to create or synchronise to\nanother blockchain (see\n[custom blockchain using eth \\\ncustom-networks-eth>]{role=\"ref\"}).\n\n\nInteracting with your node can be done using either geth or the ethereum\nconsole:\n\n\nUsing geth\n\n\n``` {.sourceCode .Console}\n\n\n\n\ngeth attach //attach geth to a running eth node.\n```\n\n\n\n\nUsing the ethereum console\n\n\nThe ethereum console is a node.js application which connect to a running\neth/geth node and provide access to the web3 object.\n\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\n\nhttps://github.com/ethereum/ethereum-console\n\n:::\n\n\nIt can be installed using npm:\n\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\n\n| > npm install -g ethereum-console | > ethconsole\n:::\n\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\n\n| \nUsage:\n | ethconsole [javascript file] [ipc socket] |\n  Connects to an ethereum node via ipc in order to control it remotely\n  | through global variable web3 (web3.admin is also present). | If no\n  arguments are given, connects to the default ipc socket | and drops\n  into interactive mode. | Arguments: | \\\nipc socket path> connect to\n  the given ipc socket (use ipc://\\\npath> if it does not end with .ipc)\n  | \\\njavascript file> execute the given javascript file that has to\n  end in .js non-interactively. | The script has to call process.exit()\n  in order to terminate the console.\n:::", 
            "title": "\u8fd0\u884c"
        }, 
        {
            "location": "/clients/cpp-ethereum/running/#running-runnig-cpp-ethereum", 
            "text": "Running eth without any argument will synchronise your node to the\npublic blockchain. It is also possible to create or synchronise to\nanother blockchain (see\n[custom blockchain using eth \\ custom-networks-eth>]{role=\"ref\"}).  Interacting with your node can be done using either geth or the ethereum\nconsole:  Using geth  ``` {.sourceCode .Console}   geth attach //attach geth to a running eth node.\n```   Using the ethereum console  The ethereum console is a node.js application which connect to a running\neth/geth node and provide access to the web3 object.  ::: {.note}\n::: {.admonition-title}\nNote\n:::  https://github.com/ethereum/ethereum-console \n:::  It can be installed using npm:  ::: {.note}\n::: {.admonition-title}\nNote\n:::  | > npm install -g ethereum-console | > ethconsole\n:::  ::: {.note}\n::: {.admonition-title}\nNote\n:::  |  Usage:  | ethconsole [javascript file] [ipc socket] |\n  Connects to an ethereum node via ipc in order to control it remotely\n  | through global variable web3 (web3.admin is also present). | If no\n  arguments are given, connects to the default ipc socket | and drops\n  into interactive mode. | Arguments: | \\ ipc socket path> connect to\n  the given ipc socket (use ipc://\\ path> if it does not end with .ipc)\n  | \\ javascript file> execute the given javascript file that has to\n  end in .js non-interactively. | The script has to call process.exit()\n  in order to terminate the console.\n:::", 
            "title": "Running {#Runnig cpp-ethereum}"
        }, 
        {
            "location": "/clients/go-ethereum/", 
            "text": "go-ethereum\n\n\nThe go-ethereum client is commonly referred to as \ngeth\n, which is the the command line interface for running a full ethereum node implemented in Go. By installing and running geth, you can take part in the ethereum frontier live network and:\n\n\n\n\nmine real ether\n\n\ntransfer funds between addresses\n\n\ncreate contracts and send transactions\n\n\nexplore block history\n\n\nand much much more\n\n\n\n\nLinks:\n\n\n\n\nWebsite: \nhttp://ethereum.github.io/go-ethereum/\n\n\nGitHub: \nhttps://github.com/ethereum/go-ethereum\n\n\nWiki: \nhttps://github.com/ethereum/go-ethereum/wiki/geth\n\n\nGitter: \nhttps://gitter.im/ethereum/go-ethereum", 
            "title": "go-ethereum"
        }, 
        {
            "location": "/clients/go-ethereum/#go-ethereum", 
            "text": "The go-ethereum client is commonly referred to as  geth , which is the the command line interface for running a full ethereum node implemented in Go. By installing and running geth, you can take part in the ethereum frontier live network and:   mine real ether  transfer funds between addresses  create contracts and send transactions  explore block history  and much much more   Links:   Website:  http://ethereum.github.io/go-ethereum/  GitHub:  https://github.com/ethereum/go-ethereum  Wiki:  https://github.com/ethereum/go-ethereum/wiki/geth  Gitter:  https://gitter.im/ethereum/go-ethereum", 
            "title": "go-ethereum"
        }, 
        {
            "location": "/clients/pyethapp/", 
            "text": "pyethapp\n\n\npyethapp\n is the python-based client implementing the Ethereum cryptoeconomic state machine. The python implementation aims to provide an easily hackable and extendable codebase.\n\n\npyethapp leverages two ethereum core components to implement the client:\n\n\n\n\npyethereum\n - the core library, featuring the blockchain, the ethereum virtual machine, mining\n\n\npydevp2p\n - the p2p networking library, featuring node discovery for and transport of multiple services over multiplexed and encrypted connections\n\n\n\n\nLinks:\n\n\n\n\nGitHub: \nhttps://github.com/ethereum/pyethapp\n\n\nWiki: \nhttps://github.com/ethereum/pyethapp/wiki/Getting-Started\n\n\nGitter chat: \nhttps://gitter.im/ethereum/pyethapp", 
            "title": "pyethapp"
        }, 
        {
            "location": "/clients/pyethapp/#pyethapp", 
            "text": "pyethapp  is the python-based client implementing the Ethereum cryptoeconomic state machine. The python implementation aims to provide an easily hackable and extendable codebase.  pyethapp leverages two ethereum core components to implement the client:   pyethereum  - the core library, featuring the blockchain, the ethereum virtual machine, mining  pydevp2p  - the p2p networking library, featuring node discovery for and transport of multiple services over multiplexed and encrypted connections   Links:   GitHub:  https://github.com/ethereum/pyethapp  Wiki:  https://github.com/ethereum/pyethapp/wiki/Getting-Started  Gitter chat:  https://gitter.im/ethereum/pyethapp", 
            "title": "pyethapp"
        }, 
        {
            "location": "/clients/ethereumjs-lib/", 
            "text": "ethereumjs-lib\n\n\nethereumjs-lib\n is the javascript library of core \nEthereum\n functions as described in the \nYellow Paper\n. This is a simple meta-module that provides the following modules. Most JS modules are tracked in \nethereumjs\n\n\n\n\nVM\n - The Ethereum   virtual machine and state processing functions\n\n\nBlockchain\n -   Blockchain managment\n\n\nBlock\n - Block   Schema definition and validation\n\n\nTransaction\n -   Transaction Schema definition and validation\n\n\nAccount\n -   Account Schema definition and validation\n\n\nrlp\n - Recursive Length Prefix   serialization\n\n\nTrie\n -   Modified Merkle Patricia Tree\n\n\nEthash\n - Ethereum\\'s Proof   of Work algorithm\n\n\nutils\n -   Miscellaneous helper functions\n\n\ndevp2p\n - The networking   protocol\n\n\ndevp2p-dpt\n - The   disputed peer table\n\n\n\n\nLinks:\n\n\n\n\nGitHub: \nhttps://github.com/ethereumjs/ethereumjs-lib\n\n\nJoin the Gitter chat: \nhttps://gitter.im/ethereum/ethereumjs-lib", 
            "title": "ethereumjs-lib"
        }, 
        {
            "location": "/clients/ethereumjs-lib/#ethereumjs-lib", 
            "text": "ethereumjs-lib  is the javascript library of core  Ethereum  functions as described in the  Yellow Paper . This is a simple meta-module that provides the following modules. Most JS modules are tracked in  ethereumjs   VM  - The Ethereum   virtual machine and state processing functions  Blockchain  -   Blockchain managment  Block  - Block   Schema definition and validation  Transaction  -   Transaction Schema definition and validation  Account  -   Account Schema definition and validation  rlp  - Recursive Length Prefix   serialization  Trie  -   Modified Merkle Patricia Tree  Ethash  - Ethereum\\'s Proof   of Work algorithm  utils  -   Miscellaneous helper functions  devp2p  - The networking   protocol  devp2p-dpt  - The   disputed peer table   Links:   GitHub:  https://github.com/ethereumjs/ethereumjs-lib  Join the Gitter chat:  https://gitter.im/ethereum/ethereumjs-lib", 
            "title": "ethereumjs-lib"
        }, 
        {
            "location": "/clients/ethereumj/", 
            "text": "Ethereum(J)\n\n\nEthereum(J)\n is a pure-Java implementation of the Ethereum protocol. It is provided as a library that can be embedded in any Java/Scala project and to provide full support for Ethereum protocol and sub-services. Ethereum(J) was first developed by \nRoman Mandeleil\n and is now sponsored by\n\n \nhttp://www.ether.camp\n.\n\n\nEthereum(J) supports CPU mining. It is currently implemented in pure Java and can be used in private and test networks. You may even mine on the live Ethereum network, even though it is not economically feasible.\n\n\nLinks:\n\n\n\n\nBlog: \nhttp://ethereumj.io/\n\n\nGitHub: \nhttps://github.com/ethereum/ethereumj\n\n\nGitter chat: \nhttps://gitter.im/ethereum/ethereumj", 
            "title": "ethereum(j)"
        }, 
        {
            "location": "/clients/ethereumj/#ethereumj", 
            "text": "Ethereum(J)  is a pure-Java implementation of the Ethereum protocol. It is provided as a library that can be embedded in any Java/Scala project and to provide full support for Ethereum protocol and sub-services. Ethereum(J) was first developed by  Roman Mandeleil  and is now sponsored by   http://www.ether.camp .  Ethereum(J) supports CPU mining. It is currently implemented in pure Java and can be used in private and test networks. You may even mine on the live Ethereum network, even though it is not economically feasible.  Links:   Blog:  http://ethereumj.io/  GitHub:  https://github.com/ethereum/ethereumj  Gitter chat:  https://gitter.im/ethereum/ethereumj", 
            "title": "Ethereum(J)"
        }, 
        {
            "location": "/clients/ethereumh/", 
            "text": "ethereumH\n\n\n\u8be5\u8f6f\u4ef6\u5305\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528Haskell\u7f16\u5199\u7684\u5de5\u5177\uff0c\u5141\u8bb8\u60a8\u8fde\u63a5\u5230\u4ee5\u592a\u574a\u533a\u5757\u94fe\n\n\n\u94fe\u63a5\uff1a\n\n\n\n\nGitHub: \nhttps://github.com/blockapps/ethereumH\n\n\nBlockApps: \nhttp://www.blockapps.net/", 
            "title": "ethereumH"
        }, 
        {
            "location": "/clients/ethereumh/#ethereumh", 
            "text": "\u8be5\u8f6f\u4ef6\u5305\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528Haskell\u7f16\u5199\u7684\u5de5\u5177\uff0c\u5141\u8bb8\u60a8\u8fde\u63a5\u5230\u4ee5\u592a\u574a\u533a\u5757\u94fe  \u94fe\u63a5\uff1a   GitHub:  https://github.com/blockapps/ethereumH  BlockApps:  http://www.blockapps.net/", 
            "title": "ethereumH"
        }, 
        {
            "location": "/clients/parity/", 
            "text": "Parity\n\n\nParity\n claims to be the world\\'s fastest and lightest Ethereum client. It is written in the Rust language, which offers improved reliability, performance, and code clarity. Parity is being developed by \nParity Technologies (f.k.a. Ethcore)\n, which was founded by several members of the Ethereum Foundation.\n\n\n\n\nWebsite: \nhttps://parity.io/\n\n\nGitHub: \nhttps://github.com/paritytech/parity\n\n\nGitter chat: \nhttps://gitter.im/paritytech/parity\n\n\n\n\nArch Linux packages are maintained by \nAfri Schoedon\n.\n\n\n\n\nhttps://www.archlinux.org/packages/community/x86_64/parity/\n\n\n\n\nSome people have reported success with Parity on Raspberry Pi 2.", 
            "title": "parity"
        }, 
        {
            "location": "/clients/parity/#parity", 
            "text": "Parity  claims to be the world\\'s fastest and lightest Ethereum client. It is written in the Rust language, which offers improved reliability, performance, and code clarity. Parity is being developed by  Parity Technologies (f.k.a. Ethcore) , which was founded by several members of the Ethereum Foundation.   Website:  https://parity.io/  GitHub:  https://github.com/paritytech/parity  Gitter chat:  https://gitter.im/paritytech/parity   Arch Linux packages are maintained by  Afri Schoedon .   https://www.archlinux.org/packages/community/x86_64/parity/   Some people have reported success with Parity on Raspberry Pi 2.", 
            "title": "Parity"
        }, 
        {
            "location": "/clients/ruby-ethereum/", 
            "text": "ruby-ethereum\n\n\nruby-ethereum\n is an implementation of the [Ethereum Virtual Machine \n] written in Ruby.\n\n\nLinks:\n\n\n\n\nGitHub: \nhttps://github.com/janx/ruby-ethereum\n\n\nGem: \nhttps://rubygems.org/gems/ruby-ethereum\n\n\n\n\nRelated:\n\n\n\n\nruby-serpent\n: Ruby binding to the \nEthereum Serpent\n compiler.\n\n\n[ethereum-ruby]{role=\"ref\"}: a pure-Ruby JSON-RPC wrapper for communicating with an Ethereum node.", 
            "title": "ruby-ethereum"
        }, 
        {
            "location": "/clients/ruby-ethereum/#ruby-ethereum", 
            "text": "ruby-ethereum  is an implementation of the [Ethereum Virtual Machine  ] written in Ruby.  Links:   GitHub:  https://github.com/janx/ruby-ethereum  Gem:  https://rubygems.org/gems/ruby-ethereum   Related:   ruby-serpent : Ruby binding to the  Ethereum Serpent  compiler.  [ethereum-ruby]{role=\"ref\"}: a pure-Ruby JSON-RPC wrapper for communicating with an Ethereum node.", 
            "title": "ruby-ethereum"
        }, 
        {
            "location": "/connecting-to-clients/", 
            "text": "\u8fde\u63a5\u5230\u4ee5\u592a\u574a\u5ba2\u6237\u7aef\n\n\nEthereum clients expose a number of methods over\n\nJSON-RPC\n for\ninteracting with them from within an application. However, interacting\ndirectly over JSON-RPC passes on a number of burdens to the application\ndevelopers, such as:\n\n\n\n\n\n\nJSON-RPC protocol implementation\n\n\nBinary format encoding/decoding for creating and interacting with smart contracts\n\n\n256 bit numeric types\n\n\nAdmin command support - e.g. create/manage addresses, sign transactions\n\n\n\n\n\n\nA number of libraries have been written to help address these issues,\nallowing application developers to focus on their applications, instead\nof the underlying plumbing to interact with Ethereum clients and the wider ecosystem.\n\n\n\n\n\n\n\n\nLibrary\n\n\nLanguage\n\n\nProject Page\n\n\n\n\n\n\n\n\n\n\n[web3.js]\n\n\nJavaScript\n\n\nhttps://github.com/ethereum/web3.js\n\n\n\n\n\n\n[web3j]\n\n\nJava\n\n\nhttps://github.com/web3j/web3j\n\n\n\n\n\n\n[Nethereum]\n\n\nC# .NET\n\n\nhttps://github.com/Nethereum/Nethereum\n\n\n\n\n\n\n[ethereum-ruby]\n\n\nRuby\n\n\nhttps://github.com/DigixGlobal/ethereum-ruby\n\n\n\n\n\n\n[web3.py]\n\n\nPython\n\n\nhttps://github.com/ethereum/web3.py\n\n\n\n\n\n\n\n\nInformation on each library is provided in the following sections:\n\n\n::: {.toctree}\nweb3.js/index.rst web3j/index.rst nethereum/index.rst\nethereum-ruby/index.rst web3.py/index.rst\n:::\n\n\nFor an overview of creating and interacting with smart contracts and transactions via the web3.js library, please refer to the section [Accessing Contracts and Transactions].", 
            "title": "\u7b80\u4ecb"
        }, 
        {
            "location": "/connecting-to-clients/#_1", 
            "text": "Ethereum clients expose a number of methods over JSON-RPC  for\ninteracting with them from within an application. However, interacting\ndirectly over JSON-RPC passes on a number of burdens to the application\ndevelopers, such as:    JSON-RPC protocol implementation  Binary format encoding/decoding for creating and interacting with smart contracts  256 bit numeric types  Admin command support - e.g. create/manage addresses, sign transactions    A number of libraries have been written to help address these issues,\nallowing application developers to focus on their applications, instead\nof the underlying plumbing to interact with Ethereum clients and the wider ecosystem.     Library  Language  Project Page      [web3.js]  JavaScript  https://github.com/ethereum/web3.js    [web3j]  Java  https://github.com/web3j/web3j    [Nethereum]  C# .NET  https://github.com/Nethereum/Nethereum    [ethereum-ruby]  Ruby  https://github.com/DigixGlobal/ethereum-ruby    [web3.py]  Python  https://github.com/ethereum/web3.py     Information on each library is provided in the following sections:  ::: {.toctree}\nweb3.js/index.rst web3j/index.rst nethereum/index.rst\nethereum-ruby/index.rst web3.py/index.rst\n:::  For an overview of creating and interacting with smart contracts and transactions via the web3.js library, please refer to the section [Accessing Contracts and Transactions].", 
            "title": "\u8fde\u63a5\u5230\u4ee5\u592a\u574a\u5ba2\u6237\u7aef"
        }, 
        {
            "location": "/connecting-to-clients/web3.js/", 
            "text": "web3.js\n\n\nweb3.js\n\n\nThis is the Ethereum compatible \nJavaScript\nAPI\n which\nimplements the \nGeneric JSON\nRPC\n spec. It\\'s\navailable on npm as a node module, for bower and component as an\nembeddable js and as a meteor.js package.\n\n\nLinks:\n\n\n\n\nGitHub: \nhttps://github.com/ethereum/web3.js/\n\n\nWiki: \nhttps://github.com/ethereum/wiki/wiki/JavaScript-API\n\n\nGitter: \nhttps://gitter.im/ethereum/web3.js\n\n\nNPM module: \nhttps://www.npmjs.com/package/web3", 
            "title": "web3.js"
        }, 
        {
            "location": "/connecting-to-clients/web3.js/#web3js", 
            "text": "web3.js  This is the Ethereum compatible  JavaScript\nAPI  which\nimplements the  Generic JSON\nRPC  spec. It\\'s\navailable on npm as a node module, for bower and component as an\nembeddable js and as a meteor.js package.  Links:   GitHub:  https://github.com/ethereum/web3.js/  Wiki:  https://github.com/ethereum/wiki/wiki/JavaScript-API  Gitter:  https://gitter.im/ethereum/web3.js  NPM module:  https://www.npmjs.com/package/web3", 
            "title": "web3.js"
        }, 
        {
            "location": "/connecting-to-clients/web3j/", 
            "text": "web3j\n\n\nweb3j\n\n\nweb3j is a lightweight Java library for integrating with clients (nodes)\non the Ethereum network.\n\n\nCore features:\n\n\n:   -   Interaction with Ethereum clients over JSON-RPC via Java types\n    -   Supports all JSON-RPC method types\n    -   Supports all Geth and Parity methods for managing accounts and\n        signing transactions\n    -   Sending of client requests both asynchronously and synchronously\n    -   Auto-generation of Java smart contract function wrappers from\n        Solidity ABI files\n\n\nCurrently, the [go-ethereum]{role=\"ref\"} and [Parity]{role=\"ref\"}\nclients are supported.\n\n\nLinks:\n\n\n\n\nGitHub: \nhttps://github.com/web3j/web3j\n\n\nWebsite: \nhttp://web3j.io\n\n\nWiki: \nhttps://github.com/web3j/web3j/wiki\n\n\nGitter: \nhttps://gitter.im/web3j/web3j", 
            "title": "web3j"
        }, 
        {
            "location": "/connecting-to-clients/web3j/#web3j", 
            "text": "web3j  web3j is a lightweight Java library for integrating with clients (nodes)\non the Ethereum network.  Core features:  :   -   Interaction with Ethereum clients over JSON-RPC via Java types\n    -   Supports all JSON-RPC method types\n    -   Supports all Geth and Parity methods for managing accounts and\n        signing transactions\n    -   Sending of client requests both asynchronously and synchronously\n    -   Auto-generation of Java smart contract function wrappers from\n        Solidity ABI files  Currently, the [go-ethereum]{role=\"ref\"} and [Parity]{role=\"ref\"}\nclients are supported.  Links:   GitHub:  https://github.com/web3j/web3j  Website:  http://web3j.io  Wiki:  https://github.com/web3j/web3j/wiki  Gitter:  https://gitter.im/web3j/web3j", 
            "title": "web3j"
        }, 
        {
            "location": "/connecting-to-clients/nethereum/", 
            "text": "Nethereum\n\n\nNethereum\n\n\nNethereum is the .Net integration library for Ethereum, it allows you to\ninteract with Ethereum clients like [go-ethereum]{role=\"ref\"},\n[cpp-ethereum]{role=\"ref\"} or [Parity]{role=\"ref\"} using RPC.\n\n\nThe library has very similar functionality as the Javascript Etherum\nWeb3 RPC Client Library.\n\n\nAll the JSON RPC/IPC methods are implemented as they appear in new\nversions of the clients.\n\n\nThe geth client is the one that is closely supported and tested,\nincluding its management extensions for admin, personal, debugging,\nminer.\n\n\nInteraction with contracts has been simplified for deployment, function\ncalling, transaction and event filtering and decoding of topics.\n\n\nThe library has been tested in all the platforms .Net Core, Mono, Linux,\niOS, Android, Raspberry PI, Xbox and of course Windows.\n\n\nLinks:\n\n\n\n\nGitHub: \nhttps://github.com/Nethereum/Nethereum\n\n\nWebsite: \nhttp://nethereum.com\n\n\nDocumentation: \nhttps://nethereum.readthedocs.io/en/latest/\n\n\nGitter: \nhttps://gitter.im/Nethereum/Nethereum", 
            "title": "Nethereum"
        }, 
        {
            "location": "/connecting-to-clients/nethereum/#nethereum", 
            "text": "Nethereum  Nethereum is the .Net integration library for Ethereum, it allows you to\ninteract with Ethereum clients like [go-ethereum]{role=\"ref\"},\n[cpp-ethereum]{role=\"ref\"} or [Parity]{role=\"ref\"} using RPC.  The library has very similar functionality as the Javascript Etherum\nWeb3 RPC Client Library.  All the JSON RPC/IPC methods are implemented as they appear in new\nversions of the clients.  The geth client is the one that is closely supported and tested,\nincluding its management extensions for admin, personal, debugging,\nminer.  Interaction with contracts has been simplified for deployment, function\ncalling, transaction and event filtering and decoding of topics.  The library has been tested in all the platforms .Net Core, Mono, Linux,\niOS, Android, Raspberry PI, Xbox and of course Windows.  Links:   GitHub:  https://github.com/Nethereum/Nethereum  Website:  http://nethereum.com  Documentation:  https://nethereum.readthedocs.io/en/latest/  Gitter:  https://gitter.im/Nethereum/Nethereum", 
            "title": "Nethereum"
        }, 
        {
            "location": "/connecting-to-clients/ethereum-ruby/", 
            "text": "ethereum-ruby\n\n\nethereum-ruby\n is a pure-Ruby JSON-RPC wrapper for communicating with\nan Ethereum node. To use this library you will need to have a running\nEthereum node with IPC support enabled (default). Currently, the\n[go-ethereum]{role=\"ref\"} client is supported.\n\n\nLinks:\n\n\n\n\nGitHub: \nhttps://github.com/DigixGlobal/ethereum-ruby", 
            "title": "ethereum-ruby"
        }, 
        {
            "location": "/connecting-to-clients/ethereum-ruby/#ethereum-ruby", 
            "text": "ethereum-ruby  is a pure-Ruby JSON-RPC wrapper for communicating with\nan Ethereum node. To use this library you will need to have a running\nEthereum node with IPC support enabled (default). Currently, the\n[go-ethereum]{role=\"ref\"} client is supported.  Links:   GitHub:  https://github.com/DigixGlobal/ethereum-ruby", 
            "title": "ethereum-ruby"
        }, 
        {
            "location": "/account-management/", 
            "text": "\u5e10\u6237\u7ba1\u7406\n\n\n\u5e10\u53f7\n\n\n\u5e10\u6237\u5728\u4ee5\u592a\u574a\u4e2d\u626e\u6f14\u7740\u91cd\u8981\u89d2\u8272\u3002\n\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u8d26\u6237\uff1a\n\u5916\u90e8\u62e5\u6709\u8d26\u6237\n(EOAs)\u548c\n\u5408\u7ea6\u8d26\u6237\n\u3002\n\u8fd9\u91cc\u6211\u4eec\u5c06\u91cd\u70b9\u653e\u5728\u5916\u90e8\u62e5\u6709\u7684\u8d26\u6237\u4e0a\uff0c\u7b80\u79f0\u4e3a\n\u8d26\u6237\n\u3002\n\u5408\u7ea6\u8d26\u6237\u5c06\u88ab\u79f0\u4e3a\n\u5408\u7ea6\n\uff0c\u5e76[\u5728\u5408\u7ea6\n\u5408\u7ea6\n\u4e2d\u8be6\u7ec6\u8ba8\u8bba]\u3002\n\u8fd9\u79cd\u901a\u7528\u7684\u8d26\u6237\u6982\u5ff5\u5305\u542b\u4e86\u5916\u90e8\u62e5\u6709\u7684\u8d26\u6237\u548c\u5408\u7ea6\uff0c\u8fd9\u662f\u5408\u7406\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u5b9e\u4f53\u88ab\u79f0\u4e3a\n\u72b6\u6001\u5bf9\u8c61\n\u3002\n\u8fd9\u4e9b\u5b9e\u4f53\u6709\u4e00\u4e2a\u72b6\u6001\uff1a\u8d26\u6237\u6709\u4f59\u989d\uff0c\u5408\u7ea6\u6709\u4f59\u989d\u548c\u5408\u7ea6\u5b58\u50a8\u3002\n\u6240\u6709\u5e10\u6237\u7684\u72b6\u6001\u90fd\u662f\u4ee5\u592a\u574a\u7f51\u7edc\u7684\u72b6\u6001\uff0c\u6bcf\u4e2a\u533a\u5757\u90fd\u4f1a\u66f4\u65b0\uff0c\u7f51\u7edc\u771f\u6b63\u9700\u8981\u54ea\u4e2a\u7f51\u7edc\n\u8d26\u6237\u5bf9\u4e8e\u7528\u6237\u901a\u8fc7\u4ea4\u6613\u4e0e\u4ee5\u592a\u574a\u533a\u5757\u94fe\u8fdb\u884c\u4ea4\u4e92\u81f3\u5173\u91cd\u8981\u3002\n\n\n\u5982\u679c\u6211\u4eec\u5c06\u4ee5\u592a\u574a\u4ec5\u9650\u4e8e\u5916\u90e8\u62e5\u6709\u7684\u8d26\u6237\uff0c\u5e76\u4e14\u53ea\u5141\u8bb8\u5b83\u4eec\u4e4b\u95f4\u7684\u4ea4\u6613\uff0c\u6211\u4eec\u5c31\u4f1a\u5230\u8fbe\u4e00\u4e2a\u963f\u5c14\u7279\u5e01\u7cfb\u7edf\n\n\n\u5e10\u6237\u8868\u793a\u5916\u90e8\u4ee3\u7406\u7684\u8eab\u4efd(\u4f8b\u5982\uff0c\u4eba\u7c7b\u89d2\u8272\uff0c\u6316\u6398\u8282\u70b9\u6216\u81ea\u52a8\u4ee3\u7406)\u3002\n\u8d26\u6237\u4f7f\u7528\u516c\u94a5\u52a0\u5bc6\u6765\u7b7e\u7f72\u4ea4\u6613\uff0c\u4ee5\u4fbfEVM\u53ef\u4ee5\u5b89\u5168\u5730\u9a8c\u8bc1\u4ea4\u6613\u53d1\u4ef6\u4eba\u7684\u8eab\u4efd\u3002\n\n\n\u5bc6\u94a5\u6587\u4ef6\n\n\n\u6bcf\u4e2a\u8d26\u6237\u90fd\u7531\u4e00\u5bf9\u5bc6\u94a5\uff0c\u4e00\u4e2a\u79c1\u94a5\u548c\u4e00\u4e2a\u516c\u94a5\u6765\u5b9a\u4e49\u3002\n\u5e10\u6237\u901a\u8fc7\u5176\n\u5730\u5740\n\u8fdb\u884c\u7d22\u5f15\uff0c\u8be5\u5730\u5740\u7531\u516c\u94a5\u901a\u8fc7\u53d6\u6700\u540e\u768420\u4e2a\u5b57\u8282\u800c\u5f97\u51fa\u3002\n\u6bcf\u4e2a\u79c1\u94a5/\u5730\u5740\u5bf9\u90fd\u4ee5\n keyfile \n\u7f16\u7801\u3002\n\u5bc6\u94a5\u6587\u4ef6\u662f\u53ef\u4ee5\u5728\u4efb\u4f55\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u6253\u5f00\u548c\u67e5\u770b\u7684JSON\u6587\u672c\u6587\u4ef6\u3002\n\u5bc6\u94a5\u6587\u4ef6\u7684\u5173\u952e\u7ec4\u6210\u90e8\u5206(\u60a8\u7684\u5e10\u6237\u7684\u79c1\u94a5)\u59cb\u7ec8\u662f\u52a0\u5bc6\u7684\uff0c\u5e76\u4f7f\u7528\u60a8\u7684\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6\n\u5bc6\u94a5\u6587\u4ef6\u4f4d\u4e8e\u60a8\u4ee5\u592a\u574a\u8282\u70b9\u6570\u636e\u76ee\u5f55\u7684\nkeystore\n\u5b50\u76ee\u5f55\u4e2d\u3002\n\u786e\u4fdd\u5b9a\u671f\u5907\u4efd\u4f60\u7684\u5bc6\u94a5\u6587\u4ef6\uff01,\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1[\u5907\u4efd\u548c\u8fd8\u539f\u5e10\u6237]\u90e8\u5206\u3002\n\n\n\u521b\u5efa\u4e00\u4e2a\u5bc6\u94a5\u7b49\u4e8e\u521b\u5efa\u4e00\u4e2a\u5e10\u6237:\n\n\n\n\n\u4f60\u4e0d\u9700\u8981\u544a\u8bc9\u5176\u4ed6\u4eba\u4f60\u6b63\u5728\u505a\u8fd9\u4ef6\u4e8b\n\n\n\u60a8\u4e0d\u9700\u8981\u4e0e\u533a\u5757\u94fe\u540c\u6b65\n\n\n\u4f60\u4e0d\u9700\u8981\u8fd0\u884c\u4e00\u4e2a\u5ba2\u6237\u7aef\n\n\n\u4f60\u751a\u81f3\u4e0d\u9700\u8981\u8fde\u63a5\u5230\u4e92\u8054\u7f51\n\n\n\n\n\u5f53\u7136\u4f60\u7684\u65b0\u8d26\u6237\u4e0d\u4f1a\u5305\u542b\u4efb\u4f55\u4ee5\u592a\u7f51\u3002\n\u5f53\u7136\u4f60\u7684\u65b0\u8d26\u6237\u4e0d\u4f1a\u5305\u542b\u4efb\u4f55\u4ee5\u592a\u7f51\u3002\n\n\n\u5728\u4ee5\u592a\u574a\u8282\u70b9\u4e4b\u95f4\u4f20\u8f93\u6574\u4e2a\u76ee\u5f55\u6216\u4efb\u4f55\u5355\u72ec\u7684\u5bc6\u94a5\u6587\u4ef6\u662f\u5b89\u5168\u7684\u3002\n\n\n\n\nWarning\n\n\n\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u5c06\u5bc6\u94a5\u6587\u4ef6\u4ece\u4e0d\u540c\u8282\u70b9\u6dfb\u52a0\u5230\u8282\u70b9\uff0c\u5e10\u6237\u987a\u5e8f\u53ef\u80fd\u4f1a\u66f4\u6539\u3002\n\u56e0\u6b64\uff0c\u8bf7\u786e\u4fdd\u60a8\u4e0d\u4f9d\u8d56\u6216\u66f4\u6539\u811a\u672c\u6216\u4ee3\u7801\u7247\u6bb5\u4e2d\u7684\u7d22\u5f15\u3002\n\n\n\n\n\u521b\u5efa\u5e10\u6237\n\n\n\n\nWarning\n\n\n\u4e3a\u4e86\u4ece\u4e00\u4e2a\u8d26\u6237\u53d1\u9001\u4ea4\u6613\uff0c\u5305\u62ec\u53d1\u9001\u4ee5\u592a\uff0c\u4f60\u5fc5\u987b\u540c\u65f6\u62e5\u6709\u5bc6\u94a5\u6587\u4ef6\u548c\u5bc6\u7801\u3002\n\u8bf7\u52a1\u5fc5\u4fdd\u7559\u5bc6\u94a5\u6587\u4ef6\u7684\u526f\u672c\u5e76\u8bb0\u4f4f\u8be5\u5bc6\u94a5\u6587\u4ef6\u7684\u5bc6\u7801\uff0c\u5e76\u5c3d\u53ef\u80fd\u5b89\u5168\u5730\u5b58\u50a8\u5b83\u4eec\u3002\n\u8fd9\u91cc\u6ca1\u6709\u9003\u751f\u8def\u7ebf;,\u4e22\u5931\u5bc6\u94a5\u6587\u4ef6\u6216\u5fd8\u8bb0\u5bc6\u7801\uff0c\u5e76\u4e14\u6240\u6709\u4ee5\u592a\u7f51\u90fd\u6d88\u5931\u4e86\u3002\n\u6ca1\u6709\u5bc6\u7801\u5c31\u65e0\u6cd5\u8bbf\u95ee\u60a8\u7684\u5e10\u6237\uff0c\u5e76\u4e14\u8fd9\u91cc\u6ca1\u6709\n\u5fd8\u8bb0\u6211\u7684\u5bc6\u7801\n\u9009\u9879\u3002\n\u522b\u5fd8\u8bb0\u4e86\u3002\n\n\n\n\n\u8fd0\u884c\u547d\u4ee4\n\n\n\u4e00\u65e6\u4f60\u5b89\u88c5\u4e86geth\u5ba2\u6237\u7aef\uff0c\u521b\u5efa\u4e00\u4e2a\u5e10\u6237\u53ea\u662f\u5728\u7ec8\u7aef\u4e2d\u6267\u884c\ngeth account new\n\u547d\u4ee4\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002\n\n\n\u8bf7\u6ce8\u610f\uff0c\u60a8\u4e0d\u5fc5\u8fd0\u884cgeth\u5ba2\u6237\u7aef\u6216\u4e0e\u533a\u5757\u94fe\u540c\u6b65\u4ee5\u4f7f\u7528\ngeth account\n\u547d\u4ee4\u3002\n\n\n$ geth account new\n\n  Your new account is locked with a password.Please give a password.Do not forget this password.\n  Passphrase:\n  Repeat Passphrase:\n  Address: \n{\n168bc315a2ee09042d83d7c5811b533620531f67\n}\n\n\n\n\n\n\u5bf9\u4e8e\u975e\u4ea4\u4e92\u5f0f\u4f7f\u7528\uff0c\u60a8\u9700\u8981\u63d0\u4f9b\u660e\u6587\u5bc6\u7801\u6587\u4ef6\u4f5c\u4e3a\n--password\n\u6807\u5fd7\u7684\u53c2\u6570\u3002\n\u8be5\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u7531\u5bc6\u7801\u7684\u539f\u59cb\u5b57\u8282\u7ec4\u6210\uff0c\u540e\u9762\u7d27\u8ddf\u4e00\u4e2a\u6362\u884c\u7b26\u3002\n\n\n$ geth --password /path/to/password account new\n\n\n\n\n\n\nWarning\n\n\n\u4f7f\u7528\n--password\n\u6807\u5fd7\u4ec5\u7528\u4e8e\u53d7\u4fe1\u4efb\u73af\u5883\u4e2d\u7684\u6d4b\u8bd5\u6216\u81ea\u52a8\u5316\u3002\n\u5c06\u5bc6\u7801\u4fdd\u5b58\u5230\u6587\u4ef6\u6216\u4ee5\u4efb\u4f55\u5176\u4ed6\u65b9\u5f0f\u516c\u5f00\u5b83\u662f\u4e2a\u4e0d\u9519\u7684\u4e3b\u610f\u3002\n\u5982\u679c\u786e\u5b9e\u5728\u5bc6\u7801\u6587\u4ef6\u4e2d\u4f7f\u7528\u4e86\u201c--password\u201d\u6807\u5fd7\uff0c\u8bf7\u786e\u4fdd\u8be5\u6587\u4ef6\u5bf9\u4e8e\u9664\u60a8\u4ee5\u5916\u7684\u4efb\u4f55\u4eba\u90fd\u4e0d\u53ef\u8bfb\u6216\u751a\u81f3\u4e0d\u53ef\u5217\u51fa\u3002\n\u60a8\u53ef\u4ee5\u5728Mac / Linux\u7cfb\u7edf\u4e2d\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5b9e\u73b0\u6b64\u76ee\u7684\uff1a\n\n\n\n\ntouch /path/to/password\nchmod \n600\n /path/to/password\ncat \n /path/to/password\n\nI \ntype\n my pass\n\n\n\n\n\u8981\u4f7f\u7528\ngeth account\n\u547d\u4ee4\u7684\nlist\n\u5b50\u547d\u4ee4\u5217\u51fa\u5f53\u524d\u4f4d\u4e8e\nkeystore\n\u6587\u4ef6\u5939\u4e2d\u7684\u6240\u6709\u5bc6\u94a5\u6587\u4ef6\u5e10\u6237\uff1a\n\n\n$ geth account list\n\naccount \n#0: {a94f5374fce5edbc8e2a8697c15331677e6ebf0b}\n\naccount \n#1: {c385233b188811c9f355d4caec14df86d6248235}\n\naccount \n#2: {7f444580bfef4b9bc7e14eb7fb2a029336b07c9d}\n\n\n\n\n\n\u5bc6\u94a5\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u683c\u5f0f\u4e3a\nUTC  -  \ncreated_at UTC ISO8601\n  -  \naddress hex\n\u3002 \u4e0a\u5e02\u65f6\u7684\u8d26\u6237\u987a\u5e8f\u662f\u5b57\u5178\u5f0f\u7684\uff0c\u4f46\u4f5c\u4e3a\u65f6\u95f4\u6233\u683c\u5f0f\u7684\u7ed3\u679c\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u521b\u5efa\u7684\u987a\u5e8f\u3002\n\n\n\u4f7f\u7528\u63a7\u5236\u53f0\n\n\n\u4e3a\u4e86\u4f7f\u7528geth\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5e10\u6237\uff0c\u6211\u4eec\u5fc5\u987b\u9996\u5148\u5728\u63a7\u5236\u53f0\u6a21\u5f0f\u4e0b\u542f\u52a8geth(\u6216\u8005\u4f60\u53ef\u4ee5\u7528\ngeth attach\n\u628a\u4e00\u4e2a\u63a7\u5236\u53f0\u9644\u52a0\u5230\u4e00\u4e2a\u5df2\u7ecf\u8fd0\u884c\u7684\u5b9e\u4f8b\u4e0a)\uff1a\n\n\n geth console \n2\n file_to_log_output\ninstance: Geth/v1.4.0-unstable/linux/go1.5.1\ncoinbase: coinbase: \n[\nobject Object\n]\n\nat block: \n865174\n \n(\nMon, \n18\n Jan \n2016\n \n02\n:58:53 GMT\n)\n\ndatadir: /home/USERNAME/.ethereum\n\n\n\n\n\u63a7\u5236\u53f0\u5141\u8bb8\u60a8\u901a\u8fc7\u53d1\u51fa\u547d\u4ee4\u4e0e\u672c\u5730\u8282\u70b9\u8fdb\u884c\u4ea4\u4e92\u3002,\u4f8b\u5982\uff0c\u5c1d\u8bd5\u547d\u4ee4\u5217\u51fa\u60a8\u7684\u5e10\u6237\uff1a\n\n\n \neth\n.\naccounts\n\n\n\n{\n\n    \ncode\n:\n \n-\n32000\n,\n\n    \nmessage\n:\n \nno keys in store\n\n\n}\n\n\n\n\n\n\u8fd9\u8868\u660e\u4f60\u6ca1\u6709\u5e10\u6237\u3002\u60a8\u4e5f\u53ef\u4ee5\u4ece\u63a7\u5236\u53f0\u521b\u5efa\u4e00\u4e2a\u5e10\u6237\uff1a\n\n\n \npersonal\n.\nnewAccount\n()\n\n\nPassphrase\n:\n\n\nRepeat\n \npassphrase\n:\n\n\n0xb2f69ddf70297958e582a0cc98bce43294f1007d\n\n\n\n\n\n\n\nNote\n\n\n\u8bf7\u8bb0\u4f4f\u4f7f\u7528\u5f3a\u5927\u4e14\u968f\u673a\u751f\u6210\u7684\u5bc6\u7801\u3002\n\n\n\n\n\u6211\u4eec\u521a\u521a\u521b\u5efa\u4e86\u7b2c\u4e00\u4e2a\u5e10\u6237\u3002\u5982\u679c\u6211\u4eec\u8bd5\u56fe\u518d\u6b21\u5217\u51fa\u6211\u4eec\u7684\u5e10\u6237\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u7684\u65b0\u5e10\u6237\uff1a\n\n\n \neth\n.\naccounts\n\n\n[\n0xb2f69ddf70297958e582a0cc98bce43294f1007d\n]\n\n\n\n\n\n\u4f7f\u7528Mist\n\n\n\u5bf9\u4e8e\u538c\u6076\u547d\u4ee4\u884c\uff0c\u73b0\u5728\u6709\u4e00\u4e2a\u57fa\u4e8eGUI\u7684\u521b\u5efa\u8d26\u6237\u9009\u9879\uff1a\u201c\u5b98\u65b9\u201dMist\u4ee5\u592a\u574a\u94b1\u5305\u3002\n\u5728\u4ee5\u592a\u574a\u57fa\u91d1\u4f1a\u7684\u8d5e\u52a9\u4e0b\uff0cMist\u4ee5\u592a\u574a\u94b1\u5305\u548c\u5b83\u7684\u6bcd\u4eb2Mist\u9879\u76ee\u6b63\u5728\u5f00\u53d1\uff0c\u56e0\u6b64\u662f\u201c\u5b98\u65b9\u201d\u7684\u5730\u4f4d\u3002\n\u94b1\u5305\u5e94\u7528\u7a0b\u5e8f\u7684\u7248\u672c\u9002\u7528\u4e8eLinux\uff0cMac OS X\u548cWindows\u3002\n\n\n\n\nWarning\n\n\nMist\u94b1\u5305\u662fbeta\u8f6f\u4ef6\u3002\u8bf7\u5c0f\u5fc3\u4f7f\u7528\uff0c\u98ce\u9669\u81ea\u8d1f\u3002\n\n\n\n\n\u4f7f\u7528GUI Mist Ethereum\u94b1\u5305\u521b\u5efa\u4e00\u4e2a\u8d26\u6237\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\u60c5\u3002\u5b9e\u9645\u4e0a\uff0c\u60a8\u7684\u7b2c\u4e00\u4e2a\u5e10\u6237\u662f\u5728\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\u671f\u95f4\u521b\u5efa\u7684\u3002\n\n\n\n\n\u4e3a\u5e94\u7528\u7a0b\u5e8f\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684\u94b1\u5305\u5e94\u7528\u7a0b\u5e8f\n\u3002\u6253\u5f00\u7535\u5b50\u94b1\u5305\u5e94\u7528\u7a0b\u5e8f\u5c06\u5f00\u59cb\u5728\u8ba1\u7b97\u673a\u4e0a\u540c\u6b65\u4ee5\u592a\u574a\u533a\u5757\u94fe\u7684\u5b8c\u6574\u526f\u672c\uff0c\u56e0\u4e3a\u60a8\u5b9e\u9645\u4e0a\u5c06\u8fd0\u884c\u5b8c\u6574\u7684geth\u8282\u70b9\u3002\n\n\n\u89e3\u538b\u4e0b\u8f7d\u7684\u6587\u4ef6\u5939\u5e76\u8fd0\u884cEthereum-Wallet\u53ef\u6267\u884c\u6587\u4ef6\u3002\n\n\n\n\n{.align-center width=\"436px\" height=\"352px\"}\n\n\n\n\n\u6253\u5f00\u7535\u5b50\u94b1\u5305\u5e94\u7528\u7a0b\u5e8f\u5c06\u5f00\u59cb\u5728\u8ba1\u7b97\u673a\u4e0a\u540c\u6b65\u4ee5\u592a\u574a\u533a\u5757\u94fe\u7684\u5b8c\u6574\u526f\u672c\uff0c\u56e0\u4e3a\u60a8\u5b9e\u9645\u4e0a\u5c06\u8fd0\u884c\u5b8c\u6574\u7684geth\u8282\u70b9\u3002\n\n\n\u5f53\u60a8\u7b2c\u4e00\u6b21\u542f\u52a8Mist Ethereum\u94b1\u5305\u65f6\uff0c\u60a8\u4f1a\u770b\u5230\u60a8\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u521b\u5efa\u7684\u5e10\u6237\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u5c06\u88ab\u547d\u540d\u4e3aMAIN ACCOUNT(ETHERBASE)\u3002\n\n\n\n\n{.align-center width=\"512px\" height=\"469px\"}\n\n\n\n\n\u521b\u5efa\u989d\u5916\u7684\u5e10\u6237\u5f88\u5bb9\u6613;,\u53ea\u9700\u70b9\u51fb\u5e94\u7528\u7a0b\u5e8f\u4e3b\u5c4f\u5e55\u4e0a\u7684\u6dfb\u52a0\u5e10\u6237\uff0c\u7136\u540e\u8f93\u5165\u6240\u9700\u7684\u5bc6\u7801\u5373\u53ef\u3002\n\n\n\n\n\n\nNote\n\n\nMist\u94b1\u5305\u4ecd\u5728\u79ef\u6781\u5f00\u53d1\u4e2d\uff0c\u56e0\u6b64\u4e0a\u8ff0\u6b65\u9aa4\u7684\u7ec6\u8282\u53ef\u80fd\u968f\u5347\u7ea7\u800c\u6539\u53d8\u3002\n\n\n\n\n\u591a\u91cd\u7b7e\u540d\u94b1\u5305\n\n\nMist\u4ee5\u592a\u574a\u94b1\u5305\u6709\u4e00\u4e2a\u9009\u9879\uff0c\u4ee5\u786e\u4fdd\u60a8\u7684\u94b1\u5305\u5e73\u8861\u4e0emultisig\u94b1\u5305\u3002\n\u4f7f\u7528multisig\u94b1\u5305\u7684\u597d\u5904\u662f\uff0c\u5b83\u9700\u8981\u4ece\u591a\u4e2a\u5e10\u6237\u6388\u6743\u624d\u80fd\u4ece\u4f59\u989d\u4e2d\u63d0\u53d6\u66f4\u591a\u91d1\u989d\u3002\n\u5728\u521b\u5efa\u591a\u91cd\u94b1\u5305\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u521b\u5efa\u591a\u4e2a\u5e10\u6237\u3002\n\n\n\u5728Mist\u4e2d\u521b\u5efa\u8d26\u6237\u6587\u4ef6\u975e\u5e38\u7b80\u5355\u3002\n\u5728\u201c\u5e10\u6237\u201d\u90e8\u5206\uff0c\u70b9\u51fb\u201c\u6dfb\u52a0\u5e10\u6237\u201d\u3002\n\u9009\u62e9\u4e00\u4e2a\u5f3a\u5927\u4e14\u6613\u4e8e\u8bb0\u5fc6\u7684\u5bc6\u7801(\u8bb0\u4f4f\u6ca1\u6709\u5bc6\u7801\u6062\u590d\u9009\u9879)\uff0c\u786e\u8ba4\u5b83\uff0c\u7136\u540e\u521b\u5efa\u60a8\u7684\u5e10\u6237\u3002\n\u521b\u5efa\u81f3\u5c112\u4e2a\u5e10\u6237\u3002\n\u5982\u679c\u60a8\u613f\u610f\uff0c\u53ef\u4ee5\u5728\u8fd0\u884cMist\u7684\u5355\u72ec\u8ba1\u7b97\u673a\u4e0a\u521b\u5efa\u8f85\u52a9\u5e10\u6237(\u7406\u8bba\u4e0a\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u60a8\u7684\u591a\u91cd\u8eab\u4efd\u66f4\u5b89\u5168)\u3002\n\u521b\u5efa\u591a\u91cd\u94b1\u5305\u65f6\uff0c\u60a8\u53ea\u9700\u8981\u8f85\u52a9\u5e10\u6237\u7684\u516c\u94a5(\u60a8\u7684\u5b58\u6b3e\u5730\u5740)(\u590d\u5236/\u7c98\u8d34\u5b83\u4eec\uff0c\u5343\u4e07\u4e0d\u8981\u624b\u52a8\u8f93\u5165)\u3002\n\u60a8\u7684\u4e3b\u5e10\u6237\u5c06\u9700\u8981\u521b\u5efamultisig\u94b1\u5305\u5408\u7ea6\uff0c\u56e0\u6b64\u5b83\u5fc5\u987b\u4f4d\u4e8e\u60a8\u521b\u5efamultisig\u94b1\u5305\u7684\u8ba1\u7b97\u673a\u4e0a\u3002\n\n\n\u73b0\u5728\u60a8\u5df2\u7ecf\u8bbe\u7f6e\u4e86\u5e10\u6237\uff0c\u8bf7\u4fdd\u6301\u5b89\u5168\u5e76\u5907\u4efd(\u5982\u679c\u60a8\u7684\u8ba1\u7b97\u673a\u5d29\u6e83\uff0c\u5982\u679c\u60a8\u6ca1\u6709\u5907\u4efd\uff0c\u5219\u4f1a\u5931\u53bb\u5e73\u8861)\u3002\n\u70b9\u51fb\u9876\u90e8\u83dc\u5355\u4e2d\u7684\u201c\u5907\u4efd\u201d\u3002\n\u9009\u62e9'keystore'\u6587\u4ef6\u5939\uff0c\u53cd\u9762\u70b9\u51fb\u5b83/\u9009\u62e9'copy'(\u4e0d\u8981\u9009\u62e9'cut'\uff0c\u8fd9\u5c06\u662f\u975e\u5e38\u7cdf\u7cd5\u7684)\u3002\n\u5bfc\u822a\u81f3\u60a8\u7684\u684c\u9762\uff0c\u5728\u7a7a\u767d\u533a\u57df\u4e2d\u5355\u51fb\u9f20\u6807\u53f3\u952e\u5e76\u9009\u62e9\u201c\u7c98\u8d34\u201d\u3002\n\u60a8\u53ef\u80fd\u5e0c\u671b\u5c06\u6b64'keystore'\u6587\u4ef6\u5939\u7684\u65b0\u526f\u672c\u91cd\u547d\u540d\u4e3a'Ethereum -keystore-backup-year-month-day'\u7b49\uff0c\u4ee5\u4fbf\u60a8\u7a0d\u540e\u5feb\u901f\u8bc6\u522b\u5b83\u3002\n\u6b64\u65f6\uff0c\u60a8\u53ef\u4ee5\u5c06\u6587\u4ef6\u5939\u5185\u5bb9\u6dfb\u52a0\u5230zip/rar\u6587\u4ef6\u4e2d(\u5982\u679c\u5728\u7ebf\u5907\u4efd\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u53e6\u4e00\u4e2a\u5f3a\u5927\u4f46\u6613\u4e8e\u8bb0\u5fc6\u7684\u5bc6\u7801\u5bf9\u5bc6\u7801\u8fdb\u884c\u5bc6\u7801\u4fdd\u62a4)\uff0c\u5c06\u5176\u590d\u5236\u5230USB\u9a71\u52a8\u5668\uff0c\u5c06\u5176\u523b\u5f55\u5230,CD/DVD\uff0c\u6216\u5c06\u5176\u4e0a\u4f20\u5230\u5728\u7ebf\u5b58\u50a8(Dropbox/Google Drive/\u7b49)\u3002\n\n\n\u60a8\u73b0\u5728\u5e94\u8be5\u5411\u60a8\u7684\u4e3b\u8d26\u6237\u6dfb\u52a0\u5927\u7ea6\u4e0d\u4f4e\u4e8e0.02 ETH(\u60a8\u5c06\u5f00\u59cb\u521b\u5efa\u8d26\u6237\u7684\u8d26\u6237)\n\u521b\u5efa\u591a\u91cd\u94b1\u5305\u5408\u7ea6\u65f6\uff0c\u8fd9\u662f\u4ea4\u6613\u8d39\u7528\u6240\u5fc5\u9700\u7684\u3002\n\u53e6\u5916\u8fd8\u9700\u89811\u4e2aETH(\u6216\u66f4\u591a)\uff0c\u56e0\u4e3aMist\u76ee\u524d\u8981\u6c42\u8fd9\u6837\u505a\u624d\u80fd\u4fdd\u8bc1\u94b1\u5305\u5408\u7ea6\u4ea4\u6613\u6709\u8db3\u591f\u7684'\u71c3\u6599'\u6765\u6b63\u786e\u6267\u884c...\u6240\u4ee5\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\uff0c\u603b\u8ba1\u4e0d\u4f4e\u4e8e1.02 ETH\u3002\n\n\n\u5728\u521b\u5efa\u65f6\uff0c\u60a8\u5c06\u8f93\u5165\u60a8\u9644\u52a0\u5230\u6b64multisig\u94b1\u5305\u7684\u6240\u6709\u5e10\u6237\u7684\u5b8c\u6574\u5730\u5740\u3002\n\u5728\u8fdb\u5165Mist\u4e2d\u7684\u6bcf\u4e2a\u5e10\u6237\u7684\u8be6\u7ec6\u4fe1\u606f\u9875\u9762\uff0c\u5e76\u4ece\u53f3\u4fa7\u6309\u94ae\u5217\u4e2d\u9009\u62e9\u201c\u590d\u5236\u5730\u5740\u201d\u540e\uff0c\u6211\u5efa\u8bae\u5c06\u6bcf\u4e2a\u5730\u5740\u590d\u5236/\u7c98\u8d34\u5230\u7eaf\u6587\u672c\u7f16\u8f91\u5668(\u8bb0\u4e8b\u672c/kedit/\u7b49)\u3002\n\u5343\u4e07\u4e0d\u8981\u624b\u52a8\u8f93\u5165\u5730\u5740\uff0c\u5426\u5219\u5192\u7740\u62fc\u5199\u9519\u8bef\u7684\u98ce\u9669\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u5931\u53bb\u5c06\u4f59\u989d\u53d1\u9001\u5230\u9519\u8bef\u5730\u5740\u7684\u4ea4\u6613\u3002\n\n\n\u6211\u4eec\u73b0\u5728\u51c6\u5907\u521b\u5efamultisig\u94b1\u5305\u3002\n\u5728\u201c\u7535\u5b50\u94b1\u5305\u5408\u7ea6\u201d\u4e0b\uff0c\u9009\u62e9\u201c\u6dfb\u52a0\u94b1\u5305\u5408\u7ea6\u201d\u3002\n\u7ed9\u5b83\u4e00\u4e2a\u540d\u5b57\uff0c\u9009\u62e9\u4e3b\u5e10\u6237\u6240\u6709\u8005\uff0c\u7136\u540e\u9009\u62e9'\u591a\u91cd\u7b7e\u540d\u94b1\u5305\u5408\u7ea6'\u3002\n\u60a8\u4f1a\u770b\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u5185\u5bb9\uff1a\n\n\n\u8fd9\u662f\u7531X\u4e2a\u6240\u6709\u8005\u63a7\u5236\u7684\u8054\u5408\u8d26\u6237\u3002\n\u60a8\u6bcf\u5929\u6700\u591a\u53ef\u4ee5\u53d1\u9001X\u4ee5\u592a\u3002\n\u4efb\u4f55\u8d85\u8fc7\u8be5\u9650\u989d\u7684\u4ea4\u6613\u90fd\u9700\u8981X\u4e1a\u4e3b\u7684\u786e\u8ba4\u3002\n\n\n\u65e0\u8bba\u60a8\u5e0c\u671b\u6bcf\u65e5\u63d0\u6b3e\u9650\u989d(\u53ea\u9700\u8981\u4e00\u4e2a\u8d26\u6237\u63d0\u53d6\u8be5\u91d1\u989d)\uff0c\u4ee5\u53ca\u9700\u8981\u591a\u5c11\u6240\u6709\u8005(\u8d26\u6237)\u6765\u6838\u51c6\u4efb\u4f55\u63d0\u6b3e\u91d1\u989d\uff0c\u8bf7\u8bbe\u7f6e\u60a8\u9644\u52a0\u5230\u6b64multisig\u94b1\u5305\u7684\u4efb\u4f55\u6570\u91cf\u7684\u6240\u6709\u8005(\u8d26\u6237),\u8d85\u8fc7\u6bcf\u65e5\u9650\u989d\u3002\n\n\n\u73b0\u5728\u6dfb\u52a0\u60a8\u4e4b\u524d\u590d\u5236/\u7c98\u8d34\u5230\u60a8\u7684\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u7684\u5e10\u6237\u7684\u5730\u5740\uff0c\u786e\u8ba4\u60a8\u7684\u6240\u6709\u8bbe\u7f6e\u90fd\u662f\u6b63\u786e\u7684\uff0c\u7136\u540e\u70b9\u51fb\u5e95\u90e8\u7684\u201c\u521b\u5efa\u201d\u3002\n\u7136\u540e\u60a8\u9700\u8981\u8f93\u5165\u5bc6\u7801\u624d\u80fd\u53d1\u9001\u4ea4\u6613\u3002\n\u5728\u201c\u7535\u5b50\u94b1\u5305\u5408\u7ea6\u201d\u90e8\u5206\uff0c\u5b83\u5e94\u8be5\u663e\u793a\u60a8\u7684\u65b0\u94b1\u5305\uff0c\u5e76\u8bf4'\u521b\u5efa'\u3002\n\n\n\u5f53\u94b1\u5305\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u60a8\u5e94\u8be5\u5728\u5c4f\u5e55\u4e0a\u770b\u5230\u60a8\u7684\u5408\u7ea6\u5730\u5740\u3002\n\u9009\u62e9\u6574\u4e2a\u5730\u5740\uff0c\u5c06\u5176\u590d\u5236/\u7c98\u8d34\u5230\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u7684\u65b0\u6587\u672c\u6587\u4ef6\u4e2d\uff0c\u7136\u540e\u5c06\u6587\u672c\u6587\u4ef6\u4fdd\u5b58\u5230\u684c\u9762\n\n\n\u73b0\u5728\uff0c\u60a8\u53ea\u9700\u5907\u4efd\u201cEthereum-Wallet-Address.txt\u201d\u6587\u4ef6\uff0c\u5c31\u50cf\u5907\u4efd\u60a8\u7684\u5e10\u6237\u6587\u4ef6\u4e00\u6837\uff0c\u7136\u540e\u60a8\n\n\n\u5982\u679c\u60a8\u8981\u4ece\u5907\u4efd\u4e2d\u6062\u590d\uff0c\u53ea\u9700\u5c06'Ethereum -keystore-backup'\u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\u590d\u5236\u5230\u672c\u6f14\u7ec3\u7684\u7b2c\u4e00\u90e8\u5206\u4e2d\u63d0\u5230\u7684'keystore'\u6587\u4ef6\u5939\u4e2d\u5373\u53ef\u3002\n\u4ec5\u4f9b\u53c2\u8003\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u521b\u5efa'keystore'\u6587\u4ef6\u5939(\u5982\u679c\u5b83\u662f\u4ee5\u524d\u4ece\u672a\u5b89\u88c5\u8fc7\u7684\u673a\u5668\u4e0a\u7684\u5168\u65b0\u5b89\u88c5\u7684Mist)(\u7b2c\u4e00\u6b21\u521b\u5efa\u5e10\u6237\u65f6\u662f\u521b\u5efa\u6b64\u6587\u4ef6\u5939\u65f6)\u3002\n\u81f3\u4e8e\u6062\u590d\u591a\u91cd\u94b1\u5305\uff0c\u800c\u4e0d\u662f\u50cf\u6211\u4eec\u4e4b\u524d\u5728\u521b\u5efa\u65f6\u90a3\u6837\u9009\u62e9\u201c\u591a\u7b7e\u540d\u94b1\u5305\u5408\u7ea6\u201d\uff0c\u6211\u4eec\u53ea\u9700\u9009\u62e9\u201c\u5bfc\u5165\u94b1\u5305\u201d\u3002\n\n\n\u6545\u969c\u6392\u9664\uff1a\n\n\n\n\nMist\u4e0d\u4f1a\u540c\u6b65\u3002\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\u4e4b\u4e00\u5c31\u662f\u5c06PC\u786c\u4ef6\u65f6\u949f\u4e0eNTP\u670d\u52a1\u5668\u540c\u6b65\uff0c\u56e0\u6b64\u65f6\u95f4\u5b8c\u5168\u6b63\u786e\uff0c\u7136\u540e\u91cd\u65b0\u542f\u52a8\u3002\n\n\nMist\u540c\u6b65\u540e\u5f00\u59cb\uff0c\u4f46\u662f\u662f\u4e00\u4e2a\u7a7a\u767d\u7684\u767d\u8272\u5c4f\u5e55\u3002\u4f60\u6709\u53ef\u80fd\u5728\u57fa\u4e8eLinux\u7684\u64cd\u4f5c\u7cfb\u7edf(Ubuntu\uff0cLinux Mint\u7b49)\u4e0a\u8fd0\u884cxorg\u89c6\u9891\u9a71\u52a8\u7a0b\u5e8f\u3002\u5c1d\u8bd5\u5b89\u88c5\u5236\u9020\u5546\u7684\u89c6\u9891\u9a71\u52a8\u7a0b\u5e8f\u3002\n\n\n\u9519\u8bef\u7684\u5bc6\u7801\u901a\u77e5\u3002\u8fd9\u5728\u76ee\u524d\u7684Mist\u7248\u672c\u4e0a\u4f3c\u4e4e\u662f\u9519\u8bef\u7684\u901a\u77e5\u3002\u91cd\u65b0\u542f\u52a8Mist\uff0c\u95ee\u9898\u5e94\u8be5\u6d88\u5931(\u5982\u679c\u4f60\u786e\u5b9e\u8f93\u5165\u4e86\u6b63\u786e\u7684\u5bc6\u7801)\u3002\n\n\n\n\n\u4f7f\u7528Eth\n\n\n\u4e0e\u4f7f\u7528geth\u53ef\u7528\u7684\u5bc6\u94a5\u7ba1\u7406\u76f8\u5173\u7684\u6bcf\u4e2a\u9009\u9879\u90fd\u53ef\u4ee5\u5728eth\u4e2d\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u4f7f\u7528\u3002\n\n\n\u4ee5\u4e0b\u662f\u4e0e\u5e10\u6237\u76f8\u5173\u7684\u9009\u9879\uff1a\n\n\n \neth\n \naccount\n \nlist\n  \n// \u5217\u51fa\u94b1\u5305\u4e2d\u7684\u6240\u6709\u53ef\u7528\u5bc6\u94a5\u3002\n\n\n \neth\n \naccount\n \nnew\n   \n// \u5217\u51fa\u94b1\u5305\u4e2d\u7684\u6240\u6709\u53ef\u7528\u5bc6\u94a5\u3002\n\n\n \neth\n \naccount\n \nupdate\n \n[\nuuid\n|\naddress\n \n,\n \n...]\n  \n// \u5bf9\u7ed9\u5b9a\u7684\u5bc6\u94a5\u8fdb\u884c\u89e3\u5bc6\u548c\u91cd\u65b0\u52a0\u5bc6\u3002\n\n\n \neth\n \naccount\n \nimport\n \n[\nuuid\n|\nfile\n|\nsecret\n-\nhex\n]\n \n// \u4ece\u7ed9\u5b9a\u6765\u6e90\u5bfc\u5165\u5bc6\u94a5\u5e76\u5c06\u5176\u653e\u7f6e\u5728\u94b1\u5305\u4e2d\u3002\n\n\n\n\n\n\u4ee5\u4e0b\u662f\u94b1\u5305\u76f8\u5173\u9009\u9879\uff1a\n\n\n \neth\n \nwallet\n \nimport\n \nfile\n \n//Import a presale wallet.\n\n\n\n\n\n\n\nNote\n\n\n'\u8d26\u6237\u5bfc\u5165'\u9009\u9879\u53ea\u80fd\u7528\u4e8e\u5bfc\u5165\u901a\u7528\u5bc6\u94a5\u6587\u4ef6\u3002\u201c\u94b1\u5305\u5bfc\u5165\u201d\u9009\u9879\u53ea\u80fd\u7528\u4e8e\u5bfc\u5165\u9884\u552e\u94b1\u5305\u3002\n\n\n\n\n\u201c\u94b1\u5305\u5bfc\u5165\u201d\u9009\u9879\u53ea\u80fd\u7528\u4e8e\u5bfc\u5165\u9884\u552e\u94b1\u5305\u3002\n\n\n \nweb3\n.\npersonal\n\n\n{\n\n  \nlistAccounts\n:\n \n[],\n\n  \ngetListAccounts\n:\n \nfunction\n(\ncallback\n),\n\n  \nlockAccount\n:\n \nfunction\n(),\n\n  \nnewAccount\n:\n \nfunction\n(),\n\n  \nunlockAccount\n:\n \nfunction\n()\n\n\n}\n\n\n\n\n\n\u4f7f\u7528EthKey\n\n\n\u4e0d\u5efa\u8bae\u4f7f\u7528!\n\n\nEthkey\u662fC ++\u5b9e\u73b0\u7684CLI\u5de5\u5177\uff0c\u5141\u8bb8\u60a8\u4e0eEthereum\u94b1\u5305\u8fdb\u884c\u4ea4\u4e92\u3002\n\u6709\u4e86\u5b83\uff0c\u60a8\u53ef\u4ee5\u5217\u51fa\uff0c\u68c0\u67e5\uff0c\u521b\u5efa\uff0c\u5220\u9664\u548c\u4fee\u6539\u5bc6\u94a5\u5e76\u68c0\u67e5\uff0c\u521b\u5efa\u548c\u7b7e\u7f72\u4ea4\u6613\u3002\n\n\n\u6211\u4eec\u5047\u8bbe\u60a8\u8fd8\u6ca1\u6709\u5728Aleth\u7cfb\u5217\u5ba2\u6237\u7aef\u8fd0\u884c\u8bf8\u5982eth\u6216\u5176\u4ed6\u4efb\u4f55\u5ba2\u6237\u7aef\u3002\n\u5982\u679c\u4f60\u6709\uff0c\u4f60\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e00\u8282\u3002\n\u8981\u521b\u5efa\u94b1\u5305\uff0c\u8bf7\u4f7f\u7528\ncreatewallet\n\u547d\u4ee4\u8fd0\u884c\nethkey\n\uff1a\n\n\n ethkey createwallet\n\n\n\n\n\u8bf7\u8f93\u5165MASTER\u5bc6\u7801\u4ee5\u4fdd\u62a4\u60a8\u7684\u5bc6\u7801\u5b58\u50a8\u533a(\u4f7f\u5176\u5f3a\u5927\uff01)\uff1a\u7cfb\u7edf\u4f1a\u8981\u6c42\u60a8\u63d0\u4f9b\u4e3b\u5bc6\u7801\u3002\n\u8fd9\u53ef\u4ee5\u4fdd\u62a4\u60a8\u7684\u9690\u79c1\uff0c\u5e76\u4f5c\u4e3a\u4efb\u4f55\u5bc6\u94a5\u7684\u9ed8\u8ba4\u5bc6\u7801\u3002\n\u60a8\u9700\u8981\u518d\u6b21\u8f93\u5165\u76f8\u540c\u7684\u6587\u5b57\u6765\u786e\u8ba4\u3002\n\n\n\n\nNote\n\n\n\u4f7f\u7528\u5f3a\u5927\u7684\u968f\u673a\u751f\u6210\u7684\u5bc6\u7801\u3002\n\n\n\n\n\u53ea\u9700\u4f7f\u7528list\u547d\u4ee4\u5373\u53ef\u5217\u51fa\u94b1\u5305\u4e2d\u7684\u5bc6\u94a5\uff1a\n\n\n ethkey list\n\nNo keys found.\n\n\n\n\n\u6211\u4eec\u8fd8\u6ca1\u6709\u521b\u5efa\u4efb\u4f55\u5bc6\u94a5\uff0c\u5b83\u544a\u8bc9\u6211\u4eec\uff01,\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u3002\n\n\n\u8981\u521b\u5efa\u5bc6\u94a5\uff0c\u6211\u4eec\u4f7f\u7528\nnew\n\u547d\u4ee4\u3002\n\u8981\u4f7f\u7528\u5b83\uff0c\u6211\u4eec\u5fc5\u987b\u4f20\u9012\u4e00\u4e2a\u540d\u5b57 - \u8fd9\u662f\u6211\u4eec\u5728\u94b1\u5305\u4e2d\u7ed9\u8fd9\u4e2a\u8d26\u6237\u7684\u540d\u5b57\u3002\u6211\u4eec\u79f0\u4e4b\u4e3a\u6d4b\u8bd5\uff1a\n\n\n ethkey new \ntest\n\n\n\n\n\n\u8f93\u5165\u4e00\u4e2a\u5bc6\u7801\u6765\u4fdd\u62a4\u8fd9\u4e2a\u5e10\u6237(\u6216\u8005\u6ca1\u6709\u4f7f\u7528\u4e3b\u5bc6\u7801)\u3002\n\u5b83\u4f1a\u63d0\u793a\u4f60\u8f93\u5165\u4e00\u4e2a\u5bc6\u7801\u6765\u4fdd\u62a4\u8fd9\u4e2a\u5bc6\u94a5\u3002\n\u5982\u679c\u60a8\u53ea\u6309\u56de\u8f66\uff0c\u5b83\u5c06\u4f7f\u7528\u9ed8\u8ba4\u7684\u4e3b\u5bc6\u7801\u3002\n\u901a\u5e38\u8fd9\u610f\u5473\u7740\u5f53\u60a8\u60f3\u4f7f\u7528\u8be5\u5e10\u6237\u65f6(\u56e0\u4e3a\u5b83\u8bb0\u4f4f\u4e3b\u5bc6\u7801)\uff0c\u60a8\u4e0d\u9700\u8981\u8f93\u5165\u5bc6\u94a5\u7684\u5bc6\u7801\u3002\n\u4e00\u822c\u6765\u8bf4\uff0c\u60a8\u5e94\u8be5\u5c1d\u8bd5\u4e3a\u6bcf\u4e2a\u5bc6\u94a5\u4f7f\u7528\u4e0d\u540c\u7684\u5bc6\u7801\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u9632\u6b62\u4e00\u4e2a\u53d7\u635f\u7684\u5bc6\u7801\u8bbf\u95ee\u5176\u4ed6\u5e10\u6237\u3002\n\u4f46\u662f\uff0c\u51fa\u4e8e\u65b9\u4fbf\uff0c\u60a8\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u4f4e\u5b89\u5168\u6027\u5e10\u6237\u4f7f\u7528\u76f8\u540c\u7684\u5bc6\u7801\u77ed\u8bed\u3002\n\n\n\u5728\u8fd9\u91cc\uff0c\u8ba9\u6211\u4eec\u7ed9\u5b83123\u7684\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u60f3\u8c61\u529b\u5bc6\u7801\u3002\n(\u6c38\u8fdc\u4e0d\u8981\u4f7f\u7528\u8fd9\u6837\u7684\u7b80\u5355\u5bc6\u7801\u6765\u8fdb\u884c\u5176\u4ed6\u4efb\u4f55\u4e8b\u60c5\u800c\u4e0d\u662f\u77ed\u6682\u7684\u6d4b\u8bd5\u8d26\u6237)\u3002\n\u4e00\u65e6\u4f60\u8f93\u5165\u5bc6\u7801\uff0c\u5b83\u4f1a\u8981\u6c42\u4f60\u518d\u6b21\u8f93\u5165\u786e\u8ba4\u3002\n\u7b2c\u4e8c\u6b21\u8f93\u5165123\u3002\n\u56e0\u4e3a\u60a8\u7ed9\u4e86\u5b83\u81ea\u5df1\u7684\u5bc6\u7801\u77ed\u8bed\uff0c\u5b83\u8fd8\u4f1a\u8981\u6c42\u60a8\u63d0\u4f9b\u6b64\u5bc6\u7801\u7684\u63d0\u793a\uff0c\u53ea\u8981\u5b83\u8981\u6c42\u60a8\u8f93\u5165\u8be5\u5bc6\u7801\u5c31\u4f1a\u663e\u793a\u7ed9\u60a8\u3002\n\u8be5\u63d0\u793a\u5b58\u50a8\u5728\u94b1\u5305\u4e2d\uff0c\u5e76\u4e14\u672c\u8eab\u53d7\u4e3b\u5bc6\u7801\u7684\u4fdd\u62a4\u3002\n\u8f93\u5165321\u5012\u9000\u7684\u771f\u6b63\u53ef\u6015\u7684\u6697\u793a\u3002\n\n\n ethkey new \ntest\n\n\nEnter a passphrase with which to secure this account \n(\nor nothing to use the master passphrase\n)\n:\nPlease confirm the passphrase by entering it again:\nEnter a hint to \nhelp\n you remember this passphrase: \n321\n backwards\nCreated key 055dde03-47ff-dded-8950-0fe39b1fa101\n  Name: \ntest\n\n  Password hint: \n321\n backwards\n  ICAP: XE472EVKU3CGMJF2YQ0J9RO1Y90BC0LDFZ\n  Raw hex: 0092e965928626f8880629cec353d3fd7ca5974f\n\n\n\n\n\u6240\u6709\u6b63\u5e38(\u53c8\u540d\u76f4\u63a5)ICAP\u5730\u5740\u90fd\u4ee5XE\u5f00\u5934\uff0c\u6240\u4ee5\u60a8\u5e94\u8be5\u80fd\u591f\u8f7b\u677e\u8bc6\u522b\u5b83\u4eec\u3002\n\u8fd8\u8981\u6ce8\u610f\uff0c\u8be5\u952e\u5728\u521b\u5efa\u952e\u540e\u6709\u53e6\u4e00\u4e2a\u6807\u8bc6\u7b26\u3002\n\u8fd9\u5c31\u662f\u6240\u8c13\u7684UUID\u3002\n\u8fd9\u662f\u4e0e\u5e10\u6237\u672c\u8eab\u5b8c\u5168\u65e0\u5173\u7684\u5bc6\u94a5\u7684\u552f\u4e00\u6807\u8bc6\u7b26\u3002\n\u77e5\u9053\u5b83\u6ca1\u6709\u5e2e\u52a9\u653b\u51fb\u8005\u53d1\u73b0\u4f60\u5728\u7f51\u7edc\u4e0a\u7684\u4eba\u3002\n\u5b83\u4e5f\u6070\u597d\u662f\u5bc6\u94a5\u7684\u6587\u4ef6\u540d\uff0c\u60a8\u53ef\u4ee5\u5728\\\u301c/ .web3 / keys(Mac\u6216Linux)\u6216\\ $ HOME / AppData / Web3 / keys(Windows)\u4e2d\u627e\u5230\u8be5\u6587\u4ef6\u540d\u3002\n\u73b0\u5728\u8ba9\u6211\u4eec\u901a\u8fc7\u5217\u51fa\u94b1\u5305\u4e2d\u7684\u5bc6\u94a5\u6765\u786e\u4fdd\u5b83\u6b63\u5e38\u5de5\u4f5c\uff1a\n\n\n ethkey list\n055dde03-47ff-dded-8950-0fe39b1fa101 0092e965\u2026 XE472EVKU3CGMJF2YQ0J9RO1Y90BC0LDFZ  \ntest\n\n\n\n\n\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684\u5bc6\u94a5\u5b58\u50a8\u5728\u6587\u4ef6055dde\u4e2d\uff0c\u5e76\u4e14\u5177\u6709\u4eceXE472EVK\u5f00\u59cb\u7684ICAP\u5730\u5740....\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684\u5bc6\u94a5\u5b58\u50a8\u5728\u6587\u4ef6055dde\u4e2d\uff0c\u5e76\u4e14\u5177\u6709\u4eceXE472EVK\u5f00\u59cb\u7684ICAP\u5730\u5740....\n\u4e0d\u662f\u7279\u522b\u5bb9\u6613\u8bb0\u4f4f\u7684\u4e1c\u897f\uff0c\u800c\u662f\u6709\u7528\u7684\uff0c\u5b83\u4e5f\u6709\u5b83\u7684\u4e13\u6709\u540d\u79f0\uff0c\u6d4b\u8bd5\u3002\n\n\n\u5bfc\u5165\u9884\u552e\u94b1\u5305\n\n\n\u4f7f\u7528Mist\u4ee5\u592a\u574a\u94b1\u5305\n\n\n\u4f7f\u7528GUI Mist Ethereum\u94b1\u5305\u5bfc\u5165\u9884\u552e\u94b1\u5305\u975e\u5e38\u7b80\u5355\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u5728\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7cfb\u7edf\u4f1a\u8be2\u95ee\u60a8\u662f\u5426\u8981\u5bfc\u5165\u9884\u552e\u94b1\u5305\u3002\n\n\n\n\nWarning\n\n\nMist\u94b1\u5305\u662fbeta\u8f6f\u4ef6\u3002\u8c28\u9632\u548c\u4f7f\u7528\u5b83\u9700\u8981\u60a8\u81ea\u62c5\u98ce\u9669\u3002\n\n\n\n\n\u5728\u521b\u5efa\u5e10\u6237\uff1a\u4f7f\u7528Mist\u4ee5\u592a\u574a\u94b1\u5305\n\u4f7f\u7528Mist - \u4ee5\u592a\u574a\u94b1\u5305\n\u4e00\u8282\u4e2d\u7ed9\u51fa\u4e86\u5b89\u88c5Mist\u4ee5\u592a\u574a\u94b1\u5305\u7684\u8bf4\u660e\u3002\n\n\n\u53ea\u9700\u5c06\u60a8\u7684\n.json\n\u9884\u552e\u94b1\u5305\u6587\u4ef6\u62d6\u653e\u5230\u6307\u5b9a\u533a\u57df\u5e76\u8f93\u5165\u60a8\u7684\u5bc6\u7801\u5373\u53ef\u5bfc\u5165\u60a8\u7684\u9884\u552e\u5e10\u6237\u3002\n\n\n{.align-center width=\"436px\" height=\"352px\"}\n\n\n\u5982\u679c\u60a8\u5728\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\u65f6\u9009\u62e9\u4e0d\u5bfc\u5165\u9884\u552e\u94b1\u5305\uff0c\u53ef\u4ee5\u968f\u65f6\u901a\u8fc7\u9009\u62e9\u5e94\u7528\u7a0b\u5e8f\u83dc\u5355\u680f\u4e2d\u7684\u201c\u5e10\u6237\u201d\u83dc\u5355\uff0c\u7136\u540e\u9009\u62e9\u201c\u5bfc\u5165\u9884\u552e\u5e10\u6237\u201d\u6765\u5bfc\u5165\u5b83\u3002\n\n\n\n\nNote\n\n\nMist\u94b1\u5305\u4ecd\u5728\u79ef\u6781\u5f00\u53d1\u4e2d\uff0c\u56e0\u6b64\u4e0a\u8ff0\u6b65\u9aa4\u7684\u7ec6\u8282\u53ef\u80fd\u968f\u5347\u7ea7\u800c\u6539\u53d8\u3002\n\n\n\n\n\u4f7f\u7528geth\n\n\n\u5982\u679c\u60a8\u6709geth\u7684\u72ec\u7acb\u5b89\u88c5\uff0c\u5219\u901a\u8fc7\u5728\u7ec8\u7aef\u4e2d\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u5bfc\u5165\u9884\u552e\u94b1\u5305\uff1a\n\n\ngeth wallet import /path/to/my/presale-wallet.json\n\n\n\n\n\u7cfb\u7edf\u4f1a\u63d0\u793a\u60a8\u8f93\u5165\u5bc6\u7801\u3002\n\n\n\u66f4\u65b0\u5e10\u6237\n\n\n\u60a8\u53ef\u4ee5\u5c06\u5bc6\u94a5\u6587\u4ef6\u5347\u7ea7\u5230\u6700\u65b0\u7684\u5bc6\u94a5\u6587\u4ef6\u683c\u5f0f\u548c/\u6216\u5347\u7ea7\u5bc6\u94a5\u6587\u4ef6\u5bc6\u7801\u3002\n\n\n\u4f7f\u7528 geth\n\n\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u5e26\u6709\u5e10\u6237\u5730\u5740\u6216\u7d22\u5f15\u4f5c\u4e3a\u53c2\u6570\u7684\nupdate\n\u5b50\u547d\u4ee4\u66f4\u65b0\u547d\u4ee4\u884c\u4e0a\u7684\u73b0\u6709\u5e10\u6237\u3002\n\u8bf7\u8bb0\u4f4f\uff0c\u5e10\u6237\u7d22\u5f15\u53cd\u6620\u4e86\u521b\u5efa\u7684\u987a\u5e8f(\u5305\u542b\u521b\u5efa\u65f6\u95f4\u7684\u5bc6\u94a5\u6587\u4ef6\u540d\u7684\u5b57\u5178\u987a\u5e8f)\u3002\n\n\ngeth account update b0047c606f3af7392e073ed13253f8f4710b08b6\n\n\n\n\n\u8981\u4e48\n\n\ngeth account update \n2\n\n\n\n\n\n\u4f8b\u5982\uff1a\n\n\n$ geth account update a94f5374fce5edbc8e2a8697c15331677e6ebf0b\n\nUnlocking account a94f5374fce5edbc8e2a8697c15331677e6ebf0b \n|\n Attempt \n1\n/3\nPassphrase:\n0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b\naccount \na94f5374fce5edbc8e2a8697c15331677e6ebf0b\n unlocked.\nPlease give a new password.\nDo not forget this password.\nPassphrase:\nRepeat Passphrase:\n0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b\n\n\n\n\n\u8be5\u5e10\u6237\u4ee5\u52a0\u5bc6\u683c\u5f0f\u4fdd\u5b58\u5728\u6700\u65b0\u7248\u672c\u4e2d\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u60a8\u8f93\u5165\u5bc6\u7801\u4ee5\u89e3\u9501\u5e10\u6237\uff0c\u800c\u53e6\u4e00\u4e2a\u5e10\u6237\u5219\u4fdd\u5b58\u66f4\u65b0\u7684\u6587\u4ef6\u3002\n\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u547d\u4ee4\u5c06\u4e0d\u63a8\u8350\u683c\u5f0f\u7684\u5e10\u6237\u8fc1\u79fb\u5230\u6700\u65b0\u7684\u683c\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u66f4\u6539\u5e10\u6237\u7684\u5bc6\u7801\u3002\n\n\n\u5bf9\u4e8e\u975e\u4ea4\u4e92\u5f0f\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528\n--password\n\u6807\u5fd7\u6307\u5b9a\u5bc6\u7801\uff1a\n\n\ngeth --password \npasswordfile\n account update a94f5374fce5edbc8e2a8697c15331677e6ebf0bs\n\n\n\n\n\u7531\u4e8e\u53ea\u80fd\u8f93\u5165\u4e00\u4e2a\u5bc6\u7801\uff0c\u6240\u4ee5\u53ea\u80fd\u8fdb\u884c\u683c\u5f0f\u66f4\u65b0\uff0c\u53ea\u80fd\u4ee5\u4ea4\u4e92\u65b9\u5f0f\u66f4\u6539\u5bc6\u7801\u3002\n\n\n\n\nNote\n\n\n\u5e10\u6237\u66f4\u65b0\u5177\u6709\u53ef\u80fd\u4f1a\u6539\u53d8\u5e10\u6237\u987a\u5e8f\u7684\u526f\u4f5c\u7528\u3002\n\u6210\u529f\u66f4\u65b0\u540e\uff0c\u8be5\u76f8\u540c\u5bc6\u94a5\u7684\u6240\u6709\u4ee5\u524d\u7684\u683c\u5f0f/\u7248\u672c\u5c06\u88ab\u5220\u9664\uff01\n\n\n\n\n\u5907\u4efd\u548c\u6062\u590d\u5e10\u6237\n\n\n\u624b\u52a8\u5907\u4efd/\u6062\u590d\n\n\n\u60a8\u5fc5\u987b\u62e5\u6709\u5e10\u6237\u7684\u5bc6\u94a5\u6587\u4ef6\u624d\u80fd\u53d1\u9001\u8be5\u5e10\u6237\u7684\u4efb\u4f55\u4ea4\u6613\u3002\n\u5bc6\u94a5\u6587\u4ef6\u4f4d\u4e8e\u60a8\u4ee5\u592a\u574a\u8282\u70b9\u6570\u636e\u76ee\u5f55\u7684\u5bc6\u94a5\u5e93\u5b50\u76ee\u5f55\u4e2d\u3002\n\u9ed8\u8ba4\u6570\u636e\u76ee\u5f55\u4f4d\u7f6e\u662f\u5e73\u53f0\u7279\u5b9a\u7684\uff1a\n\n\n\n\nWindows: \n%appdata%\\Ethereum\\keystore\n\n\nLinux: \n~/.ethereum/keystore\n\n\nMac: \n~/Library/Ethereum/keystore\n\n\n\n\n\u8981\u5907\u4efd\u60a8\u7684\u5bc6\u94a5\u6587\u4ef6(\u5e10\u6237)\uff0c\u8bf7\u590d\u5236\nkeystore\n\u5b50\u76ee\u5f55\u4e2d\u7684\u4e2a\u522b\u5bc6\u94a5\u6587\u4ef6\u6216\u590d\u5236\u6574\u4e2a\nkeystore\n\u6587\u4ef6\u5939\u3002\n\n\n\u8981\u6062\u590d\u60a8\u7684\u5bc6\u94a5\u6587\u4ef6(\u5e10\u6237)\uff0c\u8bf7\u5c06\u5bc6\u94a5\u6587\u4ef6\u590d\u5236\u56de\u539f\u6765\u4f4d\u4e8e\u7684\u201ckeystore\u201d\u5b50\u76ee\u5f55\u4e2d\u3002\n\n\n\u5bfc\u5165\u672a\u52a0\u5bc6\u7684\u79c1\u94a5\n\n\ngeth\n\u652f\u6301\u5bfc\u5165\u672a\u52a0\u5bc6\u7684\u79c1\u94a5\n\n\ngeth account import /path/to/\nkeyfile\n\n\n\n\n\n\u8be5\u547d\u4ee4\u4ece\u7eaf\u6587\u672c\u6587\u4ef6\nkeyfile\n\u4e2d\u5bfc\u5165\u672a\u52a0\u5bc6\u7684\u79c1\u94a5\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u5e10\u6237\u5e76\u6253\u5370\u8be5\u5730\u5740\u3002\n\u5047\u8bbe\u5bc6\u94a5\u6587\u4ef6\u5305\u542b\u4e00\u4e2a\u672a\u52a0\u5bc6\u7684\u79c1\u94a5\uff0c\u4f5c\u4e3a\u7f16\u7801\u4e3a\u5341\u516d\u8fdb\u5236\u7684\u89c4\u8303EC\u539f\u59cb\u5b57\u8282\u3002\n\u8be5\u5e10\u6237\u4ee5\u52a0\u5bc6\u683c\u5f0f\u4fdd\u5b58\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u60a8\u8f93\u5165\u5bc6\u7801\u3002\n\u60a8\u5fc5\u987b\u8bb0\u4f4f\u6b64\u5bc6\u7801\u624d\u80fd\u5728\u672a\u6765\u89e3\u9501\u60a8\u7684\u5e10\u6237\u3002\n\n\n\u4e00\u4e2a\u6570\u636e\u76ee\u5f55\u88ab\u6307\u5b9a\u7684\u4f8b\u5b50\u3002\n\u5982\u679c\u4e0d\u4f7f\u7528\n--datadir\n\u6807\u5fd7\uff0c\u5219\u65b0\u5e10\u6237\u5c06\u88ab\u521b\u5efa\u5728\u9ed8\u8ba4\u6570\u636e\u76ee\u5f55\u4e2d\uff0c\u5373\uff0c\u5bc6\u94a5\u6587\u4ef6\u5c06\u88ab\u653e\u7f6e\u5728\u6570\u636e\u76ee\u5f55\u7684\nkeystore\n\u5b50\u76ee\u5f55\u4e2d\u3002\n\n\n$ geth --datadir /someOtherEthDataDir  account import ./key.prv\nThe new account will be encrypted with a passphrase.\nPlease enter a passphrase now.\nPassphrase:\nRepeat Passphrase:\nAddress: \n{\n7f444580bfef4b9bc7e14eb7fb2a029336b07c9d\n}\n\n\n\n\n\n\u5bf9\u4e8e\u975e\u4ea4\u4e92\u5f0f\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528\n--password\n\u6807\u5fd7\u6307\u5b9a\u5bc6\u7801\uff1a\n\n\ngeth --password \npasswordfile\n account import \nkeyfile\n\n\n\n\n\n\n\nNote\n\n\n\u7531\u4e8e\u60a8\u53ef\u4ee5\u76f4\u63a5\u5c06\u60a8\u7684\u52a0\u5bc6\u8d26\u6237\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u4ee5\u592a\u574a\u5b9e\u4f8b\uff0c\u6240\u4ee5\u5f53\u60a8\u5728\u8282\u70b9\u4e4b\u95f4\u8f6c\u8d26\u65f6\uff0c\u4e0d\u9700\u8981\u6b64\u5bfc\u5165/\u5bfc\u51fa\u673a\u5236\u3002\n\n\n\n\n\n\nWarning\n\n\n\u5f53\u60a8\u5c06\u5bc6\u94a5\u590d\u5236\u5230\u73b0\u6709\u8282\u70b9\u7684\nkeystore\n\u4e2d\u65f6\uff0c\u60a8\u4e60\u60ef\u4f7f\u7528\u7684\u5e10\u6237\u987a\u5e8f\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u56e0\u6b64\uff0c\u8bf7\u786e\u4fdd\u60a8\u4e0d\u8981\u4f9d\u8d56\u5e10\u6237\u987a\u5e8f\u6216\u4ed4\u7ec6\u68c0\u67e5\u5e76\u66f4\u65b0\u811a\u672c\u4e2d\u4f7f\u7528\u7684\u7d22\u5f15\u3002", 
            "title": "\u8d26\u53f7"
        }, 
        {
            "location": "/account-management/#_1", 
            "text": "", 
            "title": "\u5e10\u6237\u7ba1\u7406"
        }, 
        {
            "location": "/account-management/#_2", 
            "text": "\u5e10\u6237\u5728\u4ee5\u592a\u574a\u4e2d\u626e\u6f14\u7740\u91cd\u8981\u89d2\u8272\u3002\n\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u8d26\u6237\uff1a \u5916\u90e8\u62e5\u6709\u8d26\u6237 (EOAs)\u548c \u5408\u7ea6\u8d26\u6237 \u3002\n\u8fd9\u91cc\u6211\u4eec\u5c06\u91cd\u70b9\u653e\u5728\u5916\u90e8\u62e5\u6709\u7684\u8d26\u6237\u4e0a\uff0c\u7b80\u79f0\u4e3a \u8d26\u6237 \u3002\n\u5408\u7ea6\u8d26\u6237\u5c06\u88ab\u79f0\u4e3a \u5408\u7ea6 \uff0c\u5e76[\u5728\u5408\u7ea6 \u5408\u7ea6 \u4e2d\u8be6\u7ec6\u8ba8\u8bba]\u3002\n\u8fd9\u79cd\u901a\u7528\u7684\u8d26\u6237\u6982\u5ff5\u5305\u542b\u4e86\u5916\u90e8\u62e5\u6709\u7684\u8d26\u6237\u548c\u5408\u7ea6\uff0c\u8fd9\u662f\u5408\u7406\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u5b9e\u4f53\u88ab\u79f0\u4e3a \u72b6\u6001\u5bf9\u8c61 \u3002\n\u8fd9\u4e9b\u5b9e\u4f53\u6709\u4e00\u4e2a\u72b6\u6001\uff1a\u8d26\u6237\u6709\u4f59\u989d\uff0c\u5408\u7ea6\u6709\u4f59\u989d\u548c\u5408\u7ea6\u5b58\u50a8\u3002\n\u6240\u6709\u5e10\u6237\u7684\u72b6\u6001\u90fd\u662f\u4ee5\u592a\u574a\u7f51\u7edc\u7684\u72b6\u6001\uff0c\u6bcf\u4e2a\u533a\u5757\u90fd\u4f1a\u66f4\u65b0\uff0c\u7f51\u7edc\u771f\u6b63\u9700\u8981\u54ea\u4e2a\u7f51\u7edc\n\u8d26\u6237\u5bf9\u4e8e\u7528\u6237\u901a\u8fc7\u4ea4\u6613\u4e0e\u4ee5\u592a\u574a\u533a\u5757\u94fe\u8fdb\u884c\u4ea4\u4e92\u81f3\u5173\u91cd\u8981\u3002  \u5982\u679c\u6211\u4eec\u5c06\u4ee5\u592a\u574a\u4ec5\u9650\u4e8e\u5916\u90e8\u62e5\u6709\u7684\u8d26\u6237\uff0c\u5e76\u4e14\u53ea\u5141\u8bb8\u5b83\u4eec\u4e4b\u95f4\u7684\u4ea4\u6613\uff0c\u6211\u4eec\u5c31\u4f1a\u5230\u8fbe\u4e00\u4e2a\u963f\u5c14\u7279\u5e01\u7cfb\u7edf  \u5e10\u6237\u8868\u793a\u5916\u90e8\u4ee3\u7406\u7684\u8eab\u4efd(\u4f8b\u5982\uff0c\u4eba\u7c7b\u89d2\u8272\uff0c\u6316\u6398\u8282\u70b9\u6216\u81ea\u52a8\u4ee3\u7406)\u3002\n\u8d26\u6237\u4f7f\u7528\u516c\u94a5\u52a0\u5bc6\u6765\u7b7e\u7f72\u4ea4\u6613\uff0c\u4ee5\u4fbfEVM\u53ef\u4ee5\u5b89\u5168\u5730\u9a8c\u8bc1\u4ea4\u6613\u53d1\u4ef6\u4eba\u7684\u8eab\u4efd\u3002", 
            "title": "\u5e10\u53f7"
        }, 
        {
            "location": "/account-management/#_3", 
            "text": "\u6bcf\u4e2a\u8d26\u6237\u90fd\u7531\u4e00\u5bf9\u5bc6\u94a5\uff0c\u4e00\u4e2a\u79c1\u94a5\u548c\u4e00\u4e2a\u516c\u94a5\u6765\u5b9a\u4e49\u3002\n\u5e10\u6237\u901a\u8fc7\u5176 \u5730\u5740 \u8fdb\u884c\u7d22\u5f15\uff0c\u8be5\u5730\u5740\u7531\u516c\u94a5\u901a\u8fc7\u53d6\u6700\u540e\u768420\u4e2a\u5b57\u8282\u800c\u5f97\u51fa\u3002\n\u6bcf\u4e2a\u79c1\u94a5/\u5730\u5740\u5bf9\u90fd\u4ee5  keyfile  \u7f16\u7801\u3002\n\u5bc6\u94a5\u6587\u4ef6\u662f\u53ef\u4ee5\u5728\u4efb\u4f55\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u6253\u5f00\u548c\u67e5\u770b\u7684JSON\u6587\u672c\u6587\u4ef6\u3002\n\u5bc6\u94a5\u6587\u4ef6\u7684\u5173\u952e\u7ec4\u6210\u90e8\u5206(\u60a8\u7684\u5e10\u6237\u7684\u79c1\u94a5)\u59cb\u7ec8\u662f\u52a0\u5bc6\u7684\uff0c\u5e76\u4f7f\u7528\u60a8\u7684\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6\n\u5bc6\u94a5\u6587\u4ef6\u4f4d\u4e8e\u60a8\u4ee5\u592a\u574a\u8282\u70b9\u6570\u636e\u76ee\u5f55\u7684 keystore \u5b50\u76ee\u5f55\u4e2d\u3002\n\u786e\u4fdd\u5b9a\u671f\u5907\u4efd\u4f60\u7684\u5bc6\u94a5\u6587\u4ef6\uff01,\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1[\u5907\u4efd\u548c\u8fd8\u539f\u5e10\u6237]\u90e8\u5206\u3002  \u521b\u5efa\u4e00\u4e2a\u5bc6\u94a5\u7b49\u4e8e\u521b\u5efa\u4e00\u4e2a\u5e10\u6237:   \u4f60\u4e0d\u9700\u8981\u544a\u8bc9\u5176\u4ed6\u4eba\u4f60\u6b63\u5728\u505a\u8fd9\u4ef6\u4e8b  \u60a8\u4e0d\u9700\u8981\u4e0e\u533a\u5757\u94fe\u540c\u6b65  \u4f60\u4e0d\u9700\u8981\u8fd0\u884c\u4e00\u4e2a\u5ba2\u6237\u7aef  \u4f60\u751a\u81f3\u4e0d\u9700\u8981\u8fde\u63a5\u5230\u4e92\u8054\u7f51   \u5f53\u7136\u4f60\u7684\u65b0\u8d26\u6237\u4e0d\u4f1a\u5305\u542b\u4efb\u4f55\u4ee5\u592a\u7f51\u3002\n\u5f53\u7136\u4f60\u7684\u65b0\u8d26\u6237\u4e0d\u4f1a\u5305\u542b\u4efb\u4f55\u4ee5\u592a\u7f51\u3002  \u5728\u4ee5\u592a\u574a\u8282\u70b9\u4e4b\u95f4\u4f20\u8f93\u6574\u4e2a\u76ee\u5f55\u6216\u4efb\u4f55\u5355\u72ec\u7684\u5bc6\u94a5\u6587\u4ef6\u662f\u5b89\u5168\u7684\u3002   Warning  \u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u5c06\u5bc6\u94a5\u6587\u4ef6\u4ece\u4e0d\u540c\u8282\u70b9\u6dfb\u52a0\u5230\u8282\u70b9\uff0c\u5e10\u6237\u987a\u5e8f\u53ef\u80fd\u4f1a\u66f4\u6539\u3002\n\u56e0\u6b64\uff0c\u8bf7\u786e\u4fdd\u60a8\u4e0d\u4f9d\u8d56\u6216\u66f4\u6539\u811a\u672c\u6216\u4ee3\u7801\u7247\u6bb5\u4e2d\u7684\u7d22\u5f15\u3002", 
            "title": "\u5bc6\u94a5\u6587\u4ef6"
        }, 
        {
            "location": "/account-management/#_4", 
            "text": "Warning  \u4e3a\u4e86\u4ece\u4e00\u4e2a\u8d26\u6237\u53d1\u9001\u4ea4\u6613\uff0c\u5305\u62ec\u53d1\u9001\u4ee5\u592a\uff0c\u4f60\u5fc5\u987b\u540c\u65f6\u62e5\u6709\u5bc6\u94a5\u6587\u4ef6\u548c\u5bc6\u7801\u3002\n\u8bf7\u52a1\u5fc5\u4fdd\u7559\u5bc6\u94a5\u6587\u4ef6\u7684\u526f\u672c\u5e76\u8bb0\u4f4f\u8be5\u5bc6\u94a5\u6587\u4ef6\u7684\u5bc6\u7801\uff0c\u5e76\u5c3d\u53ef\u80fd\u5b89\u5168\u5730\u5b58\u50a8\u5b83\u4eec\u3002\n\u8fd9\u91cc\u6ca1\u6709\u9003\u751f\u8def\u7ebf;,\u4e22\u5931\u5bc6\u94a5\u6587\u4ef6\u6216\u5fd8\u8bb0\u5bc6\u7801\uff0c\u5e76\u4e14\u6240\u6709\u4ee5\u592a\u7f51\u90fd\u6d88\u5931\u4e86\u3002\n\u6ca1\u6709\u5bc6\u7801\u5c31\u65e0\u6cd5\u8bbf\u95ee\u60a8\u7684\u5e10\u6237\uff0c\u5e76\u4e14\u8fd9\u91cc\u6ca1\u6709 \u5fd8\u8bb0\u6211\u7684\u5bc6\u7801 \u9009\u9879\u3002\n\u522b\u5fd8\u8bb0\u4e86\u3002", 
            "title": "\u521b\u5efa\u5e10\u6237"
        }, 
        {
            "location": "/account-management/#_5", 
            "text": "\u4e00\u65e6\u4f60\u5b89\u88c5\u4e86geth\u5ba2\u6237\u7aef\uff0c\u521b\u5efa\u4e00\u4e2a\u5e10\u6237\u53ea\u662f\u5728\u7ec8\u7aef\u4e2d\u6267\u884c geth account new \u547d\u4ee4\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002  \u8bf7\u6ce8\u610f\uff0c\u60a8\u4e0d\u5fc5\u8fd0\u884cgeth\u5ba2\u6237\u7aef\u6216\u4e0e\u533a\u5757\u94fe\u540c\u6b65\u4ee5\u4f7f\u7528 geth account \u547d\u4ee4\u3002  $ geth account new\n\n  Your new account is locked with a password.Please give a password.Do not forget this password.\n  Passphrase:\n  Repeat Passphrase:\n  Address:  { 168bc315a2ee09042d83d7c5811b533620531f67 }   \u5bf9\u4e8e\u975e\u4ea4\u4e92\u5f0f\u4f7f\u7528\uff0c\u60a8\u9700\u8981\u63d0\u4f9b\u660e\u6587\u5bc6\u7801\u6587\u4ef6\u4f5c\u4e3a --password \u6807\u5fd7\u7684\u53c2\u6570\u3002\n\u8be5\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u7531\u5bc6\u7801\u7684\u539f\u59cb\u5b57\u8282\u7ec4\u6210\uff0c\u540e\u9762\u7d27\u8ddf\u4e00\u4e2a\u6362\u884c\u7b26\u3002  $ geth --password /path/to/password account new   Warning  \u4f7f\u7528 --password \u6807\u5fd7\u4ec5\u7528\u4e8e\u53d7\u4fe1\u4efb\u73af\u5883\u4e2d\u7684\u6d4b\u8bd5\u6216\u81ea\u52a8\u5316\u3002\n\u5c06\u5bc6\u7801\u4fdd\u5b58\u5230\u6587\u4ef6\u6216\u4ee5\u4efb\u4f55\u5176\u4ed6\u65b9\u5f0f\u516c\u5f00\u5b83\u662f\u4e2a\u4e0d\u9519\u7684\u4e3b\u610f\u3002\n\u5982\u679c\u786e\u5b9e\u5728\u5bc6\u7801\u6587\u4ef6\u4e2d\u4f7f\u7528\u4e86\u201c--password\u201d\u6807\u5fd7\uff0c\u8bf7\u786e\u4fdd\u8be5\u6587\u4ef6\u5bf9\u4e8e\u9664\u60a8\u4ee5\u5916\u7684\u4efb\u4f55\u4eba\u90fd\u4e0d\u53ef\u8bfb\u6216\u751a\u81f3\u4e0d\u53ef\u5217\u51fa\u3002\n\u60a8\u53ef\u4ee5\u5728Mac / Linux\u7cfb\u7edf\u4e2d\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5b9e\u73b0\u6b64\u76ee\u7684\uff1a   touch /path/to/password\nchmod  600  /path/to/password\ncat   /path/to/password I  type  my pass  \u8981\u4f7f\u7528 geth account \u547d\u4ee4\u7684 list \u5b50\u547d\u4ee4\u5217\u51fa\u5f53\u524d\u4f4d\u4e8e keystore \u6587\u4ef6\u5939\u4e2d\u7684\u6240\u6709\u5bc6\u94a5\u6587\u4ef6\u5e10\u6237\uff1a  $ geth account list\n\naccount  #0: {a94f5374fce5edbc8e2a8697c15331677e6ebf0b} \naccount  #1: {c385233b188811c9f355d4caec14df86d6248235} \naccount  #2: {7f444580bfef4b9bc7e14eb7fb2a029336b07c9d}   \u5bc6\u94a5\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u683c\u5f0f\u4e3a UTC  -   created_at UTC ISO8601   -   address hex \u3002 \u4e0a\u5e02\u65f6\u7684\u8d26\u6237\u987a\u5e8f\u662f\u5b57\u5178\u5f0f\u7684\uff0c\u4f46\u4f5c\u4e3a\u65f6\u95f4\u6233\u683c\u5f0f\u7684\u7ed3\u679c\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u521b\u5efa\u7684\u987a\u5e8f\u3002", 
            "title": "\u8fd0\u884c\u547d\u4ee4"
        }, 
        {
            "location": "/account-management/#_6", 
            "text": "\u4e3a\u4e86\u4f7f\u7528geth\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5e10\u6237\uff0c\u6211\u4eec\u5fc5\u987b\u9996\u5148\u5728\u63a7\u5236\u53f0\u6a21\u5f0f\u4e0b\u542f\u52a8geth(\u6216\u8005\u4f60\u53ef\u4ee5\u7528 geth attach \u628a\u4e00\u4e2a\u63a7\u5236\u53f0\u9644\u52a0\u5230\u4e00\u4e2a\u5df2\u7ecf\u8fd0\u884c\u7684\u5b9e\u4f8b\u4e0a)\uff1a   geth console  2  file_to_log_output\ninstance: Geth/v1.4.0-unstable/linux/go1.5.1\ncoinbase: coinbase:  [ object Object ] \nat block:  865174   ( Mon,  18  Jan  2016   02 :58:53 GMT ) \ndatadir: /home/USERNAME/.ethereum  \u63a7\u5236\u53f0\u5141\u8bb8\u60a8\u901a\u8fc7\u53d1\u51fa\u547d\u4ee4\u4e0e\u672c\u5730\u8282\u70b9\u8fdb\u884c\u4ea4\u4e92\u3002,\u4f8b\u5982\uff0c\u5c1d\u8bd5\u547d\u4ee4\u5217\u51fa\u60a8\u7684\u5e10\u6237\uff1a    eth . accounts  { \n     code :   - 32000 , \n     message :   no keys in store  }   \u8fd9\u8868\u660e\u4f60\u6ca1\u6709\u5e10\u6237\u3002\u60a8\u4e5f\u53ef\u4ee5\u4ece\u63a7\u5236\u53f0\u521b\u5efa\u4e00\u4e2a\u5e10\u6237\uff1a    personal . newAccount ()  Passphrase :  Repeat   passphrase :  0xb2f69ddf70297958e582a0cc98bce43294f1007d    Note  \u8bf7\u8bb0\u4f4f\u4f7f\u7528\u5f3a\u5927\u4e14\u968f\u673a\u751f\u6210\u7684\u5bc6\u7801\u3002   \u6211\u4eec\u521a\u521a\u521b\u5efa\u4e86\u7b2c\u4e00\u4e2a\u5e10\u6237\u3002\u5982\u679c\u6211\u4eec\u8bd5\u56fe\u518d\u6b21\u5217\u51fa\u6211\u4eec\u7684\u5e10\u6237\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u7684\u65b0\u5e10\u6237\uff1a    eth . accounts  [ 0xb2f69ddf70297958e582a0cc98bce43294f1007d ]", 
            "title": "\u4f7f\u7528\u63a7\u5236\u53f0"
        }, 
        {
            "location": "/account-management/#mist", 
            "text": "\u5bf9\u4e8e\u538c\u6076\u547d\u4ee4\u884c\uff0c\u73b0\u5728\u6709\u4e00\u4e2a\u57fa\u4e8eGUI\u7684\u521b\u5efa\u8d26\u6237\u9009\u9879\uff1a\u201c\u5b98\u65b9\u201dMist\u4ee5\u592a\u574a\u94b1\u5305\u3002\n\u5728\u4ee5\u592a\u574a\u57fa\u91d1\u4f1a\u7684\u8d5e\u52a9\u4e0b\uff0cMist\u4ee5\u592a\u574a\u94b1\u5305\u548c\u5b83\u7684\u6bcd\u4eb2Mist\u9879\u76ee\u6b63\u5728\u5f00\u53d1\uff0c\u56e0\u6b64\u662f\u201c\u5b98\u65b9\u201d\u7684\u5730\u4f4d\u3002\n\u94b1\u5305\u5e94\u7528\u7a0b\u5e8f\u7684\u7248\u672c\u9002\u7528\u4e8eLinux\uff0cMac OS X\u548cWindows\u3002   Warning  Mist\u94b1\u5305\u662fbeta\u8f6f\u4ef6\u3002\u8bf7\u5c0f\u5fc3\u4f7f\u7528\uff0c\u98ce\u9669\u81ea\u8d1f\u3002   \u4f7f\u7528GUI Mist Ethereum\u94b1\u5305\u521b\u5efa\u4e00\u4e2a\u8d26\u6237\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\u60c5\u3002\u5b9e\u9645\u4e0a\uff0c\u60a8\u7684\u7b2c\u4e00\u4e2a\u5e10\u6237\u662f\u5728\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\u671f\u95f4\u521b\u5efa\u7684\u3002   \u4e3a\u5e94\u7528\u7a0b\u5e8f\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684\u94b1\u5305\u5e94\u7528\u7a0b\u5e8f \u3002\u6253\u5f00\u7535\u5b50\u94b1\u5305\u5e94\u7528\u7a0b\u5e8f\u5c06\u5f00\u59cb\u5728\u8ba1\u7b97\u673a\u4e0a\u540c\u6b65\u4ee5\u592a\u574a\u533a\u5757\u94fe\u7684\u5b8c\u6574\u526f\u672c\uff0c\u56e0\u4e3a\u60a8\u5b9e\u9645\u4e0a\u5c06\u8fd0\u884c\u5b8c\u6574\u7684geth\u8282\u70b9\u3002  \u89e3\u538b\u4e0b\u8f7d\u7684\u6587\u4ef6\u5939\u5e76\u8fd0\u884cEthereum-Wallet\u53ef\u6267\u884c\u6587\u4ef6\u3002   {.align-center width=\"436px\" height=\"352px\"}   \u6253\u5f00\u7535\u5b50\u94b1\u5305\u5e94\u7528\u7a0b\u5e8f\u5c06\u5f00\u59cb\u5728\u8ba1\u7b97\u673a\u4e0a\u540c\u6b65\u4ee5\u592a\u574a\u533a\u5757\u94fe\u7684\u5b8c\u6574\u526f\u672c\uff0c\u56e0\u4e3a\u60a8\u5b9e\u9645\u4e0a\u5c06\u8fd0\u884c\u5b8c\u6574\u7684geth\u8282\u70b9\u3002  \u5f53\u60a8\u7b2c\u4e00\u6b21\u542f\u52a8Mist Ethereum\u94b1\u5305\u65f6\uff0c\u60a8\u4f1a\u770b\u5230\u60a8\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u521b\u5efa\u7684\u5e10\u6237\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u5c06\u88ab\u547d\u540d\u4e3aMAIN ACCOUNT(ETHERBASE)\u3002   {.align-center width=\"512px\" height=\"469px\"}   \u521b\u5efa\u989d\u5916\u7684\u5e10\u6237\u5f88\u5bb9\u6613;,\u53ea\u9700\u70b9\u51fb\u5e94\u7528\u7a0b\u5e8f\u4e3b\u5c4f\u5e55\u4e0a\u7684\u6dfb\u52a0\u5e10\u6237\uff0c\u7136\u540e\u8f93\u5165\u6240\u9700\u7684\u5bc6\u7801\u5373\u53ef\u3002    Note  Mist\u94b1\u5305\u4ecd\u5728\u79ef\u6781\u5f00\u53d1\u4e2d\uff0c\u56e0\u6b64\u4e0a\u8ff0\u6b65\u9aa4\u7684\u7ec6\u8282\u53ef\u80fd\u968f\u5347\u7ea7\u800c\u6539\u53d8\u3002", 
            "title": "\u4f7f\u7528Mist"
        }, 
        {
            "location": "/account-management/#_7", 
            "text": "Mist\u4ee5\u592a\u574a\u94b1\u5305\u6709\u4e00\u4e2a\u9009\u9879\uff0c\u4ee5\u786e\u4fdd\u60a8\u7684\u94b1\u5305\u5e73\u8861\u4e0emultisig\u94b1\u5305\u3002\n\u4f7f\u7528multisig\u94b1\u5305\u7684\u597d\u5904\u662f\uff0c\u5b83\u9700\u8981\u4ece\u591a\u4e2a\u5e10\u6237\u6388\u6743\u624d\u80fd\u4ece\u4f59\u989d\u4e2d\u63d0\u53d6\u66f4\u591a\u91d1\u989d\u3002\n\u5728\u521b\u5efa\u591a\u91cd\u94b1\u5305\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u521b\u5efa\u591a\u4e2a\u5e10\u6237\u3002  \u5728Mist\u4e2d\u521b\u5efa\u8d26\u6237\u6587\u4ef6\u975e\u5e38\u7b80\u5355\u3002\n\u5728\u201c\u5e10\u6237\u201d\u90e8\u5206\uff0c\u70b9\u51fb\u201c\u6dfb\u52a0\u5e10\u6237\u201d\u3002\n\u9009\u62e9\u4e00\u4e2a\u5f3a\u5927\u4e14\u6613\u4e8e\u8bb0\u5fc6\u7684\u5bc6\u7801(\u8bb0\u4f4f\u6ca1\u6709\u5bc6\u7801\u6062\u590d\u9009\u9879)\uff0c\u786e\u8ba4\u5b83\uff0c\u7136\u540e\u521b\u5efa\u60a8\u7684\u5e10\u6237\u3002\n\u521b\u5efa\u81f3\u5c112\u4e2a\u5e10\u6237\u3002\n\u5982\u679c\u60a8\u613f\u610f\uff0c\u53ef\u4ee5\u5728\u8fd0\u884cMist\u7684\u5355\u72ec\u8ba1\u7b97\u673a\u4e0a\u521b\u5efa\u8f85\u52a9\u5e10\u6237(\u7406\u8bba\u4e0a\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u60a8\u7684\u591a\u91cd\u8eab\u4efd\u66f4\u5b89\u5168)\u3002\n\u521b\u5efa\u591a\u91cd\u94b1\u5305\u65f6\uff0c\u60a8\u53ea\u9700\u8981\u8f85\u52a9\u5e10\u6237\u7684\u516c\u94a5(\u60a8\u7684\u5b58\u6b3e\u5730\u5740)(\u590d\u5236/\u7c98\u8d34\u5b83\u4eec\uff0c\u5343\u4e07\u4e0d\u8981\u624b\u52a8\u8f93\u5165)\u3002\n\u60a8\u7684\u4e3b\u5e10\u6237\u5c06\u9700\u8981\u521b\u5efamultisig\u94b1\u5305\u5408\u7ea6\uff0c\u56e0\u6b64\u5b83\u5fc5\u987b\u4f4d\u4e8e\u60a8\u521b\u5efamultisig\u94b1\u5305\u7684\u8ba1\u7b97\u673a\u4e0a\u3002  \u73b0\u5728\u60a8\u5df2\u7ecf\u8bbe\u7f6e\u4e86\u5e10\u6237\uff0c\u8bf7\u4fdd\u6301\u5b89\u5168\u5e76\u5907\u4efd(\u5982\u679c\u60a8\u7684\u8ba1\u7b97\u673a\u5d29\u6e83\uff0c\u5982\u679c\u60a8\u6ca1\u6709\u5907\u4efd\uff0c\u5219\u4f1a\u5931\u53bb\u5e73\u8861)\u3002\n\u70b9\u51fb\u9876\u90e8\u83dc\u5355\u4e2d\u7684\u201c\u5907\u4efd\u201d\u3002\n\u9009\u62e9'keystore'\u6587\u4ef6\u5939\uff0c\u53cd\u9762\u70b9\u51fb\u5b83/\u9009\u62e9'copy'(\u4e0d\u8981\u9009\u62e9'cut'\uff0c\u8fd9\u5c06\u662f\u975e\u5e38\u7cdf\u7cd5\u7684)\u3002\n\u5bfc\u822a\u81f3\u60a8\u7684\u684c\u9762\uff0c\u5728\u7a7a\u767d\u533a\u57df\u4e2d\u5355\u51fb\u9f20\u6807\u53f3\u952e\u5e76\u9009\u62e9\u201c\u7c98\u8d34\u201d\u3002\n\u60a8\u53ef\u80fd\u5e0c\u671b\u5c06\u6b64'keystore'\u6587\u4ef6\u5939\u7684\u65b0\u526f\u672c\u91cd\u547d\u540d\u4e3a'Ethereum -keystore-backup-year-month-day'\u7b49\uff0c\u4ee5\u4fbf\u60a8\u7a0d\u540e\u5feb\u901f\u8bc6\u522b\u5b83\u3002\n\u6b64\u65f6\uff0c\u60a8\u53ef\u4ee5\u5c06\u6587\u4ef6\u5939\u5185\u5bb9\u6dfb\u52a0\u5230zip/rar\u6587\u4ef6\u4e2d(\u5982\u679c\u5728\u7ebf\u5907\u4efd\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u53e6\u4e00\u4e2a\u5f3a\u5927\u4f46\u6613\u4e8e\u8bb0\u5fc6\u7684\u5bc6\u7801\u5bf9\u5bc6\u7801\u8fdb\u884c\u5bc6\u7801\u4fdd\u62a4)\uff0c\u5c06\u5176\u590d\u5236\u5230USB\u9a71\u52a8\u5668\uff0c\u5c06\u5176\u523b\u5f55\u5230,CD/DVD\uff0c\u6216\u5c06\u5176\u4e0a\u4f20\u5230\u5728\u7ebf\u5b58\u50a8(Dropbox/Google Drive/\u7b49)\u3002  \u60a8\u73b0\u5728\u5e94\u8be5\u5411\u60a8\u7684\u4e3b\u8d26\u6237\u6dfb\u52a0\u5927\u7ea6\u4e0d\u4f4e\u4e8e0.02 ETH(\u60a8\u5c06\u5f00\u59cb\u521b\u5efa\u8d26\u6237\u7684\u8d26\u6237)\n\u521b\u5efa\u591a\u91cd\u94b1\u5305\u5408\u7ea6\u65f6\uff0c\u8fd9\u662f\u4ea4\u6613\u8d39\u7528\u6240\u5fc5\u9700\u7684\u3002\n\u53e6\u5916\u8fd8\u9700\u89811\u4e2aETH(\u6216\u66f4\u591a)\uff0c\u56e0\u4e3aMist\u76ee\u524d\u8981\u6c42\u8fd9\u6837\u505a\u624d\u80fd\u4fdd\u8bc1\u94b1\u5305\u5408\u7ea6\u4ea4\u6613\u6709\u8db3\u591f\u7684'\u71c3\u6599'\u6765\u6b63\u786e\u6267\u884c...\u6240\u4ee5\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\uff0c\u603b\u8ba1\u4e0d\u4f4e\u4e8e1.02 ETH\u3002  \u5728\u521b\u5efa\u65f6\uff0c\u60a8\u5c06\u8f93\u5165\u60a8\u9644\u52a0\u5230\u6b64multisig\u94b1\u5305\u7684\u6240\u6709\u5e10\u6237\u7684\u5b8c\u6574\u5730\u5740\u3002\n\u5728\u8fdb\u5165Mist\u4e2d\u7684\u6bcf\u4e2a\u5e10\u6237\u7684\u8be6\u7ec6\u4fe1\u606f\u9875\u9762\uff0c\u5e76\u4ece\u53f3\u4fa7\u6309\u94ae\u5217\u4e2d\u9009\u62e9\u201c\u590d\u5236\u5730\u5740\u201d\u540e\uff0c\u6211\u5efa\u8bae\u5c06\u6bcf\u4e2a\u5730\u5740\u590d\u5236/\u7c98\u8d34\u5230\u7eaf\u6587\u672c\u7f16\u8f91\u5668(\u8bb0\u4e8b\u672c/kedit/\u7b49)\u3002\n\u5343\u4e07\u4e0d\u8981\u624b\u52a8\u8f93\u5165\u5730\u5740\uff0c\u5426\u5219\u5192\u7740\u62fc\u5199\u9519\u8bef\u7684\u98ce\u9669\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u5931\u53bb\u5c06\u4f59\u989d\u53d1\u9001\u5230\u9519\u8bef\u5730\u5740\u7684\u4ea4\u6613\u3002  \u6211\u4eec\u73b0\u5728\u51c6\u5907\u521b\u5efamultisig\u94b1\u5305\u3002\n\u5728\u201c\u7535\u5b50\u94b1\u5305\u5408\u7ea6\u201d\u4e0b\uff0c\u9009\u62e9\u201c\u6dfb\u52a0\u94b1\u5305\u5408\u7ea6\u201d\u3002\n\u7ed9\u5b83\u4e00\u4e2a\u540d\u5b57\uff0c\u9009\u62e9\u4e3b\u5e10\u6237\u6240\u6709\u8005\uff0c\u7136\u540e\u9009\u62e9'\u591a\u91cd\u7b7e\u540d\u94b1\u5305\u5408\u7ea6'\u3002\n\u60a8\u4f1a\u770b\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u5185\u5bb9\uff1a  \u8fd9\u662f\u7531X\u4e2a\u6240\u6709\u8005\u63a7\u5236\u7684\u8054\u5408\u8d26\u6237\u3002\n\u60a8\u6bcf\u5929\u6700\u591a\u53ef\u4ee5\u53d1\u9001X\u4ee5\u592a\u3002\n\u4efb\u4f55\u8d85\u8fc7\u8be5\u9650\u989d\u7684\u4ea4\u6613\u90fd\u9700\u8981X\u4e1a\u4e3b\u7684\u786e\u8ba4\u3002  \u65e0\u8bba\u60a8\u5e0c\u671b\u6bcf\u65e5\u63d0\u6b3e\u9650\u989d(\u53ea\u9700\u8981\u4e00\u4e2a\u8d26\u6237\u63d0\u53d6\u8be5\u91d1\u989d)\uff0c\u4ee5\u53ca\u9700\u8981\u591a\u5c11\u6240\u6709\u8005(\u8d26\u6237)\u6765\u6838\u51c6\u4efb\u4f55\u63d0\u6b3e\u91d1\u989d\uff0c\u8bf7\u8bbe\u7f6e\u60a8\u9644\u52a0\u5230\u6b64multisig\u94b1\u5305\u7684\u4efb\u4f55\u6570\u91cf\u7684\u6240\u6709\u8005(\u8d26\u6237),\u8d85\u8fc7\u6bcf\u65e5\u9650\u989d\u3002  \u73b0\u5728\u6dfb\u52a0\u60a8\u4e4b\u524d\u590d\u5236/\u7c98\u8d34\u5230\u60a8\u7684\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u7684\u5e10\u6237\u7684\u5730\u5740\uff0c\u786e\u8ba4\u60a8\u7684\u6240\u6709\u8bbe\u7f6e\u90fd\u662f\u6b63\u786e\u7684\uff0c\u7136\u540e\u70b9\u51fb\u5e95\u90e8\u7684\u201c\u521b\u5efa\u201d\u3002\n\u7136\u540e\u60a8\u9700\u8981\u8f93\u5165\u5bc6\u7801\u624d\u80fd\u53d1\u9001\u4ea4\u6613\u3002\n\u5728\u201c\u7535\u5b50\u94b1\u5305\u5408\u7ea6\u201d\u90e8\u5206\uff0c\u5b83\u5e94\u8be5\u663e\u793a\u60a8\u7684\u65b0\u94b1\u5305\uff0c\u5e76\u8bf4'\u521b\u5efa'\u3002  \u5f53\u94b1\u5305\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u60a8\u5e94\u8be5\u5728\u5c4f\u5e55\u4e0a\u770b\u5230\u60a8\u7684\u5408\u7ea6\u5730\u5740\u3002\n\u9009\u62e9\u6574\u4e2a\u5730\u5740\uff0c\u5c06\u5176\u590d\u5236/\u7c98\u8d34\u5230\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u7684\u65b0\u6587\u672c\u6587\u4ef6\u4e2d\uff0c\u7136\u540e\u5c06\u6587\u672c\u6587\u4ef6\u4fdd\u5b58\u5230\u684c\u9762  \u73b0\u5728\uff0c\u60a8\u53ea\u9700\u5907\u4efd\u201cEthereum-Wallet-Address.txt\u201d\u6587\u4ef6\uff0c\u5c31\u50cf\u5907\u4efd\u60a8\u7684\u5e10\u6237\u6587\u4ef6\u4e00\u6837\uff0c\u7136\u540e\u60a8  \u5982\u679c\u60a8\u8981\u4ece\u5907\u4efd\u4e2d\u6062\u590d\uff0c\u53ea\u9700\u5c06'Ethereum -keystore-backup'\u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\u590d\u5236\u5230\u672c\u6f14\u7ec3\u7684\u7b2c\u4e00\u90e8\u5206\u4e2d\u63d0\u5230\u7684'keystore'\u6587\u4ef6\u5939\u4e2d\u5373\u53ef\u3002\n\u4ec5\u4f9b\u53c2\u8003\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u521b\u5efa'keystore'\u6587\u4ef6\u5939(\u5982\u679c\u5b83\u662f\u4ee5\u524d\u4ece\u672a\u5b89\u88c5\u8fc7\u7684\u673a\u5668\u4e0a\u7684\u5168\u65b0\u5b89\u88c5\u7684Mist)(\u7b2c\u4e00\u6b21\u521b\u5efa\u5e10\u6237\u65f6\u662f\u521b\u5efa\u6b64\u6587\u4ef6\u5939\u65f6)\u3002\n\u81f3\u4e8e\u6062\u590d\u591a\u91cd\u94b1\u5305\uff0c\u800c\u4e0d\u662f\u50cf\u6211\u4eec\u4e4b\u524d\u5728\u521b\u5efa\u65f6\u90a3\u6837\u9009\u62e9\u201c\u591a\u7b7e\u540d\u94b1\u5305\u5408\u7ea6\u201d\uff0c\u6211\u4eec\u53ea\u9700\u9009\u62e9\u201c\u5bfc\u5165\u94b1\u5305\u201d\u3002  \u6545\u969c\u6392\u9664\uff1a   Mist\u4e0d\u4f1a\u540c\u6b65\u3002\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\u4e4b\u4e00\u5c31\u662f\u5c06PC\u786c\u4ef6\u65f6\u949f\u4e0eNTP\u670d\u52a1\u5668\u540c\u6b65\uff0c\u56e0\u6b64\u65f6\u95f4\u5b8c\u5168\u6b63\u786e\uff0c\u7136\u540e\u91cd\u65b0\u542f\u52a8\u3002  Mist\u540c\u6b65\u540e\u5f00\u59cb\uff0c\u4f46\u662f\u662f\u4e00\u4e2a\u7a7a\u767d\u7684\u767d\u8272\u5c4f\u5e55\u3002\u4f60\u6709\u53ef\u80fd\u5728\u57fa\u4e8eLinux\u7684\u64cd\u4f5c\u7cfb\u7edf(Ubuntu\uff0cLinux Mint\u7b49)\u4e0a\u8fd0\u884cxorg\u89c6\u9891\u9a71\u52a8\u7a0b\u5e8f\u3002\u5c1d\u8bd5\u5b89\u88c5\u5236\u9020\u5546\u7684\u89c6\u9891\u9a71\u52a8\u7a0b\u5e8f\u3002  \u9519\u8bef\u7684\u5bc6\u7801\u901a\u77e5\u3002\u8fd9\u5728\u76ee\u524d\u7684Mist\u7248\u672c\u4e0a\u4f3c\u4e4e\u662f\u9519\u8bef\u7684\u901a\u77e5\u3002\u91cd\u65b0\u542f\u52a8Mist\uff0c\u95ee\u9898\u5e94\u8be5\u6d88\u5931(\u5982\u679c\u4f60\u786e\u5b9e\u8f93\u5165\u4e86\u6b63\u786e\u7684\u5bc6\u7801)\u3002", 
            "title": "\u591a\u91cd\u7b7e\u540d\u94b1\u5305"
        }, 
        {
            "location": "/account-management/#eth", 
            "text": "\u4e0e\u4f7f\u7528geth\u53ef\u7528\u7684\u5bc6\u94a5\u7ba1\u7406\u76f8\u5173\u7684\u6bcf\u4e2a\u9009\u9879\u90fd\u53ef\u4ee5\u5728eth\u4e2d\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u4f7f\u7528\u3002  \u4ee5\u4e0b\u662f\u4e0e\u5e10\u6237\u76f8\u5173\u7684\u9009\u9879\uff1a    eth   account   list    // \u5217\u51fa\u94b1\u5305\u4e2d\u7684\u6240\u6709\u53ef\u7528\u5bc6\u94a5\u3002    eth   account   new     // \u5217\u51fa\u94b1\u5305\u4e2d\u7684\u6240\u6709\u53ef\u7528\u5bc6\u94a5\u3002    eth   account   update   [ uuid | address   ,   ...]    // \u5bf9\u7ed9\u5b9a\u7684\u5bc6\u94a5\u8fdb\u884c\u89e3\u5bc6\u548c\u91cd\u65b0\u52a0\u5bc6\u3002    eth   account   import   [ uuid | file | secret - hex ]   // \u4ece\u7ed9\u5b9a\u6765\u6e90\u5bfc\u5165\u5bc6\u94a5\u5e76\u5c06\u5176\u653e\u7f6e\u5728\u94b1\u5305\u4e2d\u3002   \u4ee5\u4e0b\u662f\u94b1\u5305\u76f8\u5173\u9009\u9879\uff1a    eth   wallet   import   file   //Import a presale wallet.    Note  '\u8d26\u6237\u5bfc\u5165'\u9009\u9879\u53ea\u80fd\u7528\u4e8e\u5bfc\u5165\u901a\u7528\u5bc6\u94a5\u6587\u4ef6\u3002\u201c\u94b1\u5305\u5bfc\u5165\u201d\u9009\u9879\u53ea\u80fd\u7528\u4e8e\u5bfc\u5165\u9884\u552e\u94b1\u5305\u3002   \u201c\u94b1\u5305\u5bfc\u5165\u201d\u9009\u9879\u53ea\u80fd\u7528\u4e8e\u5bfc\u5165\u9884\u552e\u94b1\u5305\u3002    web3 . personal  { \n   listAccounts :   [], \n   getListAccounts :   function ( callback ), \n   lockAccount :   function (), \n   newAccount :   function (), \n   unlockAccount :   function ()  }", 
            "title": "\u4f7f\u7528Eth"
        }, 
        {
            "location": "/account-management/#ethkey", 
            "text": "\u4e0d\u5efa\u8bae\u4f7f\u7528!  Ethkey\u662fC ++\u5b9e\u73b0\u7684CLI\u5de5\u5177\uff0c\u5141\u8bb8\u60a8\u4e0eEthereum\u94b1\u5305\u8fdb\u884c\u4ea4\u4e92\u3002\n\u6709\u4e86\u5b83\uff0c\u60a8\u53ef\u4ee5\u5217\u51fa\uff0c\u68c0\u67e5\uff0c\u521b\u5efa\uff0c\u5220\u9664\u548c\u4fee\u6539\u5bc6\u94a5\u5e76\u68c0\u67e5\uff0c\u521b\u5efa\u548c\u7b7e\u7f72\u4ea4\u6613\u3002  \u6211\u4eec\u5047\u8bbe\u60a8\u8fd8\u6ca1\u6709\u5728Aleth\u7cfb\u5217\u5ba2\u6237\u7aef\u8fd0\u884c\u8bf8\u5982eth\u6216\u5176\u4ed6\u4efb\u4f55\u5ba2\u6237\u7aef\u3002\n\u5982\u679c\u4f60\u6709\uff0c\u4f60\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e00\u8282\u3002\n\u8981\u521b\u5efa\u94b1\u5305\uff0c\u8bf7\u4f7f\u7528 createwallet \u547d\u4ee4\u8fd0\u884c ethkey \uff1a   ethkey createwallet  \u8bf7\u8f93\u5165MASTER\u5bc6\u7801\u4ee5\u4fdd\u62a4\u60a8\u7684\u5bc6\u7801\u5b58\u50a8\u533a(\u4f7f\u5176\u5f3a\u5927\uff01)\uff1a\u7cfb\u7edf\u4f1a\u8981\u6c42\u60a8\u63d0\u4f9b\u4e3b\u5bc6\u7801\u3002\n\u8fd9\u53ef\u4ee5\u4fdd\u62a4\u60a8\u7684\u9690\u79c1\uff0c\u5e76\u4f5c\u4e3a\u4efb\u4f55\u5bc6\u94a5\u7684\u9ed8\u8ba4\u5bc6\u7801\u3002\n\u60a8\u9700\u8981\u518d\u6b21\u8f93\u5165\u76f8\u540c\u7684\u6587\u5b57\u6765\u786e\u8ba4\u3002   Note  \u4f7f\u7528\u5f3a\u5927\u7684\u968f\u673a\u751f\u6210\u7684\u5bc6\u7801\u3002   \u53ea\u9700\u4f7f\u7528list\u547d\u4ee4\u5373\u53ef\u5217\u51fa\u94b1\u5305\u4e2d\u7684\u5bc6\u94a5\uff1a   ethkey list\n\nNo keys found.  \u6211\u4eec\u8fd8\u6ca1\u6709\u521b\u5efa\u4efb\u4f55\u5bc6\u94a5\uff0c\u5b83\u544a\u8bc9\u6211\u4eec\uff01,\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u3002  \u8981\u521b\u5efa\u5bc6\u94a5\uff0c\u6211\u4eec\u4f7f\u7528 new \u547d\u4ee4\u3002\n\u8981\u4f7f\u7528\u5b83\uff0c\u6211\u4eec\u5fc5\u987b\u4f20\u9012\u4e00\u4e2a\u540d\u5b57 - \u8fd9\u662f\u6211\u4eec\u5728\u94b1\u5305\u4e2d\u7ed9\u8fd9\u4e2a\u8d26\u6237\u7684\u540d\u5b57\u3002\u6211\u4eec\u79f0\u4e4b\u4e3a\u6d4b\u8bd5\uff1a   ethkey new  test   \u8f93\u5165\u4e00\u4e2a\u5bc6\u7801\u6765\u4fdd\u62a4\u8fd9\u4e2a\u5e10\u6237(\u6216\u8005\u6ca1\u6709\u4f7f\u7528\u4e3b\u5bc6\u7801)\u3002\n\u5b83\u4f1a\u63d0\u793a\u4f60\u8f93\u5165\u4e00\u4e2a\u5bc6\u7801\u6765\u4fdd\u62a4\u8fd9\u4e2a\u5bc6\u94a5\u3002\n\u5982\u679c\u60a8\u53ea\u6309\u56de\u8f66\uff0c\u5b83\u5c06\u4f7f\u7528\u9ed8\u8ba4\u7684\u4e3b\u5bc6\u7801\u3002\n\u901a\u5e38\u8fd9\u610f\u5473\u7740\u5f53\u60a8\u60f3\u4f7f\u7528\u8be5\u5e10\u6237\u65f6(\u56e0\u4e3a\u5b83\u8bb0\u4f4f\u4e3b\u5bc6\u7801)\uff0c\u60a8\u4e0d\u9700\u8981\u8f93\u5165\u5bc6\u94a5\u7684\u5bc6\u7801\u3002\n\u4e00\u822c\u6765\u8bf4\uff0c\u60a8\u5e94\u8be5\u5c1d\u8bd5\u4e3a\u6bcf\u4e2a\u5bc6\u94a5\u4f7f\u7528\u4e0d\u540c\u7684\u5bc6\u7801\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u9632\u6b62\u4e00\u4e2a\u53d7\u635f\u7684\u5bc6\u7801\u8bbf\u95ee\u5176\u4ed6\u5e10\u6237\u3002\n\u4f46\u662f\uff0c\u51fa\u4e8e\u65b9\u4fbf\uff0c\u60a8\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u4f4e\u5b89\u5168\u6027\u5e10\u6237\u4f7f\u7528\u76f8\u540c\u7684\u5bc6\u7801\u77ed\u8bed\u3002  \u5728\u8fd9\u91cc\uff0c\u8ba9\u6211\u4eec\u7ed9\u5b83123\u7684\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u60f3\u8c61\u529b\u5bc6\u7801\u3002\n(\u6c38\u8fdc\u4e0d\u8981\u4f7f\u7528\u8fd9\u6837\u7684\u7b80\u5355\u5bc6\u7801\u6765\u8fdb\u884c\u5176\u4ed6\u4efb\u4f55\u4e8b\u60c5\u800c\u4e0d\u662f\u77ed\u6682\u7684\u6d4b\u8bd5\u8d26\u6237)\u3002\n\u4e00\u65e6\u4f60\u8f93\u5165\u5bc6\u7801\uff0c\u5b83\u4f1a\u8981\u6c42\u4f60\u518d\u6b21\u8f93\u5165\u786e\u8ba4\u3002\n\u7b2c\u4e8c\u6b21\u8f93\u5165123\u3002\n\u56e0\u4e3a\u60a8\u7ed9\u4e86\u5b83\u81ea\u5df1\u7684\u5bc6\u7801\u77ed\u8bed\uff0c\u5b83\u8fd8\u4f1a\u8981\u6c42\u60a8\u63d0\u4f9b\u6b64\u5bc6\u7801\u7684\u63d0\u793a\uff0c\u53ea\u8981\u5b83\u8981\u6c42\u60a8\u8f93\u5165\u8be5\u5bc6\u7801\u5c31\u4f1a\u663e\u793a\u7ed9\u60a8\u3002\n\u8be5\u63d0\u793a\u5b58\u50a8\u5728\u94b1\u5305\u4e2d\uff0c\u5e76\u4e14\u672c\u8eab\u53d7\u4e3b\u5bc6\u7801\u7684\u4fdd\u62a4\u3002\n\u8f93\u5165321\u5012\u9000\u7684\u771f\u6b63\u53ef\u6015\u7684\u6697\u793a\u3002   ethkey new  test \n\nEnter a passphrase with which to secure this account  ( or nothing to use the master passphrase ) :\nPlease confirm the passphrase by entering it again:\nEnter a hint to  help  you remember this passphrase:  321  backwards\nCreated key 055dde03-47ff-dded-8950-0fe39b1fa101\n  Name:  test \n  Password hint:  321  backwards\n  ICAP: XE472EVKU3CGMJF2YQ0J9RO1Y90BC0LDFZ\n  Raw hex: 0092e965928626f8880629cec353d3fd7ca5974f  \u6240\u6709\u6b63\u5e38(\u53c8\u540d\u76f4\u63a5)ICAP\u5730\u5740\u90fd\u4ee5XE\u5f00\u5934\uff0c\u6240\u4ee5\u60a8\u5e94\u8be5\u80fd\u591f\u8f7b\u677e\u8bc6\u522b\u5b83\u4eec\u3002\n\u8fd8\u8981\u6ce8\u610f\uff0c\u8be5\u952e\u5728\u521b\u5efa\u952e\u540e\u6709\u53e6\u4e00\u4e2a\u6807\u8bc6\u7b26\u3002\n\u8fd9\u5c31\u662f\u6240\u8c13\u7684UUID\u3002\n\u8fd9\u662f\u4e0e\u5e10\u6237\u672c\u8eab\u5b8c\u5168\u65e0\u5173\u7684\u5bc6\u94a5\u7684\u552f\u4e00\u6807\u8bc6\u7b26\u3002\n\u77e5\u9053\u5b83\u6ca1\u6709\u5e2e\u52a9\u653b\u51fb\u8005\u53d1\u73b0\u4f60\u5728\u7f51\u7edc\u4e0a\u7684\u4eba\u3002\n\u5b83\u4e5f\u6070\u597d\u662f\u5bc6\u94a5\u7684\u6587\u4ef6\u540d\uff0c\u60a8\u53ef\u4ee5\u5728\\\u301c/ .web3 / keys(Mac\u6216Linux)\u6216\\ $ HOME / AppData / Web3 / keys(Windows)\u4e2d\u627e\u5230\u8be5\u6587\u4ef6\u540d\u3002\n\u73b0\u5728\u8ba9\u6211\u4eec\u901a\u8fc7\u5217\u51fa\u94b1\u5305\u4e2d\u7684\u5bc6\u94a5\u6765\u786e\u4fdd\u5b83\u6b63\u5e38\u5de5\u4f5c\uff1a   ethkey list\n055dde03-47ff-dded-8950-0fe39b1fa101 0092e965\u2026 XE472EVKU3CGMJF2YQ0J9RO1Y90BC0LDFZ   test   \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684\u5bc6\u94a5\u5b58\u50a8\u5728\u6587\u4ef6055dde\u4e2d\uff0c\u5e76\u4e14\u5177\u6709\u4eceXE472EVK\u5f00\u59cb\u7684ICAP\u5730\u5740....\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684\u5bc6\u94a5\u5b58\u50a8\u5728\u6587\u4ef6055dde\u4e2d\uff0c\u5e76\u4e14\u5177\u6709\u4eceXE472EVK\u5f00\u59cb\u7684ICAP\u5730\u5740....\n\u4e0d\u662f\u7279\u522b\u5bb9\u6613\u8bb0\u4f4f\u7684\u4e1c\u897f\uff0c\u800c\u662f\u6709\u7528\u7684\uff0c\u5b83\u4e5f\u6709\u5b83\u7684\u4e13\u6709\u540d\u79f0\uff0c\u6d4b\u8bd5\u3002", 
            "title": "\u4f7f\u7528EthKey"
        }, 
        {
            "location": "/account-management/#_8", 
            "text": "", 
            "title": "\u5bfc\u5165\u9884\u552e\u94b1\u5305"
        }, 
        {
            "location": "/account-management/#mist_1", 
            "text": "\u4f7f\u7528GUI Mist Ethereum\u94b1\u5305\u5bfc\u5165\u9884\u552e\u94b1\u5305\u975e\u5e38\u7b80\u5355\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u5728\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7cfb\u7edf\u4f1a\u8be2\u95ee\u60a8\u662f\u5426\u8981\u5bfc\u5165\u9884\u552e\u94b1\u5305\u3002   Warning  Mist\u94b1\u5305\u662fbeta\u8f6f\u4ef6\u3002\u8c28\u9632\u548c\u4f7f\u7528\u5b83\u9700\u8981\u60a8\u81ea\u62c5\u98ce\u9669\u3002   \u5728\u521b\u5efa\u5e10\u6237\uff1a\u4f7f\u7528Mist\u4ee5\u592a\u574a\u94b1\u5305 \u4f7f\u7528Mist - \u4ee5\u592a\u574a\u94b1\u5305 \u4e00\u8282\u4e2d\u7ed9\u51fa\u4e86\u5b89\u88c5Mist\u4ee5\u592a\u574a\u94b1\u5305\u7684\u8bf4\u660e\u3002  \u53ea\u9700\u5c06\u60a8\u7684 .json \u9884\u552e\u94b1\u5305\u6587\u4ef6\u62d6\u653e\u5230\u6307\u5b9a\u533a\u57df\u5e76\u8f93\u5165\u60a8\u7684\u5bc6\u7801\u5373\u53ef\u5bfc\u5165\u60a8\u7684\u9884\u552e\u5e10\u6237\u3002  {.align-center width=\"436px\" height=\"352px\"}  \u5982\u679c\u60a8\u5728\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\u65f6\u9009\u62e9\u4e0d\u5bfc\u5165\u9884\u552e\u94b1\u5305\uff0c\u53ef\u4ee5\u968f\u65f6\u901a\u8fc7\u9009\u62e9\u5e94\u7528\u7a0b\u5e8f\u83dc\u5355\u680f\u4e2d\u7684\u201c\u5e10\u6237\u201d\u83dc\u5355\uff0c\u7136\u540e\u9009\u62e9\u201c\u5bfc\u5165\u9884\u552e\u5e10\u6237\u201d\u6765\u5bfc\u5165\u5b83\u3002   Note  Mist\u94b1\u5305\u4ecd\u5728\u79ef\u6781\u5f00\u53d1\u4e2d\uff0c\u56e0\u6b64\u4e0a\u8ff0\u6b65\u9aa4\u7684\u7ec6\u8282\u53ef\u80fd\u968f\u5347\u7ea7\u800c\u6539\u53d8\u3002", 
            "title": "\u4f7f\u7528Mist\u4ee5\u592a\u574a\u94b1\u5305"
        }, 
        {
            "location": "/account-management/#geth", 
            "text": "\u5982\u679c\u60a8\u6709geth\u7684\u72ec\u7acb\u5b89\u88c5\uff0c\u5219\u901a\u8fc7\u5728\u7ec8\u7aef\u4e2d\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u5bfc\u5165\u9884\u552e\u94b1\u5305\uff1a  geth wallet import /path/to/my/presale-wallet.json  \u7cfb\u7edf\u4f1a\u63d0\u793a\u60a8\u8f93\u5165\u5bc6\u7801\u3002", 
            "title": "\u4f7f\u7528geth"
        }, 
        {
            "location": "/account-management/#_9", 
            "text": "\u60a8\u53ef\u4ee5\u5c06\u5bc6\u94a5\u6587\u4ef6\u5347\u7ea7\u5230\u6700\u65b0\u7684\u5bc6\u94a5\u6587\u4ef6\u683c\u5f0f\u548c/\u6216\u5347\u7ea7\u5bc6\u94a5\u6587\u4ef6\u5bc6\u7801\u3002", 
            "title": "\u66f4\u65b0\u5e10\u6237"
        }, 
        {
            "location": "/account-management/#geth_1", 
            "text": "\u60a8\u53ef\u4ee5\u4f7f\u7528\u5e26\u6709\u5e10\u6237\u5730\u5740\u6216\u7d22\u5f15\u4f5c\u4e3a\u53c2\u6570\u7684 update \u5b50\u547d\u4ee4\u66f4\u65b0\u547d\u4ee4\u884c\u4e0a\u7684\u73b0\u6709\u5e10\u6237\u3002\n\u8bf7\u8bb0\u4f4f\uff0c\u5e10\u6237\u7d22\u5f15\u53cd\u6620\u4e86\u521b\u5efa\u7684\u987a\u5e8f(\u5305\u542b\u521b\u5efa\u65f6\u95f4\u7684\u5bc6\u94a5\u6587\u4ef6\u540d\u7684\u5b57\u5178\u987a\u5e8f)\u3002  geth account update b0047c606f3af7392e073ed13253f8f4710b08b6  \u8981\u4e48  geth account update  2   \u4f8b\u5982\uff1a  $ geth account update a94f5374fce5edbc8e2a8697c15331677e6ebf0b\n\nUnlocking account a94f5374fce5edbc8e2a8697c15331677e6ebf0b  |  Attempt  1 /3\nPassphrase:\n0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b\naccount  a94f5374fce5edbc8e2a8697c15331677e6ebf0b  unlocked.\nPlease give a new password.\nDo not forget this password.\nPassphrase:\nRepeat Passphrase:\n0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b  \u8be5\u5e10\u6237\u4ee5\u52a0\u5bc6\u683c\u5f0f\u4fdd\u5b58\u5728\u6700\u65b0\u7248\u672c\u4e2d\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u60a8\u8f93\u5165\u5bc6\u7801\u4ee5\u89e3\u9501\u5e10\u6237\uff0c\u800c\u53e6\u4e00\u4e2a\u5e10\u6237\u5219\u4fdd\u5b58\u66f4\u65b0\u7684\u6587\u4ef6\u3002\n\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u547d\u4ee4\u5c06\u4e0d\u63a8\u8350\u683c\u5f0f\u7684\u5e10\u6237\u8fc1\u79fb\u5230\u6700\u65b0\u7684\u683c\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u66f4\u6539\u5e10\u6237\u7684\u5bc6\u7801\u3002  \u5bf9\u4e8e\u975e\u4ea4\u4e92\u5f0f\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528 --password \u6807\u5fd7\u6307\u5b9a\u5bc6\u7801\uff1a  geth --password  passwordfile  account update a94f5374fce5edbc8e2a8697c15331677e6ebf0bs  \u7531\u4e8e\u53ea\u80fd\u8f93\u5165\u4e00\u4e2a\u5bc6\u7801\uff0c\u6240\u4ee5\u53ea\u80fd\u8fdb\u884c\u683c\u5f0f\u66f4\u65b0\uff0c\u53ea\u80fd\u4ee5\u4ea4\u4e92\u65b9\u5f0f\u66f4\u6539\u5bc6\u7801\u3002   Note  \u5e10\u6237\u66f4\u65b0\u5177\u6709\u53ef\u80fd\u4f1a\u6539\u53d8\u5e10\u6237\u987a\u5e8f\u7684\u526f\u4f5c\u7528\u3002\n\u6210\u529f\u66f4\u65b0\u540e\uff0c\u8be5\u76f8\u540c\u5bc6\u94a5\u7684\u6240\u6709\u4ee5\u524d\u7684\u683c\u5f0f/\u7248\u672c\u5c06\u88ab\u5220\u9664\uff01", 
            "title": "\u4f7f\u7528 geth"
        }, 
        {
            "location": "/account-management/#_10", 
            "text": "", 
            "title": "\u5907\u4efd\u548c\u6062\u590d\u5e10\u6237"
        }, 
        {
            "location": "/account-management/#_11", 
            "text": "\u60a8\u5fc5\u987b\u62e5\u6709\u5e10\u6237\u7684\u5bc6\u94a5\u6587\u4ef6\u624d\u80fd\u53d1\u9001\u8be5\u5e10\u6237\u7684\u4efb\u4f55\u4ea4\u6613\u3002\n\u5bc6\u94a5\u6587\u4ef6\u4f4d\u4e8e\u60a8\u4ee5\u592a\u574a\u8282\u70b9\u6570\u636e\u76ee\u5f55\u7684\u5bc6\u94a5\u5e93\u5b50\u76ee\u5f55\u4e2d\u3002\n\u9ed8\u8ba4\u6570\u636e\u76ee\u5f55\u4f4d\u7f6e\u662f\u5e73\u53f0\u7279\u5b9a\u7684\uff1a   Windows:  %appdata%\\Ethereum\\keystore  Linux:  ~/.ethereum/keystore  Mac:  ~/Library/Ethereum/keystore   \u8981\u5907\u4efd\u60a8\u7684\u5bc6\u94a5\u6587\u4ef6(\u5e10\u6237)\uff0c\u8bf7\u590d\u5236 keystore \u5b50\u76ee\u5f55\u4e2d\u7684\u4e2a\u522b\u5bc6\u94a5\u6587\u4ef6\u6216\u590d\u5236\u6574\u4e2a keystore \u6587\u4ef6\u5939\u3002  \u8981\u6062\u590d\u60a8\u7684\u5bc6\u94a5\u6587\u4ef6(\u5e10\u6237)\uff0c\u8bf7\u5c06\u5bc6\u94a5\u6587\u4ef6\u590d\u5236\u56de\u539f\u6765\u4f4d\u4e8e\u7684\u201ckeystore\u201d\u5b50\u76ee\u5f55\u4e2d\u3002", 
            "title": "\u624b\u52a8\u5907\u4efd/\u6062\u590d"
        }, 
        {
            "location": "/account-management/#_12", 
            "text": "geth \u652f\u6301\u5bfc\u5165\u672a\u52a0\u5bc6\u7684\u79c1\u94a5  geth account import /path/to/ keyfile   \u8be5\u547d\u4ee4\u4ece\u7eaf\u6587\u672c\u6587\u4ef6 keyfile \u4e2d\u5bfc\u5165\u672a\u52a0\u5bc6\u7684\u79c1\u94a5\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u5e10\u6237\u5e76\u6253\u5370\u8be5\u5730\u5740\u3002\n\u5047\u8bbe\u5bc6\u94a5\u6587\u4ef6\u5305\u542b\u4e00\u4e2a\u672a\u52a0\u5bc6\u7684\u79c1\u94a5\uff0c\u4f5c\u4e3a\u7f16\u7801\u4e3a\u5341\u516d\u8fdb\u5236\u7684\u89c4\u8303EC\u539f\u59cb\u5b57\u8282\u3002\n\u8be5\u5e10\u6237\u4ee5\u52a0\u5bc6\u683c\u5f0f\u4fdd\u5b58\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u60a8\u8f93\u5165\u5bc6\u7801\u3002\n\u60a8\u5fc5\u987b\u8bb0\u4f4f\u6b64\u5bc6\u7801\u624d\u80fd\u5728\u672a\u6765\u89e3\u9501\u60a8\u7684\u5e10\u6237\u3002  \u4e00\u4e2a\u6570\u636e\u76ee\u5f55\u88ab\u6307\u5b9a\u7684\u4f8b\u5b50\u3002\n\u5982\u679c\u4e0d\u4f7f\u7528 --datadir \u6807\u5fd7\uff0c\u5219\u65b0\u5e10\u6237\u5c06\u88ab\u521b\u5efa\u5728\u9ed8\u8ba4\u6570\u636e\u76ee\u5f55\u4e2d\uff0c\u5373\uff0c\u5bc6\u94a5\u6587\u4ef6\u5c06\u88ab\u653e\u7f6e\u5728\u6570\u636e\u76ee\u5f55\u7684 keystore \u5b50\u76ee\u5f55\u4e2d\u3002  $ geth --datadir /someOtherEthDataDir  account import ./key.prv\nThe new account will be encrypted with a passphrase.\nPlease enter a passphrase now.\nPassphrase:\nRepeat Passphrase:\nAddress:  { 7f444580bfef4b9bc7e14eb7fb2a029336b07c9d }   \u5bf9\u4e8e\u975e\u4ea4\u4e92\u5f0f\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528 --password \u6807\u5fd7\u6307\u5b9a\u5bc6\u7801\uff1a  geth --password  passwordfile  account import  keyfile    Note  \u7531\u4e8e\u60a8\u53ef\u4ee5\u76f4\u63a5\u5c06\u60a8\u7684\u52a0\u5bc6\u8d26\u6237\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u4ee5\u592a\u574a\u5b9e\u4f8b\uff0c\u6240\u4ee5\u5f53\u60a8\u5728\u8282\u70b9\u4e4b\u95f4\u8f6c\u8d26\u65f6\uff0c\u4e0d\u9700\u8981\u6b64\u5bfc\u5165/\u5bfc\u51fa\u673a\u5236\u3002    Warning  \u5f53\u60a8\u5c06\u5bc6\u94a5\u590d\u5236\u5230\u73b0\u6709\u8282\u70b9\u7684 keystore \u4e2d\u65f6\uff0c\u60a8\u4e60\u60ef\u4f7f\u7528\u7684\u5e10\u6237\u987a\u5e8f\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u56e0\u6b64\uff0c\u8bf7\u786e\u4fdd\u60a8\u4e0d\u8981\u4f9d\u8d56\u5e10\u6237\u987a\u5e8f\u6216\u4ed4\u7ec6\u68c0\u67e5\u5e76\u66f4\u65b0\u811a\u672c\u4e2d\u4f7f\u7528\u7684\u7d22\u5f15\u3002", 
            "title": "\u5bfc\u5165\u672a\u52a0\u5bc6\u7684\u79c1\u94a5"
        }, 
        {
            "location": "/ether/", 
            "text": "\u4ee5\u592a\u5e01\n\n\n\u4ec0\u4e48\u662f\u4ee5\u592a\u5e01\uff1f\n\n\n\u4ee5\u592a\u5e01\u662f\u4ee5\u592a\u574a\u5185\u4f7f\u7528\u7684\u8d27\u5e01\u7684\u540d\u79f0\u3002 \u5b83\u7528\u4e8e\u652f\u4ed8EVM\u5185\u7684\u8ba1\u7b97. \u8fd9\u662f\u901a\u8fc7\u8d2d\u4e70\u71c3\u6599\u4e2d\u7684\u4ee5\u592a\u5e01\u71c3\u6599\u95f4\u63a5\u5b8c\u6210\u7684.\n\n\n\u8ba1\u4ef7\n\n\n\u4ee5\u592a\u574a\u6709\u4e00\u4e2a\u516c\u5236\u7684\u9762\u989d\u7528\u4f5c\u4ee5\u592a\u5355\u4f4d\u3002\n\u6bcf\u79cd\u9762\u989d\u90fd\u6709\u81ea\u5df1\u72ec\u7279\u7684\u540d\u5b57\uff08\u4e00\u4e9b\u627f\u8f7d\u7740\u8ba1\u7b97\u673a\u79d1\u5b66\u548c\u9690\u79d8\u7ecf\u6d4e\u5b66\u6f14\u53d8\u4e2d\u7684\u91cd\u8981\u4eba\u7269\u7684\u59d3\u6c0f\uff09\u3002\n\u4ee5\u592a\u5e01\u7684\u6700\u5c0f\u9762\u989daka\n\u57fa\u672c\u5355\u4f4d\n\u53eb\u9b4f\u3002\n\u4e0b\u9762\u662fWei\u5217\u4e3e\u7684\u540d\u79f0\u53ca\u5176\u4ef7\u503c\u3002\n\u9075\u5faa\u4e00\u4e2a\u5171\u540c\u7684\uff08\u867d\u7136\u6709\u70b9\u6a21\u68f1\u4e24\u53ef\uff09\u6a21\u5f0f, \u4ee5\u592a\u5e01\u4e5f\u6307\u5b9a\u4e00\u4e2a\u8d27\u5e01\u5355\u4f4d (1e18\u6216\u8005\u4e00\u4e2a\u594e\u56e0).\n\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e2a\u8d27\u5e01\u5e76\u4e0d\u50cf\u8bb8\u591a\u4eba\u4ee5\u4e3a\u7684\u90a3\u6837\u88ab\u79f0\u4e3a\u4ee5\u592a\u574a\uff0c\u4ee5\u592a\u574a\u4e5f\u4e0d\u662f\u4e00\u4e2a\u5355\u4f4d\u3002\n\n\n\n\n\n\n\n\n\u5355\u5143\n\n\nwei \u503c\n\n\nwei\n\n\n\n\n\n\n\n\n\n\nwei\n\n\n1 wei\n\n\n1\n\n\n\n\n\n\nKwei (babbage)\n\n\n1e3 wei\n\n\n1,000\n\n\n\n\n\n\nMwei (lovelace)\n\n\n1e6 wei\n\n\n1,000,000\n\n\n\n\n\n\nGwei (shannon)\n\n\n1e9 wei\n\n\n1,000,000,000\n\n\n\n\n\n\nmicroether (szabo)\n\n\n1e12 wei\n\n\n1,000,000,000,000\n\n\n\n\n\n\nmilliether (finney)\n\n\n1e15 wei\n\n\n1,000,000,000,000,000\n\n\n\n\n\n\nether\n\n\n1e18 wei\n\n\n1,000,000,000,000,000,000\n\n\n\n\n\n\n\n\n\u5173\u4e8e\u4ee5\u592a\u5e01\u5355\u4f4d\u7684\u4eba\u540d\u89e3\u91ca\uff0c\u8bf7\u67e5\u770b\n\u77e5\u4e4e\u9875\u9762\n\n\n\u4ee5\u592a\u5e01\u4f9b\u5e94\n\n\n\n\n\u4ee5\u592a\u574a\u7684\u53d1\u884c\u6a21\u5f0f\n\n\n\u6f84\u6e05\u4ee5\u592a\u5e01\u4f9b\u5e94\u548c\u71c3\u6599\u6210\u672c\n\n\n\u5173\u4e8e\u4ee5\u592a\u574a\u7a00\u7f3a\u7684\u95ee\u9898\u53ca\u5176\u901a\u8d27\u81a8\u80c0\u6216\u901a\u8d27\u7d27\u7f29\u7684\u6027\u8d28\n\n\n\u6709\u6ca1\u6709\u50cfbtc\u4e00\u6837\u7684\u5e3d\u5b50\uff0c\u6709\u591a\u5c11\u4ee5\u592a\u5e01\u53ef\u4ee5\u88ab\u5f00\u91c7\uff1f\n\n\n\n\n\u83b7\u53d6\u4ee5\u592a\u5e01\n\n\n\u8bf7\u770b\u5230\n\u8fd9\u4e2a\u9875\u9762\n.\n\n\n\u53d1\u9001\u4ee5\u592a\u5e01\n\n\n\u4ee5\u592a\u574a\u94b1\u5305\n\u652f\u6301\u901a\u8fc7\u56fe\u5f62\u754c\u9762\u53d1\u9001\u5230\u4ee5\u592a\u7f51\u3002\n\n\n\u4ee5\u592a\u5e01\u4e5f\u53ef\u4ee5\u4f7f\u7528\ngeth\u63a7\u5236\u53f0\n\u8fdb\u884c\u4ea4\u6613.\n\n\n::: console\n\n\n var \nsender\n \n=\n eth.accounts\n[\n0\n]\n;\n\n\n var \nreceiver\n \n=\n eth.accounts\n[\n1\n]\n;\n\n\n var \namount\n \n=\n web3.toWei\n(\n0\n.01, \nether\n)\n\n\n eth.sendTransaction\n({\nfrom:sender, to:receiver, value: amount\n})\n\n\n\n\n\n\n\u6709\u5173\u4ee5\u592a\u7f51\u8f6c\u8d26\u4ea4\u6613\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\n\u5e10\u6237\u7c7b\u578b\u71c3\u6599\u4ea4\u6613\n\u3002\n\n\n\u4ee5\u592a\u574a\u5728\u52a0\u5bc6\u8d27\u5e01\u9886\u57df\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u56e0\u4e3a\u4ee5\u592a\u5e01\u5177\u6709\u4f5c\u4e3a\u52a0\u5bc6\u71c3\u6599\u7684\u6548\u7528\u4ef7\u503c\uff0c\u901a\u5e38\u88ab\u79f0\u4e3a\u201c\u71c3\u6599\u201d\u3002\n\u9664\u4ea4\u6613\u8d39\u5916\uff0c\u71c3\u6599\u662f\u6bcf\u4e2a\u7f51\u7edc\u8bf7\u6c42\u7684\u6838\u5fc3\u90e8\u5206\uff0c\u5e76\u8981\u6c42\u53d1\u4ef6\u4eba\u652f\u4ed8\u6240\u6d88\u8017\u7684\u8ba1\u7b97\u8d44\u6e90\u3002\n\u71c3\u6599\u6210\u672c\u662f\u6839\u636e\u8bf7\u6c42\u7684\u6570\u91cf\u548c\u590d\u6742\u7a0b\u5ea6\u5e76\u4e58\u4ee5\u5f53\u524d\u7684\u71c3\u6599\u4ef7\u683c\u6765\u52a8\u6001\u8ba1\u7b97\u7684\u3002\n\u5176\u4f5c\u4e3a\u52a0\u5bc6\u71c3\u6599\u7684\u4ef7\u503c\uff0c\u589e\u52a0\u4e86\u4ee5\u592a\u5e01\u548c\u4ee5\u592a\u574a\u6574\u4f53\u7684\u7a33\u5b9a\u6027\u548c\u957f\u671f\u9700\u6c42\u3002\n\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\n\u5e10\u6237\u7c7b\u578b\u71c3\u6599\u548c\u4ea4\u6613\n\u3002\n\n\n\u71c3\u6599\u548c\u4ee5\u592a\u5e01\n\n\n\n\n\u6709\u4eba\u80fd\u89e3\u91ca\u4e00\u4e0b\u4ee5\u592a\u574a\u71c3\u6599\u7684\u6982\u5ff5\u5417\uff1f\n\n\n\u6709\u4eba\u53ef\u4ee5\u89e3\u91ca\u4e00\u4e0b\u71c3\u6599\u4ef7\u683c\u7684\u6982\u5ff5\u5417\uff1f\n\n\n\u4ee5\u592a\u5e01\u53ef\u4ee5\u7528\u4f5c\u8d27\u5e01\u5417\uff1fELI5\u4ee5\u592a\u5e01\uff0c\u6c14\u4f53\u548c\u786c\u5e01\u4f9b\u5e94\u7ed9\u6211\u3002\n\n\n\n\n\u71c3\u6599\u5e94\u8be5\u662f\u7f51\u7edc\u8d44\u6e90/\u5229\u7528\u7684\u4e0d\u53d8\u6210\u672c\u3002,\u60a8\u5e0c\u671b\u53d1\u9001\u4ea4\u6613\u7684\u5b9e\u9645\u6210\u672c\u603b\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u60a8\u4e0d\u80fd\u771f\u6b63\u671f\u671b\u71c3\u6599\u53d1\u884c\uff0c\u8d27\u5e01\u4e00\u822c\u662f\u4e0d\u7a33\u5b9a\u7684\u3002\n\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53d1\u884c\u4ef7\u503c\u5e94\u8be5\u6709\u6240\u4e0d\u540c\u7684\u4ee5\u592a\uff0c\u800c\u4e14\u8981\u4ee5\u4ee5\u592a\u8ba1\u7b97\u71c3\u6599\u4ef7\u683c\u3002 \u5982\u679c\u4ee5\u592a\u5e01\u4ef7\u683c\u4e0a\u6da8\uff0c\u4ee5\u4ee5\u592a\u5e01\u8ba1\u7684\u71c3\u6599\u4ef7\u683c\u5e94\u8be5\u4e0b\u8c03\uff0c\u4ee5\u4fdd\u6301\u71c3\u6599\u7684\u5b9e\u9645\u6210\u672c\u76f8\u540c\u3002\n\n\n\u71c3\u6599\u6709\u591a\u4e2a\u76f8\u5173\u672f\u8bed: \u71c3\u6599\u4ef7\u683c\uff0c\u71c3\u6599\u6210\u672c\uff0c\u71c3\u6599\u4ef7\u683c\u548c\u7164\u6c14\u8d39\u3002 \u71c3\u6599\u80cc\u540e\u7684\u539f\u7406\u662f\u5bf9\u4e8e\u4ee5\u592a\u574a\u7f51\u7edc\u7684\u4ea4\u6613\u6216\u8ba1\u7b97\u6210\u672c\u6709\u591a\u5c11\u7a33\u5b9a\u7684\u4ef7\u503c\u3002\n\n\n\n\n\u71c3\u6599\u6210\u672c\u662f\u71c3\u6599\u8ba1\u7b97\u6210\u672c\u7684\u4e00\u4e2a\u9759\u6001\u503c, \u5176\u610f\u56fe\u662f\u71c3\u6599\u7684\u771f\u6b63\u4ef7\u503c\u4ece\u4e0d\u6539\u53d8, \u6240\u4ee5\u8fd9\u4e2a\u6210\u672c\u5e94\u8be5\u59cb\u7ec8\u4fdd\u6301\u7a33\u5b9a.\n\n\n\u71c3\u6599\u4ef7\u683c\u662f\u591a\u5c11\u71c3\u6599\u6210\u672c\u5728\u53e6\u4e00\u4e2a\u8d27\u5e01\u6216\u50cf\u4ee5\u592a\u5e01\u7684\u8c61\u5f81\u3002 \u4e3a\u4e86\u7a33\u5b9a\u71c3\u6599\u7684\u4ef7\u503c\uff0c \u71c3\u6599\u4ef7\u683c\u662f\u4e00\u4e2a\u6d6e\u52a8\u4ef7\u503c\uff0c\u5982\u679c\u4ee3\u5e01\u6216\u8d27\u5e01\u7684\u6210\u672c\u6ce2\u52a8, \u71c3\u6599\u4ef7\u683c\u53d8\u5316\u4fdd\u6301\u76f8\u540c\u7684\u5b9e\u9645\u4ef7\u503c. \u71c3\u6599\u4ef7\u683c\u662f\u7531\u7528\u6237\u613f\u610f\u82b1\u8d39\u7684\u5747\u8861\u4ef7\u683c\u51b3\u5b9a\u7684, \u4ee5\u53ca\u591a\u5c11\u5904\u7406\u8282\u70b9\u613f\u610f\u63a5\u53d7.\n\n\n\u71c3\u6599\u9650\u5236\u662f\u6bcf\u5757\u53ef\u4ee5\u4f7f\u7528\u7684\u6700\u5927\u71c3\u6599\u91cf, \u5b83\u88ab\u8ba4\u4e3a\u662f\u6700\u5927\u7684\u8ba1\u7b97\u91cf, \u4ea4\u6613\u91cf, \u6216\u5757\u7684\u5927\u5c0f, \u77ff\u5de5\u53ef\u4ee5\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u6162\u6162\u6539\u53d8\u8fd9\u4e2a\u503c.\n\n\n\u71c3\u6599\u8d39\u5b9e\u9645\u4e0a\u662f\u8fd0\u884c\u7279\u5b9a\u4ea4\u6613\u6216\u8ba1\u5212\uff08\u79f0\u4e3a\u5408\u7ea6\uff09\u6240\u9700\u652f\u4ed8\u7684\u71c3\u6599\u91cf. \u5757\u7684\u71c3\u6599\u8d39\u7528\u53ef\u4ee5\u7528\u6765\u6697\u793a\u5757\u7684\u8ba1\u7b97\u8d1f\u8377\uff0c\u4ea4\u6613\u91cf\u6216\u5927\u5c0f\u3002 \u71c3\u6599\u8d39\u7528\u652f\u4ed8\u7ed9\u77ff\u5de5\uff08\u6216PoS\u4fdd\u7a0e\u627f\u5305\u5546\uff09\u3002", 
            "title": "\u4ee5\u592a\u5e01"
        }, 
        {
            "location": "/ether/#_1", 
            "text": "", 
            "title": "\u4ee5\u592a\u5e01"
        }, 
        {
            "location": "/ether/#_2", 
            "text": "\u4ee5\u592a\u5e01\u662f\u4ee5\u592a\u574a\u5185\u4f7f\u7528\u7684\u8d27\u5e01\u7684\u540d\u79f0\u3002 \u5b83\u7528\u4e8e\u652f\u4ed8EVM\u5185\u7684\u8ba1\u7b97. \u8fd9\u662f\u901a\u8fc7\u8d2d\u4e70\u71c3\u6599\u4e2d\u7684\u4ee5\u592a\u5e01\u71c3\u6599\u95f4\u63a5\u5b8c\u6210\u7684.", 
            "title": "\u4ec0\u4e48\u662f\u4ee5\u592a\u5e01\uff1f"
        }, 
        {
            "location": "/ether/#_3", 
            "text": "\u4ee5\u592a\u574a\u6709\u4e00\u4e2a\u516c\u5236\u7684\u9762\u989d\u7528\u4f5c\u4ee5\u592a\u5355\u4f4d\u3002\n\u6bcf\u79cd\u9762\u989d\u90fd\u6709\u81ea\u5df1\u72ec\u7279\u7684\u540d\u5b57\uff08\u4e00\u4e9b\u627f\u8f7d\u7740\u8ba1\u7b97\u673a\u79d1\u5b66\u548c\u9690\u79d8\u7ecf\u6d4e\u5b66\u6f14\u53d8\u4e2d\u7684\u91cd\u8981\u4eba\u7269\u7684\u59d3\u6c0f\uff09\u3002\n\u4ee5\u592a\u5e01\u7684\u6700\u5c0f\u9762\u989daka \u57fa\u672c\u5355\u4f4d \u53eb\u9b4f\u3002\n\u4e0b\u9762\u662fWei\u5217\u4e3e\u7684\u540d\u79f0\u53ca\u5176\u4ef7\u503c\u3002\n\u9075\u5faa\u4e00\u4e2a\u5171\u540c\u7684\uff08\u867d\u7136\u6709\u70b9\u6a21\u68f1\u4e24\u53ef\uff09\u6a21\u5f0f, \u4ee5\u592a\u5e01\u4e5f\u6307\u5b9a\u4e00\u4e2a\u8d27\u5e01\u5355\u4f4d (1e18\u6216\u8005\u4e00\u4e2a\u594e\u56e0).\n\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e2a\u8d27\u5e01\u5e76\u4e0d\u50cf\u8bb8\u591a\u4eba\u4ee5\u4e3a\u7684\u90a3\u6837\u88ab\u79f0\u4e3a\u4ee5\u592a\u574a\uff0c\u4ee5\u592a\u574a\u4e5f\u4e0d\u662f\u4e00\u4e2a\u5355\u4f4d\u3002     \u5355\u5143  wei \u503c  wei      wei  1 wei  1    Kwei (babbage)  1e3 wei  1,000    Mwei (lovelace)  1e6 wei  1,000,000    Gwei (shannon)  1e9 wei  1,000,000,000    microether (szabo)  1e12 wei  1,000,000,000,000    milliether (finney)  1e15 wei  1,000,000,000,000,000    ether  1e18 wei  1,000,000,000,000,000,000     \u5173\u4e8e\u4ee5\u592a\u5e01\u5355\u4f4d\u7684\u4eba\u540d\u89e3\u91ca\uff0c\u8bf7\u67e5\u770b \u77e5\u4e4e\u9875\u9762", 
            "title": "\u8ba1\u4ef7"
        }, 
        {
            "location": "/ether/#_4", 
            "text": "\u4ee5\u592a\u574a\u7684\u53d1\u884c\u6a21\u5f0f  \u6f84\u6e05\u4ee5\u592a\u5e01\u4f9b\u5e94\u548c\u71c3\u6599\u6210\u672c  \u5173\u4e8e\u4ee5\u592a\u574a\u7a00\u7f3a\u7684\u95ee\u9898\u53ca\u5176\u901a\u8d27\u81a8\u80c0\u6216\u901a\u8d27\u7d27\u7f29\u7684\u6027\u8d28  \u6709\u6ca1\u6709\u50cfbtc\u4e00\u6837\u7684\u5e3d\u5b50\uff0c\u6709\u591a\u5c11\u4ee5\u592a\u5e01\u53ef\u4ee5\u88ab\u5f00\u91c7\uff1f", 
            "title": "\u4ee5\u592a\u5e01\u4f9b\u5e94"
        }, 
        {
            "location": "/ether/#_5", 
            "text": "\u8bf7\u770b\u5230 \u8fd9\u4e2a\u9875\u9762 .", 
            "title": "\u83b7\u53d6\u4ee5\u592a\u5e01"
        }, 
        {
            "location": "/ether/#_6", 
            "text": "\u4ee5\u592a\u574a\u94b1\u5305 \u652f\u6301\u901a\u8fc7\u56fe\u5f62\u754c\u9762\u53d1\u9001\u5230\u4ee5\u592a\u7f51\u3002  \u4ee5\u592a\u5e01\u4e5f\u53ef\u4ee5\u4f7f\u7528 geth\u63a7\u5236\u53f0 \u8fdb\u884c\u4ea4\u6613.  ::: console   var  sender   =  eth.accounts [ 0 ] ;   var  receiver   =  eth.accounts [ 1 ] ;   var  amount   =  web3.toWei ( 0 .01,  ether )   eth.sendTransaction ({ from:sender, to:receiver, value: amount })   \u6709\u5173\u4ee5\u592a\u7f51\u8f6c\u8d26\u4ea4\u6613\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u5e10\u6237\u7c7b\u578b\u71c3\u6599\u4ea4\u6613 \u3002  \u4ee5\u592a\u574a\u5728\u52a0\u5bc6\u8d27\u5e01\u9886\u57df\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u56e0\u4e3a\u4ee5\u592a\u5e01\u5177\u6709\u4f5c\u4e3a\u52a0\u5bc6\u71c3\u6599\u7684\u6548\u7528\u4ef7\u503c\uff0c\u901a\u5e38\u88ab\u79f0\u4e3a\u201c\u71c3\u6599\u201d\u3002\n\u9664\u4ea4\u6613\u8d39\u5916\uff0c\u71c3\u6599\u662f\u6bcf\u4e2a\u7f51\u7edc\u8bf7\u6c42\u7684\u6838\u5fc3\u90e8\u5206\uff0c\u5e76\u8981\u6c42\u53d1\u4ef6\u4eba\u652f\u4ed8\u6240\u6d88\u8017\u7684\u8ba1\u7b97\u8d44\u6e90\u3002\n\u71c3\u6599\u6210\u672c\u662f\u6839\u636e\u8bf7\u6c42\u7684\u6570\u91cf\u548c\u590d\u6742\u7a0b\u5ea6\u5e76\u4e58\u4ee5\u5f53\u524d\u7684\u71c3\u6599\u4ef7\u683c\u6765\u52a8\u6001\u8ba1\u7b97\u7684\u3002\n\u5176\u4f5c\u4e3a\u52a0\u5bc6\u71c3\u6599\u7684\u4ef7\u503c\uff0c\u589e\u52a0\u4e86\u4ee5\u592a\u5e01\u548c\u4ee5\u592a\u574a\u6574\u4f53\u7684\u7a33\u5b9a\u6027\u548c\u957f\u671f\u9700\u6c42\u3002\n\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u5e10\u6237\u7c7b\u578b\u71c3\u6599\u548c\u4ea4\u6613 \u3002", 
            "title": "\u53d1\u9001\u4ee5\u592a\u5e01"
        }, 
        {
            "location": "/ether/#_7", 
            "text": "\u6709\u4eba\u80fd\u89e3\u91ca\u4e00\u4e0b\u4ee5\u592a\u574a\u71c3\u6599\u7684\u6982\u5ff5\u5417\uff1f  \u6709\u4eba\u53ef\u4ee5\u89e3\u91ca\u4e00\u4e0b\u71c3\u6599\u4ef7\u683c\u7684\u6982\u5ff5\u5417\uff1f  \u4ee5\u592a\u5e01\u53ef\u4ee5\u7528\u4f5c\u8d27\u5e01\u5417\uff1fELI5\u4ee5\u592a\u5e01\uff0c\u6c14\u4f53\u548c\u786c\u5e01\u4f9b\u5e94\u7ed9\u6211\u3002   \u71c3\u6599\u5e94\u8be5\u662f\u7f51\u7edc\u8d44\u6e90/\u5229\u7528\u7684\u4e0d\u53d8\u6210\u672c\u3002,\u60a8\u5e0c\u671b\u53d1\u9001\u4ea4\u6613\u7684\u5b9e\u9645\u6210\u672c\u603b\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u60a8\u4e0d\u80fd\u771f\u6b63\u671f\u671b\u71c3\u6599\u53d1\u884c\uff0c\u8d27\u5e01\u4e00\u822c\u662f\u4e0d\u7a33\u5b9a\u7684\u3002  \u56e0\u6b64\uff0c\u6211\u4eec\u53d1\u884c\u4ef7\u503c\u5e94\u8be5\u6709\u6240\u4e0d\u540c\u7684\u4ee5\u592a\uff0c\u800c\u4e14\u8981\u4ee5\u4ee5\u592a\u8ba1\u7b97\u71c3\u6599\u4ef7\u683c\u3002 \u5982\u679c\u4ee5\u592a\u5e01\u4ef7\u683c\u4e0a\u6da8\uff0c\u4ee5\u4ee5\u592a\u5e01\u8ba1\u7684\u71c3\u6599\u4ef7\u683c\u5e94\u8be5\u4e0b\u8c03\uff0c\u4ee5\u4fdd\u6301\u71c3\u6599\u7684\u5b9e\u9645\u6210\u672c\u76f8\u540c\u3002  \u71c3\u6599\u6709\u591a\u4e2a\u76f8\u5173\u672f\u8bed: \u71c3\u6599\u4ef7\u683c\uff0c\u71c3\u6599\u6210\u672c\uff0c\u71c3\u6599\u4ef7\u683c\u548c\u7164\u6c14\u8d39\u3002 \u71c3\u6599\u80cc\u540e\u7684\u539f\u7406\u662f\u5bf9\u4e8e\u4ee5\u592a\u574a\u7f51\u7edc\u7684\u4ea4\u6613\u6216\u8ba1\u7b97\u6210\u672c\u6709\u591a\u5c11\u7a33\u5b9a\u7684\u4ef7\u503c\u3002   \u71c3\u6599\u6210\u672c\u662f\u71c3\u6599\u8ba1\u7b97\u6210\u672c\u7684\u4e00\u4e2a\u9759\u6001\u503c, \u5176\u610f\u56fe\u662f\u71c3\u6599\u7684\u771f\u6b63\u4ef7\u503c\u4ece\u4e0d\u6539\u53d8, \u6240\u4ee5\u8fd9\u4e2a\u6210\u672c\u5e94\u8be5\u59cb\u7ec8\u4fdd\u6301\u7a33\u5b9a.  \u71c3\u6599\u4ef7\u683c\u662f\u591a\u5c11\u71c3\u6599\u6210\u672c\u5728\u53e6\u4e00\u4e2a\u8d27\u5e01\u6216\u50cf\u4ee5\u592a\u5e01\u7684\u8c61\u5f81\u3002 \u4e3a\u4e86\u7a33\u5b9a\u71c3\u6599\u7684\u4ef7\u503c\uff0c \u71c3\u6599\u4ef7\u683c\u662f\u4e00\u4e2a\u6d6e\u52a8\u4ef7\u503c\uff0c\u5982\u679c\u4ee3\u5e01\u6216\u8d27\u5e01\u7684\u6210\u672c\u6ce2\u52a8, \u71c3\u6599\u4ef7\u683c\u53d8\u5316\u4fdd\u6301\u76f8\u540c\u7684\u5b9e\u9645\u4ef7\u503c. \u71c3\u6599\u4ef7\u683c\u662f\u7531\u7528\u6237\u613f\u610f\u82b1\u8d39\u7684\u5747\u8861\u4ef7\u683c\u51b3\u5b9a\u7684, \u4ee5\u53ca\u591a\u5c11\u5904\u7406\u8282\u70b9\u613f\u610f\u63a5\u53d7.  \u71c3\u6599\u9650\u5236\u662f\u6bcf\u5757\u53ef\u4ee5\u4f7f\u7528\u7684\u6700\u5927\u71c3\u6599\u91cf, \u5b83\u88ab\u8ba4\u4e3a\u662f\u6700\u5927\u7684\u8ba1\u7b97\u91cf, \u4ea4\u6613\u91cf, \u6216\u5757\u7684\u5927\u5c0f, \u77ff\u5de5\u53ef\u4ee5\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u6162\u6162\u6539\u53d8\u8fd9\u4e2a\u503c.  \u71c3\u6599\u8d39\u5b9e\u9645\u4e0a\u662f\u8fd0\u884c\u7279\u5b9a\u4ea4\u6613\u6216\u8ba1\u5212\uff08\u79f0\u4e3a\u5408\u7ea6\uff09\u6240\u9700\u652f\u4ed8\u7684\u71c3\u6599\u91cf. \u5757\u7684\u71c3\u6599\u8d39\u7528\u53ef\u4ee5\u7528\u6765\u6697\u793a\u5757\u7684\u8ba1\u7b97\u8d1f\u8377\uff0c\u4ea4\u6613\u91cf\u6216\u5927\u5c0f\u3002 \u71c3\u6599\u8d39\u7528\u652f\u4ed8\u7ed9\u77ff\u5de5\uff08\u6216PoS\u4fdd\u7a0e\u627f\u5305\u5546\uff09\u3002", 
            "title": "\u71c3\u6599\u548c\u4ee5\u592a\u5e01"
        }, 
        {
            "location": "/network/connecting-to-the-network/", 
            "text": "\u8fde\u63a5\u5230\u7f51\u7edc\n\n\nThis section\n\n\n\u4ee5\u592a\u574a\u7f51\u7edc\n\n\nThe basis for decentralised consensus is the peer-to-peer network of\nparticipating nodes which maintain and secure the blockchain. See\n[mining]{role=\"ref\"}.\n\n\n\u4ee5\u592a\u574a\u7f51\u7edc\u7edf\u8ba1\n\n\nEthStats.net\n is a dashboard of live statistics\nof the Ethereum network. This dashboard displays important information\nsuch as the current block, hash difficulty, gas price, and gas spending.\nThe nodes shown on the page are only a selection of actual nodes on the\nnetwork. Anyone is allowed to add their node to the EthStats dashboard.\nThe \nEth-Netstats README on\nGithub\n describes how to\nconnect.\n\n\nEtherNodes.com\n displays current and\nhistorical data on node count and other information on both the Ethereum\nmainnet and Morden testnet.\n\n\nDistribution of client implementations on the current live\nnetwork\n - Realtime stats on EtherChain.\n\n\n\u516c\u5171\uff0c\u79c1\u4eba\u548c\u8054\u76df\u533a\u5757\u94fe\n\n\nMost Ethereum projects today rely on Ethereum as a public blockchain,\nwhich grants access to a larger audience of users, network nodes,\ncurrency, and markets. However, there are often reasons to prefer a\nprivate blockchain or consortium blockchain (among a group of trusted\nparticipants). For example, a number of companies in verticals, like\nbanking, are looking to Ethereum as a platform for their own private\nblockchains.\n\n\nBelow is an excerpt from the blog post \nOn Public and Private\nBlockchains\n\nthat explains the difference between the three types of blockchains\nbased on permissioning:\n\n\n\n\nPublic blockchains\n: a public blockchain is a blockchain that\n    anyone in the world can read, anyone in the world can send\n    transactions to and expect to see them included if they are valid,\n    and anyone in the world can participate in the consensus process --\n    the process for determining what blocks get added to the chain and\n    what the current state is. As a substitute for centralized or\n    quasi-centralized trust, public blockchains are secured by\n    cryptoeconomics -- the combination of economic incentives and\n    cryptographic verification using mechanisms such as proof of work or\n    proof of stake, following a general principle that the degree to\n    which someone can have an influence in the consensus process is\n    proportional to the quantity of economic resources that they can\n    bring to bear. These blockchains are generally considered to be\n    \"fully decentralized\".\n\n\nConsortium blockchains\n: a consortium blockchain is a blockchain\n    where the consensus process is controlled by a pre-selected set of\n    nodes; for example, one might imagine a consortium of 15 financial\n    institutions, each of which operates a node and of which 10 must\n    sign every block in order for the block to be valid. The right to\n    read the blockchain may be public, or restricted to the\n    participants, and there are also hybrid routes such as the root\n    hashes of the blocks being public together with an API that allows\n    members of the public to make a limited number of queries and get\n    back cryptographic proofs of some parts of the blockchain state.\n    These blockchains may be considered \"partially decentralized\".\n\n\nPrivate blockchains\n: a fully private blockchain is a blockchain\n    where write permissions are kept centralized to one organization.\n    Read permissions may be public or restricted to an arbitrary extent.\n    Likely applications include database management, auditing, etc\n    internal to a single company, and so public readability may not be\n    necessary in many cases at all, though in other cases public\n    auditability is desired.\n\n\n\n\nWhile these private/consortium blockchains may not have any connection\nto the public blockchain, they still contribute to the overall Ethereum\necosystem by investing in Ethereum software development. Over time, this\ntranslates into software improvements, shared knowledge, and job\nopportunities.\n\n\n\u5982\u4f55\u8fde\u63a5\n\n\nGeth continuously attempts to connect to other nodes on the network\nuntil it has peers. If you have UPnP enabled on your router or run\nEthereum on an Internet-facing server, it will also accept connections\nfrom other nodes.\n\n\nGeth finds peers through something called the \ndiscovery protocol\n. In\nthe discovery protocol, nodes are gossipping with each other to find out\nabout other nodes on the network. In order to get going initially, geth\nuses a set of bootstrap nodes whose endpoints are recorded in the source\ncode.\n\n\n\u68c0\u67e5\u8fde\u901a\u6027\u548cENODE ID\n\n\nTo check how many peers the client is connected to in the interactive\nconsole, the \nnet\n module has two attributes that give you info about\nthe number of peers and whether you are a listening node.\n\n\n \nnet\n.\nlistening\n\n\ntrue\n\n\n\n \nnet\n.\npeerCount\n\n\n4\n\n\n\n\n\nTo get more information about the connected peers, such as IP address\nand port number, supported protocols, use the \npeers()\n function of the\n\nadmin\n object. \nadmin.peers()\n returns the list of currently connected\npeers.\n\n\n \nadmin\n.\npeers\n\n\n[{\n\n  \nID\n:\n \na4de274d3a159e10c2c9a68c326511236381b84c9ec52e72ad732eb0b2b1a2277938f78593cdbe734e6002bf23114d434a085d260514ab336d4acdc312db671b\n,\n\n  \nName\n:\n \nGeth/v0.9.14/linux/go1.4.2\n,\n\n  \nCaps\n:\n \neth/60\n,\n\n  \nRemoteAddress\n:\n \n5.9.150.40:30301\n,\n\n  \nLocalAddress\n:\n \n192.168.0.28:39219\n\n \n},\n \n{\n\n  \nID\n:\n \na979fb575495b8d6db44f750317d0f4622bf4c2aa3365d6af7c284339968eef29b69ad0dce72a4d8db5ebb4968de0e3bec910127f134779fbcb0cb6d3331163c\n,\n\n  \nName\n:\n \nGeth/v0.9.15/linux/go1.4.2\n,\n\n  \nCaps\n:\n \neth/60\n,\n\n  \nRemoteAddress\n:\n \n52.16.188.185:30303\n,\n\n  \nLocalAddress\n:\n \n192.168.0.28:50995\n\n \n},\n \n{\n\n  \nID\n:\n \nf6ba1f1d9241d48138136ccf5baa6c2c8b008435a1c2bd009ca52fb8edbbc991eba36376beaee9d45f16d5dcbf2ed0bc23006c505d57ffcf70921bd94aa7a172\n,\n\n  \nName\n:\n \npyethapp_dd52/v0.9.13/linux2/py2.7.9\n,\n\n  \nCaps\n:\n \neth/60, p2p/3\n,\n\n  \nRemoteAddress\n:\n \n144.76.62.101:30303\n,\n\n  \nLocalAddress\n:\n \n192.168.0.28:40454\n\n \n},\n \n{\n\n  \nID\n:\n \nf4642fa65af50cfdea8fa7414a5def7bb7991478b768e296f5e4a54e8b995de102e0ceae2e826f293c481b5325f89be6d207b003382e18a8ecba66fbaf6416c0\n,\n\n  \nName\n:\n \n++eth/Zeppelin/Rascal/v0.9.14/Release/Darwin/clang/int\n,\n\n  \nCaps\n:\n \neth/60, shh/2\n,\n\n  \nRemoteAddress\n:\n \n129.16.191.64:30303\n,\n\n  \nLocalAddress\n:\n \n192.168.0.28:39705\n\n \n}\n \n]\n\n\n\n\n\nTo check the ports used by geth and also find your enode URI run:\n\n\n \nadmin\n.\nnodeInfo\n\n\n{\n\n  \nName\n:\n \nGeth/v0.9.14/darwin/go1.4.2\n,\n\n  \nNodeUrl\n:\n \nenode://3414c01c19aa75a34f2dbd2f8d0898dc79d6b219ad77f8155abf1a287ce2ba60f14998a3a98c0cf14915eabfdacf914a92b27a01769de18fa2d049dbf4c17694@[::]:30303\n,\n\n  \nNodeID\n:\n \n3414c01c19aa75a34f2dbd2f8d0898dc79d6b219ad77f8155abf1a287ce2ba60f14998a3a98c0cf14915eabfdacf914a92b27a01769de18fa2d049dbf4c17694\n,\n\n  \nIP\n:\n \n::\n,\n\n  \nDiscPort\n:\n \n30303\n,\n\n  \nTCPPort\n:\n \n30303\n,\n\n  \nTd\n:\n \n2044952618444\n,\n\n  \nListenAddr\n:\n \n[::]:30303\n\n\n}\n\n\n\n\n\n\u4e0b\u8f7d\u533a\u5757\u94fe\u7d27\u56fa\u4ef6\n\n\nWhen you start an Ethereum client, the Ethereum blockchain is\nautomatically downloaded. The time it takes to download the Ethereum\nblockchain can vary based on client, client settings, connection speed,\nand number of peers available. Below are some options for more quickly\nobtaining the Ethereum blockchain.\n\n\n\u4f7f\u7528geth\n\n\nIf you are using the geth client, there are some things you can do to\nspeed up the time it takes to download the Ethereum blockchain. If you\nchoose to use the \n--fast\n flag to perform an Ethereum fast sync, you\nwill not retain past transaction data.\n\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\n\nYou cannot use this flag after performing all or part of a normal sync\noperation, meaning you should not have any portion of the Ethereum\nblockchain downloaded before using this command. \nSee this Ethereum\nStack.Exchange answer for more\ninformation\n.\n:::\n\n\nBelow are some flags to use when you want to sync your client more quickly.\n\n\n--fast\n\n\nThis flag enables fast syncing through state downloads rather than\ndownloading the full block data. This will also reduce the size of your\nblockchain dramatically. NOTE: \n--fast\n can only be run if you are\nsyncing your blockchain from scratch and only the first time you\ndownload the blockchain for security reasons. \nSee this Reddit post for more information\n.\n\n\n--cache=1024\n\n\nMegabytes of memory allocated to internal caching (min 16MB / database\nforced). Default is 16MB, so increasing this to 256, 512, 1024 (1GB), or\n2048 (2GB) depending on how much RAM your computer has should make a\ndifference.\n\n\n--jitvm\n\n\nThis flag enables the JIT VM.\n\n\nFull example command with console:\n\n\ngeth --fast --cache\n=\n1024\n --jitvm console\n\n\n\n\nFor more discussion on fast syncing and blockchain download times, \nsee\nthis Reddit\npost\n.\n\n\n\u5bfc\u51fa/\u5bfc\u5165\u533a\u5757\u94fe\n\n\nIf you already have a full Ethereum node synced, you can export the\nblockchain data from the fully synced node and import it into your new\nnode. You can accomplish this in geth by exporting your full node with\nthe command \ngeth export filename\n and importing the blockchain into\nyour node using \ngeth import filename\n. see \nthis link\n\n\n\u9759\u6001\u8282\u70b9\uff0c\u53ef\u4fe1\u8282\u70b9\u548c\u5f15\u5bfc\u8282\u70b9\n\n\nGeth supports a feature called static nodes if you have certain peers\nyou always want to connect to. Static nodes are re-connected on\ndisconnects. You can configure permanent static nodes by putting\nsomething like the following into \ndatadir\n/static-nodes.json\n (this\nshould be the same folder that your \nchaindata\n and \nkeystore\n folders\nare in)\n\n\n[\n\n  \nenode://f4642fa65af50cfdea8fa7414a5def7bb7991478b768e296f5e4a54e8b995de102e0ceae2e826f293c481b5325f89be6d207b003382e18a8ecba66fbaf6416c0@33.4.2.1:30303\n,\n\n  \nenode://pubkey@ip:port\n\n\n]\n\n\n\n\n\nYou can also add static nodes at runtime via the Javascript console using \nadmin.addPeer()\n\n\n admin.addPeer\n(\nenode://f4642fa65af50cfdea8fa7414a5def7bb7991478b768e296f5e4a54e8b995de102e0ceae2e826f293c481b5325f89be6d207b003382e18a8ecba66fbaf6416c0@33.4.2.1:30303\n)\n\n\n\n\n\n\u8fde\u63a5\u7684\u5e38\u89c1\u95ee\u9898\n\n\nSometimes you just can\\'t get connected. The most common reasons are:\n\n\n\n\nYour local time might be incorrect. An accurate clock is required to\n    participate in the Ethereum network. Check your OS for how to resync\n    your clock (example \nsudo ntpdate -s time.nist.gov\n) because even 12\n    seconds too fast can lead to 0 peers.\n\n\nSome firewall configurations can prevent UDP traffic from flowing.\n    You can use the static nodes feature or \nadmin.addPeer()\n on the\n    console to configure connections by hand.\n\n\n\n\nTo start geth without the discovery protocol, you can use the \n--nodiscover\n parameter. You only want this if you are running a test node or an experimental test network with fixed nodes.", 
            "title": "\u8fde\u63a5\u5230\u7f51\u7edc"
        }, 
        {
            "location": "/network/connecting-to-the-network/#_1", 
            "text": "This section", 
            "title": "\u8fde\u63a5\u5230\u7f51\u7edc"
        }, 
        {
            "location": "/network/connecting-to-the-network/#_2", 
            "text": "The basis for decentralised consensus is the peer-to-peer network of\nparticipating nodes which maintain and secure the blockchain. See\n[mining]{role=\"ref\"}.", 
            "title": "\u4ee5\u592a\u574a\u7f51\u7edc"
        }, 
        {
            "location": "/network/connecting-to-the-network/#_3", 
            "text": "EthStats.net  is a dashboard of live statistics\nof the Ethereum network. This dashboard displays important information\nsuch as the current block, hash difficulty, gas price, and gas spending.\nThe nodes shown on the page are only a selection of actual nodes on the\nnetwork. Anyone is allowed to add their node to the EthStats dashboard.\nThe  Eth-Netstats README on\nGithub  describes how to\nconnect.  EtherNodes.com  displays current and\nhistorical data on node count and other information on both the Ethereum\nmainnet and Morden testnet.  Distribution of client implementations on the current live\nnetwork  - Realtime stats on EtherChain.", 
            "title": "\u4ee5\u592a\u574a\u7f51\u7edc\u7edf\u8ba1"
        }, 
        {
            "location": "/network/connecting-to-the-network/#_4", 
            "text": "Most Ethereum projects today rely on Ethereum as a public blockchain,\nwhich grants access to a larger audience of users, network nodes,\ncurrency, and markets. However, there are often reasons to prefer a\nprivate blockchain or consortium blockchain (among a group of trusted\nparticipants). For example, a number of companies in verticals, like\nbanking, are looking to Ethereum as a platform for their own private\nblockchains.  Below is an excerpt from the blog post  On Public and Private\nBlockchains \nthat explains the difference between the three types of blockchains\nbased on permissioning:   Public blockchains : a public blockchain is a blockchain that\n    anyone in the world can read, anyone in the world can send\n    transactions to and expect to see them included if they are valid,\n    and anyone in the world can participate in the consensus process --\n    the process for determining what blocks get added to the chain and\n    what the current state is. As a substitute for centralized or\n    quasi-centralized trust, public blockchains are secured by\n    cryptoeconomics -- the combination of economic incentives and\n    cryptographic verification using mechanisms such as proof of work or\n    proof of stake, following a general principle that the degree to\n    which someone can have an influence in the consensus process is\n    proportional to the quantity of economic resources that they can\n    bring to bear. These blockchains are generally considered to be\n    \"fully decentralized\".  Consortium blockchains : a consortium blockchain is a blockchain\n    where the consensus process is controlled by a pre-selected set of\n    nodes; for example, one might imagine a consortium of 15 financial\n    institutions, each of which operates a node and of which 10 must\n    sign every block in order for the block to be valid. The right to\n    read the blockchain may be public, or restricted to the\n    participants, and there are also hybrid routes such as the root\n    hashes of the blocks being public together with an API that allows\n    members of the public to make a limited number of queries and get\n    back cryptographic proofs of some parts of the blockchain state.\n    These blockchains may be considered \"partially decentralized\".  Private blockchains : a fully private blockchain is a blockchain\n    where write permissions are kept centralized to one organization.\n    Read permissions may be public or restricted to an arbitrary extent.\n    Likely applications include database management, auditing, etc\n    internal to a single company, and so public readability may not be\n    necessary in many cases at all, though in other cases public\n    auditability is desired.   While these private/consortium blockchains may not have any connection\nto the public blockchain, they still contribute to the overall Ethereum\necosystem by investing in Ethereum software development. Over time, this\ntranslates into software improvements, shared knowledge, and job\nopportunities.", 
            "title": "\u516c\u5171\uff0c\u79c1\u4eba\u548c\u8054\u76df\u533a\u5757\u94fe"
        }, 
        {
            "location": "/network/connecting-to-the-network/#_5", 
            "text": "Geth continuously attempts to connect to other nodes on the network\nuntil it has peers. If you have UPnP enabled on your router or run\nEthereum on an Internet-facing server, it will also accept connections\nfrom other nodes.  Geth finds peers through something called the  discovery protocol . In\nthe discovery protocol, nodes are gossipping with each other to find out\nabout other nodes on the network. In order to get going initially, geth\nuses a set of bootstrap nodes whose endpoints are recorded in the source\ncode.", 
            "title": "\u5982\u4f55\u8fde\u63a5"
        }, 
        {
            "location": "/network/connecting-to-the-network/#enode-id", 
            "text": "To check how many peers the client is connected to in the interactive\nconsole, the  net  module has two attributes that give you info about\nthe number of peers and whether you are a listening node.    net . listening  true    net . peerCount  4   To get more information about the connected peers, such as IP address\nand port number, supported protocols, use the  peers()  function of the admin  object.  admin.peers()  returns the list of currently connected\npeers.    admin . peers  [{ \n   ID :   a4de274d3a159e10c2c9a68c326511236381b84c9ec52e72ad732eb0b2b1a2277938f78593cdbe734e6002bf23114d434a085d260514ab336d4acdc312db671b , \n   Name :   Geth/v0.9.14/linux/go1.4.2 , \n   Caps :   eth/60 , \n   RemoteAddress :   5.9.150.40:30301 , \n   LocalAddress :   192.168.0.28:39219 \n  },   { \n   ID :   a979fb575495b8d6db44f750317d0f4622bf4c2aa3365d6af7c284339968eef29b69ad0dce72a4d8db5ebb4968de0e3bec910127f134779fbcb0cb6d3331163c , \n   Name :   Geth/v0.9.15/linux/go1.4.2 , \n   Caps :   eth/60 , \n   RemoteAddress :   52.16.188.185:30303 , \n   LocalAddress :   192.168.0.28:50995 \n  },   { \n   ID :   f6ba1f1d9241d48138136ccf5baa6c2c8b008435a1c2bd009ca52fb8edbbc991eba36376beaee9d45f16d5dcbf2ed0bc23006c505d57ffcf70921bd94aa7a172 , \n   Name :   pyethapp_dd52/v0.9.13/linux2/py2.7.9 , \n   Caps :   eth/60, p2p/3 , \n   RemoteAddress :   144.76.62.101:30303 , \n   LocalAddress :   192.168.0.28:40454 \n  },   { \n   ID :   f4642fa65af50cfdea8fa7414a5def7bb7991478b768e296f5e4a54e8b995de102e0ceae2e826f293c481b5325f89be6d207b003382e18a8ecba66fbaf6416c0 , \n   Name :   ++eth/Zeppelin/Rascal/v0.9.14/Release/Darwin/clang/int , \n   Caps :   eth/60, shh/2 , \n   RemoteAddress :   129.16.191.64:30303 , \n   LocalAddress :   192.168.0.28:39705 \n  }   ]   To check the ports used by geth and also find your enode URI run:    admin . nodeInfo  { \n   Name :   Geth/v0.9.14/darwin/go1.4.2 , \n   NodeUrl :   enode://3414c01c19aa75a34f2dbd2f8d0898dc79d6b219ad77f8155abf1a287ce2ba60f14998a3a98c0cf14915eabfdacf914a92b27a01769de18fa2d049dbf4c17694@[::]:30303 , \n   NodeID :   3414c01c19aa75a34f2dbd2f8d0898dc79d6b219ad77f8155abf1a287ce2ba60f14998a3a98c0cf14915eabfdacf914a92b27a01769de18fa2d049dbf4c17694 , \n   IP :   :: , \n   DiscPort :   30303 , \n   TCPPort :   30303 , \n   Td :   2044952618444 , \n   ListenAddr :   [::]:30303  }", 
            "title": "\u68c0\u67e5\u8fde\u901a\u6027\u548cENODE ID"
        }, 
        {
            "location": "/network/connecting-to-the-network/#_6", 
            "text": "When you start an Ethereum client, the Ethereum blockchain is\nautomatically downloaded. The time it takes to download the Ethereum\nblockchain can vary based on client, client settings, connection speed,\nand number of peers available. Below are some options for more quickly\nobtaining the Ethereum blockchain.", 
            "title": "\u4e0b\u8f7d\u533a\u5757\u94fe\u7d27\u56fa\u4ef6"
        }, 
        {
            "location": "/network/connecting-to-the-network/#geth", 
            "text": "If you are using the geth client, there are some things you can do to\nspeed up the time it takes to download the Ethereum blockchain. If you\nchoose to use the  --fast  flag to perform an Ethereum fast sync, you\nwill not retain past transaction data.  ::: {.note}\n::: {.admonition-title}\nNote\n:::  You cannot use this flag after performing all or part of a normal sync\noperation, meaning you should not have any portion of the Ethereum\nblockchain downloaded before using this command.  See this Ethereum\nStack.Exchange answer for more\ninformation .\n:::  Below are some flags to use when you want to sync your client more quickly.  --fast  This flag enables fast syncing through state downloads rather than\ndownloading the full block data. This will also reduce the size of your\nblockchain dramatically. NOTE:  --fast  can only be run if you are\nsyncing your blockchain from scratch and only the first time you\ndownload the blockchain for security reasons.  See this Reddit post for more information .  --cache=1024  Megabytes of memory allocated to internal caching (min 16MB / database\nforced). Default is 16MB, so increasing this to 256, 512, 1024 (1GB), or\n2048 (2GB) depending on how much RAM your computer has should make a\ndifference.  --jitvm  This flag enables the JIT VM.  Full example command with console:  geth --fast --cache = 1024  --jitvm console  For more discussion on fast syncing and blockchain download times,  see\nthis Reddit\npost .", 
            "title": "\u4f7f\u7528geth"
        }, 
        {
            "location": "/network/connecting-to-the-network/#_7", 
            "text": "If you already have a full Ethereum node synced, you can export the\nblockchain data from the fully synced node and import it into your new\nnode. You can accomplish this in geth by exporting your full node with\nthe command  geth export filename  and importing the blockchain into\nyour node using  geth import filename . see  this link", 
            "title": "\u5bfc\u51fa/\u5bfc\u5165\u533a\u5757\u94fe"
        }, 
        {
            "location": "/network/connecting-to-the-network/#_8", 
            "text": "Geth supports a feature called static nodes if you have certain peers\nyou always want to connect to. Static nodes are re-connected on\ndisconnects. You can configure permanent static nodes by putting\nsomething like the following into  datadir /static-nodes.json  (this\nshould be the same folder that your  chaindata  and  keystore  folders\nare in)  [ \n   enode://f4642fa65af50cfdea8fa7414a5def7bb7991478b768e296f5e4a54e8b995de102e0ceae2e826f293c481b5325f89be6d207b003382e18a8ecba66fbaf6416c0@33.4.2.1:30303 , \n   enode://pubkey@ip:port  ]   You can also add static nodes at runtime via the Javascript console using  admin.addPeer()   admin.addPeer ( enode://f4642fa65af50cfdea8fa7414a5def7bb7991478b768e296f5e4a54e8b995de102e0ceae2e826f293c481b5325f89be6d207b003382e18a8ecba66fbaf6416c0@33.4.2.1:30303 )", 
            "title": "\u9759\u6001\u8282\u70b9\uff0c\u53ef\u4fe1\u8282\u70b9\u548c\u5f15\u5bfc\u8282\u70b9"
        }, 
        {
            "location": "/network/connecting-to-the-network/#_9", 
            "text": "Sometimes you just can\\'t get connected. The most common reasons are:   Your local time might be incorrect. An accurate clock is required to\n    participate in the Ethereum network. Check your OS for how to resync\n    your clock (example  sudo ntpdate -s time.nist.gov ) because even 12\n    seconds too fast can lead to 0 peers.  Some firewall configurations can prevent UDP traffic from flowing.\n    You can use the static nodes feature or  admin.addPeer()  on the\n    console to configure connections by hand.   To start geth without the discovery protocol, you can use the  --nodiscover  parameter. You only want this if you are running a test node or an experimental test network with fixed nodes.", 
            "title": "\u8fde\u63a5\u7684\u5e38\u89c1\u95ee\u9898"
        }, 
        {
            "location": "/network/test-networks/", 
            "text": "Test Networks\n\n\nMorden testnet\n\n\nMorden is a public Ethereum alternative testnet. It is expected to\ncontinue throughout the Frontier and Homestead milestones of the\nsoftware.\n\n\nUsage\n\n\neth (C++ client)\n\n\nThis is supported natively on 0.9.93 and above. Pass the \n--morden\n\nargument in when starting any of the clients. e.g.:\n\n\n``` {.sourceCode .Console}\n\n\n\n\neth --morden\n\n#### PyEthApp (Python client)\n\nPyEthApp supports the morden network from v1.0.5 onwards:\n\n``` {.sourceCode .Console}\n\n pyethapp --profile morden run\n\n\n\n\n\ngeth (Go client)\n\n\n``` {.sourceCode .Console}\n\n\n\n\ngeth --testnet\n\n### Details\n\nAll parameters are the same as the main Ethereum network except:\n\n-   Network Name: **Morden**\n-   Network Identity: 2\n-   genesis.json (given below);\n-   Initial Account Nonce (`IAN`) is 2\\^20 (instead of 0 in all previous\n    networks).\n    -   All accounts in the state trie have nonce \\\n= `IAN`.\n    -   Whenever an account is inserted into the state trie it is\n        initialised with nonce = `IAN`.\n-   Genesis generic block hash:\n    `0cd786a2425d16f152c658316c423e6ce1181e15c3295826d7c9904cba9ce303`\n-   Genesis generic state root:\n    `f3f4696bbf3b3b07775128eb7a3763279a394e382130f27c21e70233e04946a9`\n\n#### Morden\\\ns genesis.json\n\n``` {.sourceCode .JSON}\n{\n        \nnonce\n: \n0x00006d6f7264656e\n,\n        \ndifficulty\n: \n0x20000\n,\n        \nmixhash\n: \n0x00000000000000000000000000000000000000647572616c65787365646c6578\n,\n        \ncoinbase\n: \n0x0000000000000000000000000000000000000000\n,\n        \ntimestamp\n: \n0x00\n,\n        \nparentHash\n: \n0x0000000000000000000000000000000000000000000000000000000000000000\n,\n        \nextraData\n: \n0x\n,\n        \ngasLimit\n: \n0x2FEFD8\n,\n        \nalloc\n: {\n                \n0000000000000000000000000000000000000001\n: { \nbalance\n: \n1\n },\n                \n0000000000000000000000000000000000000002\n: { \nbalance\n: \n1\n },\n                \n0000000000000000000000000000000000000003\n: { \nbalance\n: \n1\n },\n                \n0000000000000000000000000000000000000004\n: { \nbalance\n: \n1\n },\n                \n102e61f5d8f9bc71d0ad4a084df4e65e05ce0e1c\n: { \nbalance\n: \n1606938044258990275541962092341162602522202993782792835301376\n }\n        }\n}\n\n\n\n\n\nGetting Morden testnet ether\n\n\nBecause of decreased mining difficulty on the testnet, ether can easily\nmined using your CPU/GPU (see [mining]{role=\"ref\"}).\n\n\nSetting up a local private testnet\n\n\neth (C++ client) {#custom-networks-eth}\n\n\nIt is possible to connect to or create a new network by using the\n--genesis and --config.\n\n\n``` {.sourceCode .Console}\n\n\n\n\neth --private \"customChain\" --config config.json --genesis genesis.json\n\nIt is possible to use both \\--config and \\--genesis.\n\nIn that case, the genesis block description provided by \\--config will\nbe overwritten by the \\--genesis option.\n\n``` {.sourceCode .Console}\n--private //defines the name of the custom chain (optional).\n\n\n\n\n\n``` {.sourceCode .Console}\n--config \n\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\n\\\nfilename\\\n contains a JSON description of the network:\n\n-   sealEngine (engine use to mine block)\n\n    \n \\\nEthash\\\n is the Ethereum proof of work engine (used by the live\n    \n network).\n    \n\n    \n \\\nNoProof\\\n no proof of work is needed to mine a block.\n\n-   params (general network information like minGasLimit,\n    minimumDifficulty, blockReward, networkID)\n-   genesis (genesis block description)\n-   accounts (setup an original state that contains accounts/contracts)\n:::\n\nHere is a Config sample (used by the Olympic network):\n\n``` {.sourceCode .JSON}\n{\n    \nsealEngine\n: \nEthash\n,\n    \nparams\n: {\n        \naccountStartNonce\n: \n0x00\n,\n        \nfrontierCompatibilityModeLimit\n: \n0xffffffff\n,\n        \nmaximumExtraDataSize\n: \n0x0400\n,\n        \ntieBreakingGas\n: false,\n        \nminGasLimit\n: \n125000\n,\n        \ngasLimitBoundDivisor\n: \n0x0400\n,\n        \nminimumDifficulty\n: \n0x020000\n,\n        \ndifficultyBoundDivisor\n: \n0x0800\n,\n        \ndurationLimit\n: \n0x08\n,\n        \nblockReward\n: \n0x14D1120D7B160000\n,\n        \nregistrar\n: \n5e70c0bbcd5636e0f9f9316e9f8633feb64d4050\n,\n        \nnetworkID\n : \n0x0\n\n    },\n    \ngenesis\n: {\n        \nnonce\n: \n0x000000000000002a\n,\n        \ndifficulty\n: \n0x20000\n,\n        \nmixHash\n: \n0x0000000000000000000000000000000000000000000000000000000000000000\n,\n        \nauthor\n: \n0x0000000000000000000000000000000000000000\n,\n        \ntimestamp\n: \n0x00\n,\n        \nparentHash\n: \n0x0000000000000000000000000000000000000000000000000000000000000000\n,\n        \nextraData\n: \n0x\n,\n        \ngasLimit\n: \n0x2fefd8\n\n    },\n    \naccounts\n: {\n        \n0000000000000000000000000000000000000001\n: { \nwei\n: \n1\n, \nprecompiled\n: { \nname\n: \necrecover\n, \nlinear\n: { \nbase\n: 3000, \nword\n: 0 } } },\n        \n0000000000000000000000000000000000000002\n: { \nwei\n: \n1\n, \nprecompiled\n: { \nname\n: \nsha256\n, \nlinear\n: { \nbase\n: 60, \nword\n: 12 } } },\n        \n0000000000000000000000000000000000000003\n: { \nwei\n: \n1\n, \nprecompiled\n: { \nname\n: \nripemd160\n, \nlinear\n: { \nbase\n: 600, \nword\n: 120 } } },\n        \n0000000000000000000000000000000000000004\n: { \nwei\n: \n1\n, \nprecompiled\n: { \nname\n: \nidentity\n, \nlinear\n: { \nbase\n: 15, \nword\n: 3 } } },\n        \ndbdbdb2cbd23b783741e8d7fcf51e459b497e4a6\n: { \nwei\n: \n1606938044258990275541962092341162602522202993782792835301376\n },\n        \ne6716f9544a56c530d868e4bfbacb172315bdead\n: { \nwei\n: \n1606938044258990275541962092341162602522202993782792835301376\n },\n        \nb9c015918bdaba24b4ff057a92a3873d6eb201be\n: { \nwei\n: \n1606938044258990275541962092341162602522202993782792835301376\n },\n        \n1a26338f0d905e295fccb71fa9ea849ffa12aaf4\n: { \nwei\n: \n1606938044258990275541962092341162602522202993782792835301376\n },\n        \n2ef47100e0787b915105fd5e3f4ff6752079d5cb\n: { \nwei\n: \n1606938044258990275541962092341162602522202993782792835301376\n },\n        \ncd2a3d9f938e13cd947ec05abc7fe734df8dd826\n: { \nwei\n: \n1606938044258990275541962092341162602522202993782792835301376\n },\n        \n6c386a4b26f73c802f34673f7248bb118f97424a\n: { \nwei\n: \n1606938044258990275541962092341162602522202993782792835301376\n },\n        \ne4157b34ea9615cfbde6b4fda419828124b70c78\n: { \nwei\n: \n1606938044258990275541962092341162602522202993782792835301376\n }\n    }\n}\n\n\n\n``` {.sourceCode .Console}\n--genesis \n (optional if the config option is provided and contains the genesis description).\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\n\\\nfilename\\\n contains a JSON description of the genesis block:\n:::\n\nThe content is the same as the genesis field provided by the \\\nconfig\\\n\nparameter:\n\n``` {.sourceCode .JavaScript}\n{\n      \nnonce\n: \n0x000000000000002a\n,\n      \ndifficulty\n: \n0x20000\n,\n      \nmixHash\n: \n0x0000000000000000000000000000000000000000000000000000000000000000\n,\n      \nauthor\n: \n0x0000000000000000000000000000000000000000\n,\n      \ntimestamp\n: \n0x00\n,\n      \nparentHash\n: \n0x0000000000000000000000000000000000000000000000000000000000000000\n,\n      \nextraData\n: \n0x\n,\n      \ngasLimit\n: \n0x2fefd8\n\n}\n\n\n\ngeth (Go client)\n\n\nYou either pre-generate or mine your own ether on a private testnet. It\nis a much more cost effective way of trying out Ethereum and you can\navoid having to mine or find Morden test ether.\n\n\nThe things that are required to specify in a private chain are:\n\n\n:   -   Custom Genesis File\n    -   Custom Data Directory\n    -   Custom NetworkID\n    -   (Recommended) Disable Node Discovery\n\n\nThe genesis file\n\n\nThe genesis block is the start of the blockchain - the first block,\nblock 0, and the only block that does not point to a predecessor block.\nThe protocol ensures that no other node will agree with your version of\nthe blockchain unless they have the same genesis block, so you can make\nas many private testnet blockchains as you\\'d like!\n\n\n[CustomGenesis.json]{role=\"file\"}\n\n\n``` {.sourceCode .JSON}\n{\n    \"config\": { }, \"nonce\": \"0x0000000000000042\",     \"timestamp\": \"0x0\",\n    \"parentHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n    \"extraData\": \"0x00\",     \"gasLimit\": \"0x8000000\",     \"difficulty\": \"0x400\",\n    \"mixhash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n    \"coinbase\": \"0x3333333333333333333333333333333333333333\",     \"alloc\": {     }\n}\n\nSave a file called [CustomGenesis.json]{role=\nfile\n}. You will reference\nthis when starting your geth node using the following command:\n\n`geth init /path/to/CustomGenesis.json`\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\nBy default geth will use the same directory for network related files as\nfor the public mainnet. Thus you are advised to set a custom `--datadir`\nto keep the public network\\\ns chaindata from bing reset.\n:::\n\n### Command line parameters for private network\n\nThere are some command line options (also called \nflags\n) that are\nnecessary in order to make sure that your network is private. We already\ncovered the genesis flag, but we need a few more. Note that all of the\ncommands below are to be used in the geth Ethereum client.\n\n`--nodiscover`\n\nUse this to make sure that your node is not discoverable by people who\ndo not manually add you. Otherwise, there is a chance that your node may\nbe inadvertently added to a stranger\\\ns blockchain if they have the same\ngenesis file and network id.\n\n`--maxpeers 0`\n\nUse maxpeers 0 if you do not want anyone else connecting to your test\nchain. Alternatively, you can adjust this number if you know exactly how\nmany peers you want connecting to your node.\n\n`--rpc`\n\nThis will enable RPC interface on your node. This is generally enabled\nby default in Geth.\n\n`--rpcapi \ndb,eth,net,web3\n`\n\nThis dictates what APIs that are allowed to be accessed over RPC. By\ndefault, Geth enables the web3 interface over RPC.\n\n**IMPORTANT: Please note that offering an API over the RPC/IPC interface\nwill give everyone access to the API who can access this interface (e.g.\ndapp\\\ns). Be careful which API\\\ns you enable. By default geth enables\nall API\\\ns over the IPC interface and only the db,eth,net and web3\nAPI\\\ns over the RPC interface.**\n\n`--rpcport \n8080\n`\n\nChange 8000 to any port that is open on your network. The default for\ngeth is 8080.\n\n`--rpccorsdomain \nhttp://chriseth.github.io/browser-solidity/\n`\n\nThis dictates what URLs can connect to your node in order to perform RPC\nclient tasks. Be very careful with this and type a specific URL rather\nthan the wildcard (\\*) which would allow any URL to connect to your RPC\ninstance.\n\n`--datadir \n/home/TestChain1\n`\n\nThis is the data directory that your private chain data will be stored\nin (under the [nubits]{role=\nfile\n} . Choose a location that is separate\nfrom your public Ethereum chain folder.\n\n`--port \n30303\n`\n\nThis is the \\\nnetwork listening port\\\n, which you will use to connect\nwith other peers manually.\n\n`--identity \nTestnetMainNode\n`\n\nThis will set up an identity for your node so it can be identified more\neasily in a list of peers. Here is an example of how these identities\nshow up on the network.\n\n### Launching `geth`\n\nAfter you have created your custom genesis block JSON file and created a\ndirectory for your blockchain data, type the following command into your\nconsole that has access to geth:\n\n``` {.sourceCode .Console}\ngeth --identity \nMyNodeName\n --rpc --rpcport \n8080\n --rpccorsdomain \n*\n --datadir \nC:\\chains\\TestChain1\n --port \n30303\n --nodiscover --rpcapi \ndb,eth,net,web3\n --networkid 1999 init /path/to/CustomGenesis.json\n\n\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\n\nPlease change the flags to match your custom settings.\n:::\n\n\nThis will initialize your genesis block. To interact with geth through\nthe console enter:\n\n\n``` {.sourceCode .Console}\ngeth --identity \"MyNodeName\" --rpc --rpcport \"8080\" --rpccorsdomain \"*\" --datadir \"C:\\chains\\TestChain1\" --port \"30303\" --nodiscover --rpcapi \"db,eth,net,web3\" --networkid 1999 console\n\nYou will need to start your geth instance with your custom chain command\nevery time you want to access your custom chain. If you just type\n\\\ngeth\\\n in your console, it will not remember all of the flags you have\nset.\n\nThe full list of methods available through the javascript console is\navailable on [the geth wiki on\ngithub](https://github.com/ethereum/go-ethereum/wiki/JavaScript-Console)\n\nIf you already have a geth node running, you can attach another geth\ninstance to it using:\n\n``` {.sourceCode .Console}\ngeth attach\n\n\n\nNow you\\'ll need to initialize a new account on the testnest, and set it\nas your etherbase (the address that will receive mining rewards).\n\n\nIn the javascript console type\n\n\n``` {.sourceCode .Console}\npersonal.newAccount(\"password\")\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\nReplace with the password of your choice\n:::\n\nNow we\\\nll set it as the etherbase:\n\n``` {.sourceCode .Console}\nminer.setEtherbase(personal.listAccounts[0])\n\n\n\nIf successful, the console will print \\\"true\\\"\n\n\nFinally, you are ready to start mining test ether:\n\n\n``` {.sourceCode .Console}\nminer.start()\n\n### Pre-allocating ether to your account\n\nA difficulty of \\\n0x400\\\n allows you to mine Ether very quickly on your\nprivate testnet chain. If you create your chain and start mining, you\nshould have hundreds of ether in a matter of minutes which is way more\nthan enough to test transactions on your network. If you would still\nlike to pre-allocate Ether to your account, you will need to:\n\n1.  Create a new Ethereum account after you create your private chain\n2.  Copy your new account address\n3.  Add the following command to your Custom\\_Genesis.json file:\n\n``` {.sourceCode .Javascript}\n\nalloc\n:\n{\n    \nyour account address e.g. 0x1fb891f92eb557f4d688463d0d7c560552263b5a\n:\n    { \nbalance\n: \n20000000000000000000\n }\n}\n\n\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\n\nReplace \n0x1fb891f92eb557f4d688463d0d7c560552263b5a\n with your account\naddress.\n:::\n\n\nSave your genesis file and rerun your private chain command. Once geth\nis fully loaded, close it by .\n\n\nWe want to assign an address to the variable \nprimary\n and check its\nbalance.\n\n\nRun the command \ngeth account list\n in your terminal to see what account\n# your new address was assigned.\n\n\n``` {.sourceCode .Console}\n\n\n\n\ngeth account list\nAccount #0: {d1ade25ccd3d550a7eb532ac759cac7be09c2719}\nAccount #1: {da65665fc30803cb1fb7e6d86691e20b1826dee0}\nAccount #2: {e470b1a7d2c9c5c6f03bbaa8fa20db6d404a0c32}\nAccount #3: {f4dd5c3794f1fd0cdc0327a83aa472609c806e99}\n\nTake note of which account \\# is the one that you pre-allocated ether\nto. Alternatively, you can launch the console with `geth console` (keep\nthe same parameters as when you launched `geth` first). Once the prompt\nappears, type\n\n``` {.sourceCode .Console}\n\n eth.accounts\n\n\n\n\n\nThis will return the array of account addresses you possess.\n\n\n``` {.sourceCode .Console}\n\n\n\n\nprimary = eth.accounts[0]\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\nReplace `0` with your account\\\ns index. This console command should\nreturn your primary Ethereum address.\n:::\n\nType the following command:\n\n``` {.sourceCode .Console}\n\n balance = web3.fromWei(eth.getBalance(primary), \nether\n);\n\n\n\n\n\nThis should return \n7.5\n indicating you have that much ether in your\naccount. The reason we had to put such a large number in the alloc\nsection of your genesis file is because the \\\"balance\\\" field takes a\nnumber in wei which is the smallest denomination of the Ethereum\ncurrency ether (see _Ether).\n\n\n\n\nhttps://www.reddit.com/r/ethereum/comments/3kdnus/question_about_private_chain_mining_dont_upvote/", 
            "title": "\u6d4b\u8bd5\u7f51\u7edc"
        }, 
        {
            "location": "/network/test-networks/#test-networks", 
            "text": "", 
            "title": "Test Networks"
        }, 
        {
            "location": "/network/test-networks/#morden-testnet", 
            "text": "Morden is a public Ethereum alternative testnet. It is expected to\ncontinue throughout the Frontier and Homestead milestones of the\nsoftware.", 
            "title": "Morden testnet"
        }, 
        {
            "location": "/network/test-networks/#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/network/test-networks/#eth-c-client", 
            "text": "This is supported natively on 0.9.93 and above. Pass the  --morden \nargument in when starting any of the clients. e.g.:  ``` {.sourceCode .Console}   eth --morden #### PyEthApp (Python client)\n\nPyEthApp supports the morden network from v1.0.5 onwards:\n\n``` {.sourceCode .Console}  pyethapp --profile morden run", 
            "title": "eth (C++ client)"
        }, 
        {
            "location": "/network/test-networks/#geth-go-client", 
            "text": "``` {.sourceCode .Console}   geth --testnet ### Details\n\nAll parameters are the same as the main Ethereum network except:\n\n-   Network Name: **Morden**\n-   Network Identity: 2\n-   genesis.json (given below);\n-   Initial Account Nonce (`IAN`) is 2\\^20 (instead of 0 in all previous\n    networks).\n    -   All accounts in the state trie have nonce \\ = `IAN`.\n    -   Whenever an account is inserted into the state trie it is\n        initialised with nonce = `IAN`.\n-   Genesis generic block hash:\n    `0cd786a2425d16f152c658316c423e6ce1181e15c3295826d7c9904cba9ce303`\n-   Genesis generic state root:\n    `f3f4696bbf3b3b07775128eb7a3763279a394e382130f27c21e70233e04946a9`\n\n#### Morden\\ s genesis.json\n\n``` {.sourceCode .JSON}\n{\n         nonce :  0x00006d6f7264656e ,\n         difficulty :  0x20000 ,\n         mixhash :  0x00000000000000000000000000000000000000647572616c65787365646c6578 ,\n         coinbase :  0x0000000000000000000000000000000000000000 ,\n         timestamp :  0x00 ,\n         parentHash :  0x0000000000000000000000000000000000000000000000000000000000000000 ,\n         extraData :  0x ,\n         gasLimit :  0x2FEFD8 ,\n         alloc : {\n                 0000000000000000000000000000000000000001 : {  balance :  1  },\n                 0000000000000000000000000000000000000002 : {  balance :  1  },\n                 0000000000000000000000000000000000000003 : {  balance :  1  },\n                 0000000000000000000000000000000000000004 : {  balance :  1  },\n                 102e61f5d8f9bc71d0ad4a084df4e65e05ce0e1c : {  balance :  1606938044258990275541962092341162602522202993782792835301376  }\n        }\n}", 
            "title": "geth (Go client)"
        }, 
        {
            "location": "/network/test-networks/#getting-morden-testnet-ether", 
            "text": "Because of decreased mining difficulty on the testnet, ether can easily\nmined using your CPU/GPU (see [mining]{role=\"ref\"}).", 
            "title": "Getting Morden testnet ether"
        }, 
        {
            "location": "/network/test-networks/#setting-up-a-local-private-testnet", 
            "text": "", 
            "title": "Setting up a local private testnet"
        }, 
        {
            "location": "/network/test-networks/#eth-c-client-custom-networks-eth", 
            "text": "It is possible to connect to or create a new network by using the\n--genesis and --config.  ``` {.sourceCode .Console}   eth --private \"customChain\" --config config.json --genesis genesis.json It is possible to use both \\--config and \\--genesis.\n\nIn that case, the genesis block description provided by \\--config will\nbe overwritten by the \\--genesis option.\n\n``` {.sourceCode .Console}\n--private //defines the name of the custom chain (optional).   ``` {.sourceCode .Console}\n--config   ::: {.note}\n::: {.admonition-title}\nNote\n:::\n\n\\ filename\\  contains a JSON description of the network:\n\n-   sealEngine (engine use to mine block)\n\n      \\ Ethash\\  is the Ethereum proof of work engine (used by the live\n      network).\n     \n      \\ NoProof\\  no proof of work is needed to mine a block.\n\n-   params (general network information like minGasLimit,\n    minimumDifficulty, blockReward, networkID)\n-   genesis (genesis block description)\n-   accounts (setup an original state that contains accounts/contracts)\n:::\n\nHere is a Config sample (used by the Olympic network):\n\n``` {.sourceCode .JSON}\n{\n     sealEngine :  Ethash ,\n     params : {\n         accountStartNonce :  0x00 ,\n         frontierCompatibilityModeLimit :  0xffffffff ,\n         maximumExtraDataSize :  0x0400 ,\n         tieBreakingGas : false,\n         minGasLimit :  125000 ,\n         gasLimitBoundDivisor :  0x0400 ,\n         minimumDifficulty :  0x020000 ,\n         difficultyBoundDivisor :  0x0800 ,\n         durationLimit :  0x08 ,\n         blockReward :  0x14D1120D7B160000 ,\n         registrar :  5e70c0bbcd5636e0f9f9316e9f8633feb64d4050 ,\n         networkID  :  0x0 \n    },\n     genesis : {\n         nonce :  0x000000000000002a ,\n         difficulty :  0x20000 ,\n         mixHash :  0x0000000000000000000000000000000000000000000000000000000000000000 ,\n         author :  0x0000000000000000000000000000000000000000 ,\n         timestamp :  0x00 ,\n         parentHash :  0x0000000000000000000000000000000000000000000000000000000000000000 ,\n         extraData :  0x ,\n         gasLimit :  0x2fefd8 \n    },\n     accounts : {\n         0000000000000000000000000000000000000001 : {  wei :  1 ,  precompiled : {  name :  ecrecover ,  linear : {  base : 3000,  word : 0 } } },\n         0000000000000000000000000000000000000002 : {  wei :  1 ,  precompiled : {  name :  sha256 ,  linear : {  base : 60,  word : 12 } } },\n         0000000000000000000000000000000000000003 : {  wei :  1 ,  precompiled : {  name :  ripemd160 ,  linear : {  base : 600,  word : 120 } } },\n         0000000000000000000000000000000000000004 : {  wei :  1 ,  precompiled : {  name :  identity ,  linear : {  base : 15,  word : 3 } } },\n         dbdbdb2cbd23b783741e8d7fcf51e459b497e4a6 : {  wei :  1606938044258990275541962092341162602522202993782792835301376  },\n         e6716f9544a56c530d868e4bfbacb172315bdead : {  wei :  1606938044258990275541962092341162602522202993782792835301376  },\n         b9c015918bdaba24b4ff057a92a3873d6eb201be : {  wei :  1606938044258990275541962092341162602522202993782792835301376  },\n         1a26338f0d905e295fccb71fa9ea849ffa12aaf4 : {  wei :  1606938044258990275541962092341162602522202993782792835301376  },\n         2ef47100e0787b915105fd5e3f4ff6752079d5cb : {  wei :  1606938044258990275541962092341162602522202993782792835301376  },\n         cd2a3d9f938e13cd947ec05abc7fe734df8dd826 : {  wei :  1606938044258990275541962092341162602522202993782792835301376  },\n         6c386a4b26f73c802f34673f7248bb118f97424a : {  wei :  1606938044258990275541962092341162602522202993782792835301376  },\n         e4157b34ea9615cfbde6b4fda419828124b70c78 : {  wei :  1606938044258990275541962092341162602522202993782792835301376  }\n    }\n}  ``` {.sourceCode .Console}\n--genesis   (optional if the config option is provided and contains the genesis description). ::: {.note}\n::: {.admonition-title}\nNote\n:::\n\n\\ filename\\  contains a JSON description of the genesis block:\n:::\n\nThe content is the same as the genesis field provided by the \\ config\\ \nparameter:\n\n``` {.sourceCode .JavaScript}\n{\n       nonce :  0x000000000000002a ,\n       difficulty :  0x20000 ,\n       mixHash :  0x0000000000000000000000000000000000000000000000000000000000000000 ,\n       author :  0x0000000000000000000000000000000000000000 ,\n       timestamp :  0x00 ,\n       parentHash :  0x0000000000000000000000000000000000000000000000000000000000000000 ,\n       extraData :  0x ,\n       gasLimit :  0x2fefd8 \n}", 
            "title": "eth (C++ client) {#custom-networks-eth}"
        }, 
        {
            "location": "/network/test-networks/#geth-go-client_1", 
            "text": "You either pre-generate or mine your own ether on a private testnet. It\nis a much more cost effective way of trying out Ethereum and you can\navoid having to mine or find Morden test ether.  The things that are required to specify in a private chain are:  :   -   Custom Genesis File\n    -   Custom Data Directory\n    -   Custom NetworkID\n    -   (Recommended) Disable Node Discovery", 
            "title": "geth (Go client)"
        }, 
        {
            "location": "/network/test-networks/#the-genesis-file", 
            "text": "The genesis block is the start of the blockchain - the first block,\nblock 0, and the only block that does not point to a predecessor block.\nThe protocol ensures that no other node will agree with your version of\nthe blockchain unless they have the same genesis block, so you can make\nas many private testnet blockchains as you\\'d like!  [CustomGenesis.json]{role=\"file\"}  ``` {.sourceCode .JSON}\n{\n    \"config\": { }, \"nonce\": \"0x0000000000000042\",     \"timestamp\": \"0x0\",\n    \"parentHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n    \"extraData\": \"0x00\",     \"gasLimit\": \"0x8000000\",     \"difficulty\": \"0x400\",\n    \"mixhash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n    \"coinbase\": \"0x3333333333333333333333333333333333333333\",     \"alloc\": {     }\n} Save a file called [CustomGenesis.json]{role= file }. You will reference\nthis when starting your geth node using the following command:\n\n`geth init /path/to/CustomGenesis.json`\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\nBy default geth will use the same directory for network related files as\nfor the public mainnet. Thus you are advised to set a custom `--datadir`\nto keep the public network\\ s chaindata from bing reset.\n:::\n\n### Command line parameters for private network\n\nThere are some command line options (also called  flags ) that are\nnecessary in order to make sure that your network is private. We already\ncovered the genesis flag, but we need a few more. Note that all of the\ncommands below are to be used in the geth Ethereum client.\n\n`--nodiscover`\n\nUse this to make sure that your node is not discoverable by people who\ndo not manually add you. Otherwise, there is a chance that your node may\nbe inadvertently added to a stranger\\ s blockchain if they have the same\ngenesis file and network id.\n\n`--maxpeers 0`\n\nUse maxpeers 0 if you do not want anyone else connecting to your test\nchain. Alternatively, you can adjust this number if you know exactly how\nmany peers you want connecting to your node.\n\n`--rpc`\n\nThis will enable RPC interface on your node. This is generally enabled\nby default in Geth.\n\n`--rpcapi  db,eth,net,web3 `\n\nThis dictates what APIs that are allowed to be accessed over RPC. By\ndefault, Geth enables the web3 interface over RPC.\n\n**IMPORTANT: Please note that offering an API over the RPC/IPC interface\nwill give everyone access to the API who can access this interface (e.g.\ndapp\\ s). Be careful which API\\ s you enable. By default geth enables\nall API\\ s over the IPC interface and only the db,eth,net and web3\nAPI\\ s over the RPC interface.**\n\n`--rpcport  8080 `\n\nChange 8000 to any port that is open on your network. The default for\ngeth is 8080.\n\n`--rpccorsdomain  http://chriseth.github.io/browser-solidity/ `\n\nThis dictates what URLs can connect to your node in order to perform RPC\nclient tasks. Be very careful with this and type a specific URL rather\nthan the wildcard (\\*) which would allow any URL to connect to your RPC\ninstance.\n\n`--datadir  /home/TestChain1 `\n\nThis is the data directory that your private chain data will be stored\nin (under the [nubits]{role= file } . Choose a location that is separate\nfrom your public Ethereum chain folder.\n\n`--port  30303 `\n\nThis is the \\ network listening port\\ , which you will use to connect\nwith other peers manually.\n\n`--identity  TestnetMainNode `\n\nThis will set up an identity for your node so it can be identified more\neasily in a list of peers. Here is an example of how these identities\nshow up on the network.\n\n### Launching `geth`\n\nAfter you have created your custom genesis block JSON file and created a\ndirectory for your blockchain data, type the following command into your\nconsole that has access to geth:\n\n``` {.sourceCode .Console}\ngeth --identity  MyNodeName  --rpc --rpcport  8080  --rpccorsdomain  *  --datadir  C:\\chains\\TestChain1  --port  30303  --nodiscover --rpcapi  db,eth,net,web3  --networkid 1999 init /path/to/CustomGenesis.json  ::: {.note}\n::: {.admonition-title}\nNote\n:::  Please change the flags to match your custom settings.\n:::  This will initialize your genesis block. To interact with geth through\nthe console enter:  ``` {.sourceCode .Console}\ngeth --identity \"MyNodeName\" --rpc --rpcport \"8080\" --rpccorsdomain \"*\" --datadir \"C:\\chains\\TestChain1\" --port \"30303\" --nodiscover --rpcapi \"db,eth,net,web3\" --networkid 1999 console You will need to start your geth instance with your custom chain command\nevery time you want to access your custom chain. If you just type\n\\ geth\\  in your console, it will not remember all of the flags you have\nset.\n\nThe full list of methods available through the javascript console is\navailable on [the geth wiki on\ngithub](https://github.com/ethereum/go-ethereum/wiki/JavaScript-Console)\n\nIf you already have a geth node running, you can attach another geth\ninstance to it using:\n\n``` {.sourceCode .Console}\ngeth attach  Now you\\'ll need to initialize a new account on the testnest, and set it\nas your etherbase (the address that will receive mining rewards).  In the javascript console type  ``` {.sourceCode .Console}\npersonal.newAccount(\"password\") ::: {.note}\n::: {.admonition-title}\nNote\n:::\n\nReplace with the password of your choice\n:::\n\nNow we\\ ll set it as the etherbase:\n\n``` {.sourceCode .Console}\nminer.setEtherbase(personal.listAccounts[0])  If successful, the console will print \\\"true\\\"  Finally, you are ready to start mining test ether:  ``` {.sourceCode .Console}\nminer.start() ### Pre-allocating ether to your account\n\nA difficulty of \\ 0x400\\  allows you to mine Ether very quickly on your\nprivate testnet chain. If you create your chain and start mining, you\nshould have hundreds of ether in a matter of minutes which is way more\nthan enough to test transactions on your network. If you would still\nlike to pre-allocate Ether to your account, you will need to:\n\n1.  Create a new Ethereum account after you create your private chain\n2.  Copy your new account address\n3.  Add the following command to your Custom\\_Genesis.json file:\n\n``` {.sourceCode .Javascript} alloc :\n{\n     your account address e.g. 0x1fb891f92eb557f4d688463d0d7c560552263b5a :\n    {  balance :  20000000000000000000  }\n}  ::: {.note}\n::: {.admonition-title}\nNote\n:::  Replace  0x1fb891f92eb557f4d688463d0d7c560552263b5a  with your account\naddress.\n:::  Save your genesis file and rerun your private chain command. Once geth\nis fully loaded, close it by .  We want to assign an address to the variable  primary  and check its\nbalance.  Run the command  geth account list  in your terminal to see what account\n# your new address was assigned.  ``` {.sourceCode .Console}   geth account list\nAccount #0: {d1ade25ccd3d550a7eb532ac759cac7be09c2719}\nAccount #1: {da65665fc30803cb1fb7e6d86691e20b1826dee0}\nAccount #2: {e470b1a7d2c9c5c6f03bbaa8fa20db6d404a0c32}\nAccount #3: {f4dd5c3794f1fd0cdc0327a83aa472609c806e99} Take note of which account \\# is the one that you pre-allocated ether\nto. Alternatively, you can launch the console with `geth console` (keep\nthe same parameters as when you launched `geth` first). Once the prompt\nappears, type\n\n``` {.sourceCode .Console}  eth.accounts   This will return the array of account addresses you possess.  ``` {.sourceCode .Console}   primary = eth.accounts[0] ::: {.note}\n::: {.admonition-title}\nNote\n:::\n\nReplace `0` with your account\\ s index. This console command should\nreturn your primary Ethereum address.\n:::\n\nType the following command:\n\n``` {.sourceCode .Console}  balance = web3.fromWei(eth.getBalance(primary),  ether );   This should return  7.5  indicating you have that much ether in your\naccount. The reason we had to put such a large number in the alloc\nsection of your genesis file is because the \\\"balance\\\" field takes a\nnumber in wei which is the smallest denomination of the Ethereum\ncurrency ether (see _Ether).   https://www.reddit.com/r/ethereum/comments/3kdnus/question_about_private_chain_mining_dont_upvote/", 
            "title": "The genesis file"
        }, 
        {
            "location": "/mining/", 
            "text": "\u6316\u77ff\u7b80\u4ecb\n\n\n\u6316\u6398\u8fd9\u4e2a\u8bcd\u6e90\u4e8e\u52a0\u5bc6\u8d27\u5e01\u7684\u9ec4\u91d1\u6bd4\u55bb\u3002\n\u9ec4\u91d1\u6216\u8d35\u91d1\u5c5e\u7a00\u7f3a\uff0c\u6570\u5b57\u4ee4\u724c\u4e5f\u662f\u5982\u6b64\uff0c\u589e\u52a0\u603b\u91cf\u7684\u552f\u4e00\u9014\u5f84\u662f\u91c7\u77ff\u3002\n\u8fd9\u5728\u4ee5\u592a\u574a\u4e0a\u4e5f\u662f\u9002\u7528\u7684\uff0c\u53d1\u5e03\u540e\u552f\u4e00\u7684\u53d1\u884c\u6a21\u5f0f\u662f\u901a\u8fc7\u91c7\u77ff\u3002\n\u4e0e\u8fd9\u4e9b\u4f8b\u5b50\u4e0d\u540c\u7684\u662f\uff0c\u6316\u77ff\u4e5f\u662f\u901a\u8fc7\u5728\u533a\u5757\u94fe\u4e2d\u521b\u5efa\u3001\u9a8c\u8bc1\u3001\u53d1\u5e03\u548c\u4f20\u64ad\u533a\u5757\u6765\u4fdd\u62a4\u7f51\u7edc\u7684\u65b9\u6cd5\u3002\n\n\n\n\n\u6316\u6398\u4ee5\u592a\u5e01 = \u4fdd\u62a4\u7f51\u7edc = \u9a8c\u8bc1\u8ba1\u7b97\n\n\n\n\n\u4ec0\u4e48\u662f\u6316\u77ff\uff1f\n\n\n\u4ee5\u592a\u574a\u548c\u6240\u6709\u533a\u5757\u94fe\u6280\u672f\u4e00\u6837\uff0c\u91c7\u7528\u6fc0\u52b1\u9a71\u52a8\u7684\u5b89\u5168\u6a21\u5f0f\u3002\n\u5171\u8bc6\u662f\u57fa\u4e8e\u9009\u62e9\u603b\u96be\u5ea6\u6700\u9ad8\u7684\u533a\u5757\u3002\n\u77ff\u5de5\u751f\u4ea7\u5176\u4ed6\u4eba\u68c0\u67e5\u6709\u6548\u6027\u7684\u5757\u3002\n\u5728\u5176\u4ed6\u683c\u5f0f\u826f\u597d\u7684\u6807\u51c6\u4e2d\uff0c \u4e00\u4e2a\u5757\u53ea\u6709\u5728\u5305\u542b\u7ed9\u5b9a\n\u96be\u5ea6\n\u7684\u5de5\u4f5c\u8bc1\u660e*(PoW)\u7684\u60c5\u51b5\u4e0b\u624d\u662f\u6709\u6548\u7684\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5728\u4ee5\u592a\u574a\u5b81\u9759\u7684\u91cc\u7a0b\u7891\uff0c \u8fd9\u5f88\u53ef\u80fd\u4f1a\u88ab\u4e00\u4e2a (\u67e5\u770b\n\u6743\u76ca\u8bc1\u660e\u6a21\u578b\n).\n\n\n\u4ee5\u592a\u574a\u533a\u5757\u94fe\u5728\u5f88\u591a\u65b9\u9762\u4e0e\u6bd4\u7279\u5e01\u533a\u5757\u94fe\u76f8\u4f3c\uff0c\u4e0d\u8fc7\u5b83\u786e\u5b9e\u6709\u4e00\u4e9b\u533a\u522b\u3002\n\u4ee5\u592a\u574a\u548c\u6bd4\u7279\u5e01\u5728\u533a\u5757\u94fe\u67b6\u6784\u65b9\u9762\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff0c \u4e0d\u50cf\u6bd4\u7279\u5e01,\u4ee5\u592a\u574a\u5757\u5305\u542b\u4e8b\u52a1\u5217\u8868\u548c\u6700\u8fd1\u72b6\u6001\u7684\u526f\u672c (merkle patricia trie\u7f16\u7801\u72b6\u6001\u7684\u6839\u6563\u5217\u66f4\u52a0\u7cbe\u786e).\n\u9664\u6b64\u4e4b\u5916, \u53e6\u5916\u4e24\u4e2a\u503c, \u5757\u53f7\u548c\u96be\u5ea6, \u4e5f\u5b58\u50a8\u5728\u5757\u4e2d.\n\n\n\u4f7f\u7528\u7684\u5de5\u4f5c\u8bc1\u660e\u7b97\u6cd5\u88ab\u79f0\u4e3a\nEthash\n(\nDagger-Hashimoto\u7b97\u6cd5\n\u7684\u4fee\u6539\u7248\u672c)\u5e76\u4e14\u6d89\u53ca\u627e\u5230\u4e00\u4e2a\nnonce\n\u8f93\u5165\u7ed9\u7b97\u6cd5\uff0c\u4ee5\u4fbf\u7ed3\u679c\u4f4e\u4e8e\u4e00\u5b9a\u7684\u96be\u5ea6\u9608\u503c\u3002\nPoW\u7b97\u6cd5\u7684\u8981\u70b9\u5728\u4e8e\u6ca1\u6709\u66f4\u597d\u7684\u7b56\u7565\u53bb\u5bfb\u627e\u8fd9\u6837\u7684\u968f\u673a\u6570\uff0c\u800c\u4e0d\u662f\u5217\u4e3e\u53ef\u80fd\u6027\uff0c\u800c\u9a8c\u8bc1\u89e3\u51b3\u65b9\u6848\u662f\u5fae\u4e0d\u8db3\u9053\u7684\u3002\n\u7531\u4e8e\u8f93\u51fa\u5177\u6709\u5747\u5300\u5206\u5e03(\u56e0\u4e3a\u5b83\u4eec\u662f\u5e94\u7528\u6563\u5217\u51fd\u6570\u7684\u7ed3\u679c),\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1,\u5173\u95ed,\u627e\u5230\u8fd9\u79cd\u968f\u673a\u6570\u6240\u9700\u7684\u65f6\u95f4\u53d6\u51b3\u4e8e\u96be\u5ea6\u9608\u503c.\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u64cd\u4f5c\u96be\u5ea6\u6765\u63a7\u5236\u67e5\u627e\u65b0\u5757\u7684\u65f6\u95f4\u3002\n\n\n\u6309\u7167\u534f\u8bae\u89c4\u5b9a, \u96be\u5ea6\u52a8\u6001\u5730\u8c03\u6574\uff0c\u5e73\u5747\u6bcf\u969415\u79d2\u7531\u6574\u4e2a\u7f51\u7edc\u4ea7\u751f\u4e00\u4e2a\u5757.\n\u6211\u4eec\u8bf4\u7f51\u7edc\u4ea7\u751f\u4e00\u4e2a\n 15\u79d2\u7684\u5757\u65f6\u95f4\n\u7684\u533a\u5757\u94fe\u3002\n\u8fd9\u79cd\u201c\u5fc3\u8df3\u201d\u57fa\u672c\u4e0a\u662f\u5bf9\u7cfb\u7edf\u72b6\u6001\u7684\u540c\u6b65\u52a0\u4ee5\u6807\u8bb0\uff0c\u5e76\u4e14\u4fdd\u8bc1\uff1a\u9664\u975e\u653b\u51fb\u8005\u62e5\u6709\u8d85\u8fc7\u4e00\u534a\u7684\u7f51\u7edc\u6316\u6398\u80fd\u529b\uff0c\u5426\u5219\u4e0d\u53ef\u80fd\u7ef4\u6301\u5206\u53c9(\u4ee5\u5141\u8bb8\u53cc\u91cd\u82b1\u8d39)\u6216\u8005\u6076\u610f\u884c\u4e3a\u8005\u91cd\u5199\u5386\u53f2\u8bb0\u5f55(\u8fd9\u5c31\u662f\u6240\u8c13\u7684\n ,51\uff05\u653b\u51fb\n)\u3002\n\n\n\u53c2\u4e0e\u7f51\u7edc\u7684\u4efb\u4f55\u8282\u70b9\u90fd\u53ef\u4ee5\u662f\u77ff\u5de5\uff0c\u4ed6\u4eec\u9884\u671f\u7684\u5f00\u91c7\u6536\u5165\u5c06\u4e0e\u4ed6\u4eec\u7684(\u76f8\u5bf9)\u91c7\u77ff\u80fd\u529b\u6216\u8005\n\u54c8\u5e0c\u7387\n\u6210\u6b63\u6bd4\uff0c\u5373\u6bcf\u79d2\u7531\u7f51\u7edc\u7684\u603b\u6563\u5217\u7387\u6807\u51c6\u5316\u7684\u968f\u673a\u6570\u3002\n\n\nEthash PoW \n\u5185\u5b58\u786c\n\uff0c\u4f7f\u5176\n ASIC\u8010\n\u3002\n\u8bb0\u5fc6\u786c\u5ea6\u662f\u901a\u8fc7\u5de5\u4f5c\u8bc1\u660e\u7b97\u6cd5\u5b9e\u73b0\u7684\uff0c\u8be5\u7b97\u6cd5\u8981\u6c42\u6839\u636e\u968f\u673a\u6570\u9009\u62e9\u56fa\u5b9a\u8d44\u6e90\u7684\u5b50\u96c6\n\u8fd9\u4e2a\u8d44\u6e90(\u51e0\u4e2aGB\u5927\u5c0f\u7684\u6570\u636e)\u88ab\u79f0\u4e3a\n DAG \n\u3002\n\u6bcf\u4e2a30000\u5757\u7684\nDAG\n\u662f\u5b8c\u5168\u4e0d\u540c\u7684\uff0c\u8fd9\u4e2a125\u5c0f\u65f6\u7684\u7a97\u53e3\u88ab\u79f0\u4e3a\n epoch \n(\u5927\u6982\u4e3a5.2\u5929)\uff0c\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u751f\u6210,\u3002\n\u7531\u4e8eDAG\u53ea\u53d6\u51b3\u4e8e\u5757\u7684\u9ad8\u5ea6\uff0c\u6240\u4ee5\u53ef\u4ee5\u9884\u751f\u6210\uff0c\u4f46\u5982\u679c\u4e0d\u662f\uff0c\u5ba2\u6237\u7aef\u9700\u8981\u7b49\u5230\u8fd9\u4e2a\u8fc7\u7a0b\u7ed3\u675f\u624d\u4ea7\u751f\u4e00\u4e2a\u5757\u3002\n\u5982\u679c\u5ba2\u6237\u7aef\u6ca1\u6709\u63d0\u524d\u9884\u751f\u6210\u548c\u7f13\u5b58DAG\uff0c\u5219\u7f51\u7edc\u5728\u6bcf\u4e2a\u5386\u5143\u8f6c\u6362\u4e2d\u53ef\u80fd\u7ecf\u5386\u5927\u91cf\u7684\u5757\u5ef6\u8fdf\u3002\n\u8bf7\u6ce8\u610f\uff0cDAG\u4e0d\u9700\u8981\u751f\u6210\u7528\u4e8e\u9a8c\u8bc1PoW\uff0c\u5b9e\u8d28\u4e0a\u5141\u8bb8\u4f7f\u7528\u4f4eCPU\u548c\u5c0f\u5185\u5b58\u8fdb\u884c\u9a8c\u8bc1\u3002\n\n\n\u4f5c\u4e3a\u7279\u6b8a\u60c5\u51b5\uff0c\u5f53\u60a8\u4ece\u5934\u5f00\u59cb\u521b\u5efa\u8282\u70b9\u65f6\uff0c\u53ea\u6709\u5728\u4e3a\u5f53\u524d\u65f6\u671f\u6784\u5efaDAG\u540e\u624d\u4f1a\u5f00\u59cb\u6316\u6398\u3002\n\n\n\u6316\u6398\u5956\u52b1\n\n\n\u83b7\u80dc\u5757\u7684\u6210\u529fPoW\u77ff\u5de5\u5c06\u6536\u5230\uff1a\n\n\n\n\n\u201c\u83b7\u80dc\u201d\u533a\u5757\u7684\u9759\u6001\u533a\u5757\u5956\u52b1\uff0c\u5305\u542b5.0\u4e2a\u4ee5\u592a\u7f51\u5e01\n\n\n\u71c3\u6599\u6d88\u8017\u7684\u6210\u672c - \u4f9d\u8d56\u4e8e\u5f53\u524d\u71c3\u6599\u4ef7\u683c\u7684\u4ee5\u592a\u5e01\u91cf\n\n\n\u4f5c\u4e3a\u5757\u7684\u4e00\u90e8\u5206\u5305\u62ec\u53d4\u53d4\u7684\u989d\u5916\u5956\u52b1, \u5305\u62ec\u6bcf\u540d\u53d4\u53d4\u989d\u59161/32\u7684\u5f62\u5f0f\n\n\n\n\n\u7531\u83b7\u5956\u77ff\u5de5\u63d0\u4ea4\u7684\u533a\u5757\u5185\u6240\u6709\u4ea4\u6613\u6267\u884c\u6240\u6d88\u8017\u7684\u6240\u6709\u71c3\u6599\u7531\u6bcf\u7b14\u4ea4\u6613\u7684\u53d1\u4ef6\u4eba\u652f\u4ed8\u3002\n\u6240\u4ea7\u751f\u7684\u71c3\u6599\u6210\u672c\u4f5c\u4e3a\u5171\u8bc6\u534f\u8bae\u7684\u4e00\u90e8\u5206\u8bb0\u5165\u77ff\u5de5\u8d26\u6237\u3002\n\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u9884\u8ba1\u8fd9\u4e9b\u5c06\u4f1a\u4f7f\u9759\u6001\u533a\u5757\u5956\u52b1\u53d8\u5f97\u66f4\u52a0\u6e3a\u5c0f\u3002\n\n\n\u53d4\u53d4\n\u662f\u9648\u65e7\u7684\u5757\uff0c\u5373\u7236\u6bcd\u662f\u5305\u62ec\u5757\u7684\u7956\u5148\uff08\u6700\u591a6\u5757\uff09\u3002\n\u4e3a\u4e86\u62b5\u6d88\u7f51\u7edc\u6ede\u540e\u5bf9\u91c7\u77ff\u5956\u52b1\u5206\u6563\u7684\u5f71\u54cd\uff0c\u5956\u52b1\u6709\u6548\u7684\u53d4\u53d4, \u4ece\u800c\u589e\u52a0\u5b89\u5168\u6027 (\u8fd9\u88ab\u79f0\u4e3aGHOST\u534f\u8bae).\n\u88ab\u6210\u529f\u7684PoW\u77ff\u5de5\u7ec4\u6210\u7684\u8857\u533a\u4e2d\u7684\u53d4\u53d4\u83b7\u5f977/8\u7684\u9759\u6001\u533a\u5757\u5956\u52b1\uff08= 4.375\u4ee5\u592a\uff09\u3002\n\u6bcf\u4e2a\u5757\u6700\u591a\u5141\u8bb82\u4e2a\u53d4\u53d4\u3002\n\n\n\n\n\n\n\u5728reddit\u4e0a\u7684\u53d4\u53d4ELI5\n\n\n\u8bba\u575b\u7ebf\u7a0b\u89e3\u91ca\u53d4\u53d4\n\n\n\n\n\n\n\u91c7\u77ff\u6210\u529f\u53d6\u51b3\u4e8e\u8bbe\u5b9a\u7684\u5757\u96be\u5ea6.\n\u5757\u96be\u5ea6\u52a8\u6001\u8c03\u6574\u6bcf\u4e2a\u5757\uff0c\u4ee5\u8c03\u8282\u7f51\u7edc\u54c8\u5e0c\u529f\u7387\u4ea7\u751f\u4e00\u4e2a12\u79d2\u7684\u963b\u585e\u65f6\u95f4\n\u56e0\u6b64\uff0c\u627e\u5230\u4e00\u4e2a\u5757\u7684\u673a\u4f1a\u662f\u76f8\u5bf9\u4e8e\u54c8\u5e0c\u7387\u96be\u5ea6\u800c\u8a00\u7684\u3002\n\n\nEthash DAG\n\n\nEthash\u4f7f\u7528\nDAG\n(\u6709\u5411\u65e0\u73af\u56fe)\u4f5c\u4e3a\u5de5\u4f5c\u8bc1\u660e\u7b97\u6cd5, \u8fd9\u662f\u4e3a\u6bcf\u4e2a\nepoch\n\u751f\u6210\u7684, \u4e5f\u5c31\u662f\u8bf4\uff0c, \u6bcf30000\u5757 (125\u5c0f\u65f6\uff0c\u7ea65.2\u5929)\nDAG\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u751f\u6210\u5982\u679c\u5ba2\u6237\u7aef\u53ea\u6839\u636e\u9700\u8981\u751f\u6210\u5b83\uff0c\u5219\u5728\u53d1\u73b0\u65b0\u65f6\u4ee3\u7684\u7b2c\u4e00\u4e2a\u5757\u4e4b\u524d\uff0c\u60a8\u53ef\u80fd\u4f1a\u5728\u6bcf\u4e2a\u65f6\u4ee3\u8f6c\u6362\u4e2d\u770b\u5230\u5f88\u957f\u7684\u7b49\u5f85\u65f6\u95f4\u3002\n\u7136\u800c\uff0cDAG\u53ea\u53d6\u51b3\u4e8e\u5757\u53f7\uff0c\u56e0\u6b64\u53ef\u4ee5\u5e76\u4e14\u5e94\u8be5\u63d0\u524d\u8ba1\u7b97\u4ee5\u907f\u514d\u5728\u6bcf\u4e2a\u5386\u5143\u8f6c\u6362\u5904\u7684\u6f2b\u957f\u7684\u7b49\u5f85\u65f6\u95f4\ngeth\n\u548c\nethminer\n\u5b9e\u73b0\u81ea\u52a8DAG\u751f\u6210\uff0c\u5e76\u4e14\u4e00\u6b21\u7ef4\u6301\u4e24\u4e2aDAG,\u65f6\u4ee3\u8f6c\u6298\n\u5f53\u4ece\u63a7\u5236\u53f0\u63a7\u5236\u91c7\u77ff\u65f6\uff0c\u81ea\u52a8DAG\u751f\u6210\u88ab\u6253\u5f00\u548c\u5173\u95ed\n\u5982\u679c\u4f7f\u7528\n--mine\n\u9009\u9879\u542f\u52a8\ngeth\n\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e5f\u4f1a\u6253\u5f00\u3002\u8bf7\u6ce8\u610f\uff0c\u5ba2\u6237\u7aef\u5171\u4eab\u4e00\u4e2aDAG\u8d44\u6e90\uff0c\u6240\u4ee5\u5982\u679c\u60a8\u6b63\u5728\u8fd0\u884c\u4efb\u4f55\u5ba2\u6237\u7aef\u7684\u591a\u4e2a\u5b9e\u4f8b\uff0c\u8bf7\u786e\u4fdd\u5728\u6240\u6709\u5ba2\u6237\u7aef\u4e2d\u5173\u95ed\u81ea\u52a8DAG\u751f\u6210,\u4f46\u662f\u6709\u4e00\u4e2a\u4f8b\u5b50\u3002\n\n\n\u4e3a\u4ef2\u88c1\u8005\u751f\u6210DAG\n\n\ngeth makedag \nblock number\n \noutputdir\n\n\n\n\n\n\u4f8b\u5982\ngeth makedag 360000\u301c/ .ethash\n\u8bf7\u6ce8\u610f\uff0cethash\u4e3aDAG\u4f7f\u7528\n\u301c/ .ethash\n(Mac / Linux)\u6216\n\u301c/ AppData / Ethash\n(Windows)\uff0c\u4ee5\u4fbf\u5b83\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u5ba2\u6237\u7aef\u5b9e\u73b0\u4e4b\u95f4\u5171\u4eab,\u4ee5\u53ca\u591a\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u5b9e\u4f8b\u3002", 
            "title": "\u7b80\u4ecb"
        }, 
        {
            "location": "/mining/#_1", 
            "text": "\u6316\u6398\u8fd9\u4e2a\u8bcd\u6e90\u4e8e\u52a0\u5bc6\u8d27\u5e01\u7684\u9ec4\u91d1\u6bd4\u55bb\u3002\n\u9ec4\u91d1\u6216\u8d35\u91d1\u5c5e\u7a00\u7f3a\uff0c\u6570\u5b57\u4ee4\u724c\u4e5f\u662f\u5982\u6b64\uff0c\u589e\u52a0\u603b\u91cf\u7684\u552f\u4e00\u9014\u5f84\u662f\u91c7\u77ff\u3002\n\u8fd9\u5728\u4ee5\u592a\u574a\u4e0a\u4e5f\u662f\u9002\u7528\u7684\uff0c\u53d1\u5e03\u540e\u552f\u4e00\u7684\u53d1\u884c\u6a21\u5f0f\u662f\u901a\u8fc7\u91c7\u77ff\u3002\n\u4e0e\u8fd9\u4e9b\u4f8b\u5b50\u4e0d\u540c\u7684\u662f\uff0c\u6316\u77ff\u4e5f\u662f\u901a\u8fc7\u5728\u533a\u5757\u94fe\u4e2d\u521b\u5efa\u3001\u9a8c\u8bc1\u3001\u53d1\u5e03\u548c\u4f20\u64ad\u533a\u5757\u6765\u4fdd\u62a4\u7f51\u7edc\u7684\u65b9\u6cd5\u3002   \u6316\u6398\u4ee5\u592a\u5e01 = \u4fdd\u62a4\u7f51\u7edc = \u9a8c\u8bc1\u8ba1\u7b97", 
            "title": "\u6316\u77ff\u7b80\u4ecb"
        }, 
        {
            "location": "/mining/#_2", 
            "text": "\u4ee5\u592a\u574a\u548c\u6240\u6709\u533a\u5757\u94fe\u6280\u672f\u4e00\u6837\uff0c\u91c7\u7528\u6fc0\u52b1\u9a71\u52a8\u7684\u5b89\u5168\u6a21\u5f0f\u3002\n\u5171\u8bc6\u662f\u57fa\u4e8e\u9009\u62e9\u603b\u96be\u5ea6\u6700\u9ad8\u7684\u533a\u5757\u3002\n\u77ff\u5de5\u751f\u4ea7\u5176\u4ed6\u4eba\u68c0\u67e5\u6709\u6548\u6027\u7684\u5757\u3002\n\u5728\u5176\u4ed6\u683c\u5f0f\u826f\u597d\u7684\u6807\u51c6\u4e2d\uff0c \u4e00\u4e2a\u5757\u53ea\u6709\u5728\u5305\u542b\u7ed9\u5b9a \u96be\u5ea6 \u7684\u5de5\u4f5c\u8bc1\u660e*(PoW)\u7684\u60c5\u51b5\u4e0b\u624d\u662f\u6709\u6548\u7684\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5728\u4ee5\u592a\u574a\u5b81\u9759\u7684\u91cc\u7a0b\u7891\uff0c \u8fd9\u5f88\u53ef\u80fd\u4f1a\u88ab\u4e00\u4e2a (\u67e5\u770b \u6743\u76ca\u8bc1\u660e\u6a21\u578b ).  \u4ee5\u592a\u574a\u533a\u5757\u94fe\u5728\u5f88\u591a\u65b9\u9762\u4e0e\u6bd4\u7279\u5e01\u533a\u5757\u94fe\u76f8\u4f3c\uff0c\u4e0d\u8fc7\u5b83\u786e\u5b9e\u6709\u4e00\u4e9b\u533a\u522b\u3002\n\u4ee5\u592a\u574a\u548c\u6bd4\u7279\u5e01\u5728\u533a\u5757\u94fe\u67b6\u6784\u65b9\u9762\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff0c \u4e0d\u50cf\u6bd4\u7279\u5e01,\u4ee5\u592a\u574a\u5757\u5305\u542b\u4e8b\u52a1\u5217\u8868\u548c\u6700\u8fd1\u72b6\u6001\u7684\u526f\u672c (merkle patricia trie\u7f16\u7801\u72b6\u6001\u7684\u6839\u6563\u5217\u66f4\u52a0\u7cbe\u786e).\n\u9664\u6b64\u4e4b\u5916, \u53e6\u5916\u4e24\u4e2a\u503c, \u5757\u53f7\u548c\u96be\u5ea6, \u4e5f\u5b58\u50a8\u5728\u5757\u4e2d.  \u4f7f\u7528\u7684\u5de5\u4f5c\u8bc1\u660e\u7b97\u6cd5\u88ab\u79f0\u4e3a Ethash ( Dagger-Hashimoto\u7b97\u6cd5 \u7684\u4fee\u6539\u7248\u672c)\u5e76\u4e14\u6d89\u53ca\u627e\u5230\u4e00\u4e2a nonce \u8f93\u5165\u7ed9\u7b97\u6cd5\uff0c\u4ee5\u4fbf\u7ed3\u679c\u4f4e\u4e8e\u4e00\u5b9a\u7684\u96be\u5ea6\u9608\u503c\u3002\nPoW\u7b97\u6cd5\u7684\u8981\u70b9\u5728\u4e8e\u6ca1\u6709\u66f4\u597d\u7684\u7b56\u7565\u53bb\u5bfb\u627e\u8fd9\u6837\u7684\u968f\u673a\u6570\uff0c\u800c\u4e0d\u662f\u5217\u4e3e\u53ef\u80fd\u6027\uff0c\u800c\u9a8c\u8bc1\u89e3\u51b3\u65b9\u6848\u662f\u5fae\u4e0d\u8db3\u9053\u7684\u3002\n\u7531\u4e8e\u8f93\u51fa\u5177\u6709\u5747\u5300\u5206\u5e03(\u56e0\u4e3a\u5b83\u4eec\u662f\u5e94\u7528\u6563\u5217\u51fd\u6570\u7684\u7ed3\u679c),\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1,\u5173\u95ed,\u627e\u5230\u8fd9\u79cd\u968f\u673a\u6570\u6240\u9700\u7684\u65f6\u95f4\u53d6\u51b3\u4e8e\u96be\u5ea6\u9608\u503c.\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u64cd\u4f5c\u96be\u5ea6\u6765\u63a7\u5236\u67e5\u627e\u65b0\u5757\u7684\u65f6\u95f4\u3002  \u6309\u7167\u534f\u8bae\u89c4\u5b9a, \u96be\u5ea6\u52a8\u6001\u5730\u8c03\u6574\uff0c\u5e73\u5747\u6bcf\u969415\u79d2\u7531\u6574\u4e2a\u7f51\u7edc\u4ea7\u751f\u4e00\u4e2a\u5757.\n\u6211\u4eec\u8bf4\u7f51\u7edc\u4ea7\u751f\u4e00\u4e2a  15\u79d2\u7684\u5757\u65f6\u95f4 \u7684\u533a\u5757\u94fe\u3002\n\u8fd9\u79cd\u201c\u5fc3\u8df3\u201d\u57fa\u672c\u4e0a\u662f\u5bf9\u7cfb\u7edf\u72b6\u6001\u7684\u540c\u6b65\u52a0\u4ee5\u6807\u8bb0\uff0c\u5e76\u4e14\u4fdd\u8bc1\uff1a\u9664\u975e\u653b\u51fb\u8005\u62e5\u6709\u8d85\u8fc7\u4e00\u534a\u7684\u7f51\u7edc\u6316\u6398\u80fd\u529b\uff0c\u5426\u5219\u4e0d\u53ef\u80fd\u7ef4\u6301\u5206\u53c9(\u4ee5\u5141\u8bb8\u53cc\u91cd\u82b1\u8d39)\u6216\u8005\u6076\u610f\u884c\u4e3a\u8005\u91cd\u5199\u5386\u53f2\u8bb0\u5f55(\u8fd9\u5c31\u662f\u6240\u8c13\u7684  ,51\uff05\u653b\u51fb )\u3002  \u53c2\u4e0e\u7f51\u7edc\u7684\u4efb\u4f55\u8282\u70b9\u90fd\u53ef\u4ee5\u662f\u77ff\u5de5\uff0c\u4ed6\u4eec\u9884\u671f\u7684\u5f00\u91c7\u6536\u5165\u5c06\u4e0e\u4ed6\u4eec\u7684(\u76f8\u5bf9)\u91c7\u77ff\u80fd\u529b\u6216\u8005 \u54c8\u5e0c\u7387 \u6210\u6b63\u6bd4\uff0c\u5373\u6bcf\u79d2\u7531\u7f51\u7edc\u7684\u603b\u6563\u5217\u7387\u6807\u51c6\u5316\u7684\u968f\u673a\u6570\u3002  Ethash PoW  \u5185\u5b58\u786c \uff0c\u4f7f\u5176  ASIC\u8010 \u3002\n\u8bb0\u5fc6\u786c\u5ea6\u662f\u901a\u8fc7\u5de5\u4f5c\u8bc1\u660e\u7b97\u6cd5\u5b9e\u73b0\u7684\uff0c\u8be5\u7b97\u6cd5\u8981\u6c42\u6839\u636e\u968f\u673a\u6570\u9009\u62e9\u56fa\u5b9a\u8d44\u6e90\u7684\u5b50\u96c6\n\u8fd9\u4e2a\u8d44\u6e90(\u51e0\u4e2aGB\u5927\u5c0f\u7684\u6570\u636e)\u88ab\u79f0\u4e3a  DAG  \u3002\n\u6bcf\u4e2a30000\u5757\u7684 DAG \u662f\u5b8c\u5168\u4e0d\u540c\u7684\uff0c\u8fd9\u4e2a125\u5c0f\u65f6\u7684\u7a97\u53e3\u88ab\u79f0\u4e3a  epoch  (\u5927\u6982\u4e3a5.2\u5929)\uff0c\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u751f\u6210,\u3002\n\u7531\u4e8eDAG\u53ea\u53d6\u51b3\u4e8e\u5757\u7684\u9ad8\u5ea6\uff0c\u6240\u4ee5\u53ef\u4ee5\u9884\u751f\u6210\uff0c\u4f46\u5982\u679c\u4e0d\u662f\uff0c\u5ba2\u6237\u7aef\u9700\u8981\u7b49\u5230\u8fd9\u4e2a\u8fc7\u7a0b\u7ed3\u675f\u624d\u4ea7\u751f\u4e00\u4e2a\u5757\u3002\n\u5982\u679c\u5ba2\u6237\u7aef\u6ca1\u6709\u63d0\u524d\u9884\u751f\u6210\u548c\u7f13\u5b58DAG\uff0c\u5219\u7f51\u7edc\u5728\u6bcf\u4e2a\u5386\u5143\u8f6c\u6362\u4e2d\u53ef\u80fd\u7ecf\u5386\u5927\u91cf\u7684\u5757\u5ef6\u8fdf\u3002\n\u8bf7\u6ce8\u610f\uff0cDAG\u4e0d\u9700\u8981\u751f\u6210\u7528\u4e8e\u9a8c\u8bc1PoW\uff0c\u5b9e\u8d28\u4e0a\u5141\u8bb8\u4f7f\u7528\u4f4eCPU\u548c\u5c0f\u5185\u5b58\u8fdb\u884c\u9a8c\u8bc1\u3002  \u4f5c\u4e3a\u7279\u6b8a\u60c5\u51b5\uff0c\u5f53\u60a8\u4ece\u5934\u5f00\u59cb\u521b\u5efa\u8282\u70b9\u65f6\uff0c\u53ea\u6709\u5728\u4e3a\u5f53\u524d\u65f6\u671f\u6784\u5efaDAG\u540e\u624d\u4f1a\u5f00\u59cb\u6316\u6398\u3002", 
            "title": "\u4ec0\u4e48\u662f\u6316\u77ff\uff1f"
        }, 
        {
            "location": "/mining/#_3", 
            "text": "\u83b7\u80dc\u5757\u7684\u6210\u529fPoW\u77ff\u5de5\u5c06\u6536\u5230\uff1a   \u201c\u83b7\u80dc\u201d\u533a\u5757\u7684\u9759\u6001\u533a\u5757\u5956\u52b1\uff0c\u5305\u542b5.0\u4e2a\u4ee5\u592a\u7f51\u5e01  \u71c3\u6599\u6d88\u8017\u7684\u6210\u672c - \u4f9d\u8d56\u4e8e\u5f53\u524d\u71c3\u6599\u4ef7\u683c\u7684\u4ee5\u592a\u5e01\u91cf  \u4f5c\u4e3a\u5757\u7684\u4e00\u90e8\u5206\u5305\u62ec\u53d4\u53d4\u7684\u989d\u5916\u5956\u52b1, \u5305\u62ec\u6bcf\u540d\u53d4\u53d4\u989d\u59161/32\u7684\u5f62\u5f0f   \u7531\u83b7\u5956\u77ff\u5de5\u63d0\u4ea4\u7684\u533a\u5757\u5185\u6240\u6709\u4ea4\u6613\u6267\u884c\u6240\u6d88\u8017\u7684\u6240\u6709\u71c3\u6599\u7531\u6bcf\u7b14\u4ea4\u6613\u7684\u53d1\u4ef6\u4eba\u652f\u4ed8\u3002\n\u6240\u4ea7\u751f\u7684\u71c3\u6599\u6210\u672c\u4f5c\u4e3a\u5171\u8bc6\u534f\u8bae\u7684\u4e00\u90e8\u5206\u8bb0\u5165\u77ff\u5de5\u8d26\u6237\u3002\n\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u9884\u8ba1\u8fd9\u4e9b\u5c06\u4f1a\u4f7f\u9759\u6001\u533a\u5757\u5956\u52b1\u53d8\u5f97\u66f4\u52a0\u6e3a\u5c0f\u3002  \u53d4\u53d4 \u662f\u9648\u65e7\u7684\u5757\uff0c\u5373\u7236\u6bcd\u662f\u5305\u62ec\u5757\u7684\u7956\u5148\uff08\u6700\u591a6\u5757\uff09\u3002\n\u4e3a\u4e86\u62b5\u6d88\u7f51\u7edc\u6ede\u540e\u5bf9\u91c7\u77ff\u5956\u52b1\u5206\u6563\u7684\u5f71\u54cd\uff0c\u5956\u52b1\u6709\u6548\u7684\u53d4\u53d4, \u4ece\u800c\u589e\u52a0\u5b89\u5168\u6027 (\u8fd9\u88ab\u79f0\u4e3aGHOST\u534f\u8bae).\n\u88ab\u6210\u529f\u7684PoW\u77ff\u5de5\u7ec4\u6210\u7684\u8857\u533a\u4e2d\u7684\u53d4\u53d4\u83b7\u5f977/8\u7684\u9759\u6001\u533a\u5757\u5956\u52b1\uff08= 4.375\u4ee5\u592a\uff09\u3002\n\u6bcf\u4e2a\u5757\u6700\u591a\u5141\u8bb82\u4e2a\u53d4\u53d4\u3002    \u5728reddit\u4e0a\u7684\u53d4\u53d4ELI5  \u8bba\u575b\u7ebf\u7a0b\u89e3\u91ca\u53d4\u53d4    \u91c7\u77ff\u6210\u529f\u53d6\u51b3\u4e8e\u8bbe\u5b9a\u7684\u5757\u96be\u5ea6.\n\u5757\u96be\u5ea6\u52a8\u6001\u8c03\u6574\u6bcf\u4e2a\u5757\uff0c\u4ee5\u8c03\u8282\u7f51\u7edc\u54c8\u5e0c\u529f\u7387\u4ea7\u751f\u4e00\u4e2a12\u79d2\u7684\u963b\u585e\u65f6\u95f4\n\u56e0\u6b64\uff0c\u627e\u5230\u4e00\u4e2a\u5757\u7684\u673a\u4f1a\u662f\u76f8\u5bf9\u4e8e\u54c8\u5e0c\u7387\u96be\u5ea6\u800c\u8a00\u7684\u3002", 
            "title": "\u6316\u6398\u5956\u52b1"
        }, 
        {
            "location": "/mining/#ethash-dag", 
            "text": "Ethash\u4f7f\u7528 DAG (\u6709\u5411\u65e0\u73af\u56fe)\u4f5c\u4e3a\u5de5\u4f5c\u8bc1\u660e\u7b97\u6cd5, \u8fd9\u662f\u4e3a\u6bcf\u4e2a epoch \u751f\u6210\u7684, \u4e5f\u5c31\u662f\u8bf4\uff0c, \u6bcf30000\u5757 (125\u5c0f\u65f6\uff0c\u7ea65.2\u5929)\nDAG\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u751f\u6210\u5982\u679c\u5ba2\u6237\u7aef\u53ea\u6839\u636e\u9700\u8981\u751f\u6210\u5b83\uff0c\u5219\u5728\u53d1\u73b0\u65b0\u65f6\u4ee3\u7684\u7b2c\u4e00\u4e2a\u5757\u4e4b\u524d\uff0c\u60a8\u53ef\u80fd\u4f1a\u5728\u6bcf\u4e2a\u65f6\u4ee3\u8f6c\u6362\u4e2d\u770b\u5230\u5f88\u957f\u7684\u7b49\u5f85\u65f6\u95f4\u3002\n\u7136\u800c\uff0cDAG\u53ea\u53d6\u51b3\u4e8e\u5757\u53f7\uff0c\u56e0\u6b64\u53ef\u4ee5\u5e76\u4e14\u5e94\u8be5\u63d0\u524d\u8ba1\u7b97\u4ee5\u907f\u514d\u5728\u6bcf\u4e2a\u5386\u5143\u8f6c\u6362\u5904\u7684\u6f2b\u957f\u7684\u7b49\u5f85\u65f6\u95f4 geth \u548c ethminer \u5b9e\u73b0\u81ea\u52a8DAG\u751f\u6210\uff0c\u5e76\u4e14\u4e00\u6b21\u7ef4\u6301\u4e24\u4e2aDAG,\u65f6\u4ee3\u8f6c\u6298\n\u5f53\u4ece\u63a7\u5236\u53f0\u63a7\u5236\u91c7\u77ff\u65f6\uff0c\u81ea\u52a8DAG\u751f\u6210\u88ab\u6253\u5f00\u548c\u5173\u95ed\n\u5982\u679c\u4f7f\u7528 --mine \u9009\u9879\u542f\u52a8 geth \uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e5f\u4f1a\u6253\u5f00\u3002\u8bf7\u6ce8\u610f\uff0c\u5ba2\u6237\u7aef\u5171\u4eab\u4e00\u4e2aDAG\u8d44\u6e90\uff0c\u6240\u4ee5\u5982\u679c\u60a8\u6b63\u5728\u8fd0\u884c\u4efb\u4f55\u5ba2\u6237\u7aef\u7684\u591a\u4e2a\u5b9e\u4f8b\uff0c\u8bf7\u786e\u4fdd\u5728\u6240\u6709\u5ba2\u6237\u7aef\u4e2d\u5173\u95ed\u81ea\u52a8DAG\u751f\u6210,\u4f46\u662f\u6709\u4e00\u4e2a\u4f8b\u5b50\u3002  \u4e3a\u4ef2\u88c1\u8005\u751f\u6210DAG  geth makedag  block number   outputdir   \u4f8b\u5982 geth makedag 360000\u301c/ .ethash \u8bf7\u6ce8\u610f\uff0cethash\u4e3aDAG\u4f7f\u7528 \u301c/ .ethash (Mac / Linux)\u6216 \u301c/ AppData / Ethash (Windows)\uff0c\u4ee5\u4fbf\u5b83\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u5ba2\u6237\u7aef\u5b9e\u73b0\u4e4b\u95f4\u5171\u4eab,\u4ee5\u53ca\u591a\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u5b9e\u4f8b\u3002", 
            "title": "Ethash DAG"
        }, 
        {
            "location": "/mining/algorithm/", 
            "text": "\u7b97\u6cd5\n\n\n\u6211\u4eec\u7684\u7b97\u6cd5\nEthash\n(\u4ee5\u524d\u79f0\u4e3aDagger-Hashimoto)\u662f\u57fa\u4e8e\u63d0\u4f9b\u4e00\u4e2a\u5927\u578b\u7684\uff0c\u77ac\u6001\u7684\uff0c\u968f\u673a\u751f\u6210\u7684\u6570\u636e\u96c6\uff0c\u5b83\u5f62\u6210\u4e86\u4e00\u4e2aDAG ,(Dagger\u90e8\u5206)\uff0c\u5e76\u8bd5\u56fe\u89e3\u51b3\u4e00\u4e2a\u7279\u5b9a\u7684\u7ea6\u675f\uff0c\u90e8\u5206\u901a\u8fc7\u5757\u7684\u5934\u90e8\u6563\u5217\u6765\u786e\u5b9a\u3002\n\n\n\u5b83\u88ab\u8bbe\u8ba1\u7528\u6765\u5728\u4e00\u4e2a\u7f13\u6162\u7684CPU\u4e13\u7528\u73af\u5883\u4e2d\u52a0\u5feb\u9a8c\u8bc1\u65f6\u95f4\uff0c\u4f46\u662f\u5f53\u63d0\u4f9b\u9ad8\u5e26\u5bbd\u7684\u5927\u5bb9\u91cf\u5185\u5b58\u65f6\uff0c\u4e3a\u6316\u6398\u63d0\u4f9b\u4e86\u5de8\u5927\u7684\u63d0\u901f\u3002\n\u5927\u7684\u8bb0\u5fc6\u8981\u6c42\u610f\u5473\u7740\u5927\u578b\u77ff\u5de5\u83b7\u5f97\u6bd4\u8f83\u5c0f\u7684\u8d85\u7ebf\u6027\u6536\u76ca\u3002\n\u9ad8\u5e26\u5bbd\u8981\u6c42\u610f\u5473\u7740\u5728\u5171\u4eab\u76f8\u540c\u5b58\u50a8\u5668\u7684\u8bb8\u591a\u8d85\u9ad8\u901f\u5904\u7406\u5355\u5143\u4e0a\u5806\u79ef\u7684\u52a0\u901f\u76f8\u5bf9\u4e8e\u5355\u4e2a\u5355\u5143\u51e0\u4e4e\u6ca1\u6709\u597d\u5904\u3002\n\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u6c60\u5f00\u91c7\u5bf9\u8282\u70b9\u8fdb\u884c\u9a8c\u8bc1\u6ca1\u6709\u4efb\u4f55\u597d\u5904\uff0c\u56e0\u6b64\u963b\u788d\u4e86\u96c6\u4e2d\u5316\u3002\n\n\n\u5916\u90e8\u6316\u6398\u5e94\u7528\u7a0b\u5e8f\u548c\u4ee5\u592a\u574a\u5b88\u62a4\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u901a\u8fc7JSON-RPC API\u8fdb\u884c\u3002\n\u63d0\u4f9b\u4e86\u4e24\u4e2aRPC\u51fd\u6570\u3002 ,\neth_getWork\n\u548c\neth_submitWork\n\u3002\n\n\n\u8fd9\u4e9b\u5728\n\u77ff\u5de5\n\u9875\u4e0b\u7684\nJSON-RPC\u63a5\u53e3\n\u7ef4\u57fa\u6587\u7ae0\u4e2d\u6709\u6b63\u5f0f\u8bb0\u5f55\u3002\n\n\n\u4e3a\u4e86\u53ef\u4ee5\u6316\u6398\uff0c\u60a8\u9700\u8981\u4e00\u4e2a\u5b8c\u5168\u540c\u6b65\u7684\u4ee5\u592a\u574a\u5ba2\u6237\u7aef\uff0c\u8be5\u5ba2\u6237\u7aef\u5df2\u542f\u7528\u6316\u77ff\u548c\u81f3\u5c11\u62e5\u6709\u4e00\u4e2a\u4ee5\u592a\u574a\u8d26\u6237\u3002\n\u8fd9\u4e2a\u5e10\u6237\u7528\u4e8e\u53d1\u9001\u6316\u77ff\u5956\u52b1\uff0c\u901a\u5e38\u88ab\u79f0\u4e3a\ncoinbase\n\u6216\netherbase\n\u3002\n\u8bf7\u8bbf\u95ee\u672c\u6307\u5357\u7684\n\u521b\u5efa\u8d26\u53f7\n\u90e8\u5206\uff0c\u4e86\u89e3\u5982\u4f55\u521b\u5efa\u5e10\u6237\u3002\n\n\n\n\nWarning\n\n\n\u786e\u4fdd\u60a8\u7684\u533a\u5757\u94fe\u5728\u5f00\u59cb\u6316\u6398\u4e4b\u524d\u4e0e\u4e3b\u94fe\u5b8c\u5168\u540c\u6b65\uff0c\u5426\u5219\u60a8\u5c06\u4e0d\u4f1a\u5728\u4e3b\u94fe\u4e0a\u6316\u6398\u3002", 
            "title": "\u7b97\u6cd5"
        }, 
        {
            "location": "/mining/algorithm/#_1", 
            "text": "\u6211\u4eec\u7684\u7b97\u6cd5 Ethash (\u4ee5\u524d\u79f0\u4e3aDagger-Hashimoto)\u662f\u57fa\u4e8e\u63d0\u4f9b\u4e00\u4e2a\u5927\u578b\u7684\uff0c\u77ac\u6001\u7684\uff0c\u968f\u673a\u751f\u6210\u7684\u6570\u636e\u96c6\uff0c\u5b83\u5f62\u6210\u4e86\u4e00\u4e2aDAG ,(Dagger\u90e8\u5206)\uff0c\u5e76\u8bd5\u56fe\u89e3\u51b3\u4e00\u4e2a\u7279\u5b9a\u7684\u7ea6\u675f\uff0c\u90e8\u5206\u901a\u8fc7\u5757\u7684\u5934\u90e8\u6563\u5217\u6765\u786e\u5b9a\u3002  \u5b83\u88ab\u8bbe\u8ba1\u7528\u6765\u5728\u4e00\u4e2a\u7f13\u6162\u7684CPU\u4e13\u7528\u73af\u5883\u4e2d\u52a0\u5feb\u9a8c\u8bc1\u65f6\u95f4\uff0c\u4f46\u662f\u5f53\u63d0\u4f9b\u9ad8\u5e26\u5bbd\u7684\u5927\u5bb9\u91cf\u5185\u5b58\u65f6\uff0c\u4e3a\u6316\u6398\u63d0\u4f9b\u4e86\u5de8\u5927\u7684\u63d0\u901f\u3002\n\u5927\u7684\u8bb0\u5fc6\u8981\u6c42\u610f\u5473\u7740\u5927\u578b\u77ff\u5de5\u83b7\u5f97\u6bd4\u8f83\u5c0f\u7684\u8d85\u7ebf\u6027\u6536\u76ca\u3002\n\u9ad8\u5e26\u5bbd\u8981\u6c42\u610f\u5473\u7740\u5728\u5171\u4eab\u76f8\u540c\u5b58\u50a8\u5668\u7684\u8bb8\u591a\u8d85\u9ad8\u901f\u5904\u7406\u5355\u5143\u4e0a\u5806\u79ef\u7684\u52a0\u901f\u76f8\u5bf9\u4e8e\u5355\u4e2a\u5355\u5143\u51e0\u4e4e\u6ca1\u6709\u597d\u5904\u3002\n\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u6c60\u5f00\u91c7\u5bf9\u8282\u70b9\u8fdb\u884c\u9a8c\u8bc1\u6ca1\u6709\u4efb\u4f55\u597d\u5904\uff0c\u56e0\u6b64\u963b\u788d\u4e86\u96c6\u4e2d\u5316\u3002  \u5916\u90e8\u6316\u6398\u5e94\u7528\u7a0b\u5e8f\u548c\u4ee5\u592a\u574a\u5b88\u62a4\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u901a\u8fc7JSON-RPC API\u8fdb\u884c\u3002\n\u63d0\u4f9b\u4e86\u4e24\u4e2aRPC\u51fd\u6570\u3002 , eth_getWork \u548c eth_submitWork \u3002  \u8fd9\u4e9b\u5728 \u77ff\u5de5 \u9875\u4e0b\u7684 JSON-RPC\u63a5\u53e3 \u7ef4\u57fa\u6587\u7ae0\u4e2d\u6709\u6b63\u5f0f\u8bb0\u5f55\u3002  \u4e3a\u4e86\u53ef\u4ee5\u6316\u6398\uff0c\u60a8\u9700\u8981\u4e00\u4e2a\u5b8c\u5168\u540c\u6b65\u7684\u4ee5\u592a\u574a\u5ba2\u6237\u7aef\uff0c\u8be5\u5ba2\u6237\u7aef\u5df2\u542f\u7528\u6316\u77ff\u548c\u81f3\u5c11\u62e5\u6709\u4e00\u4e2a\u4ee5\u592a\u574a\u8d26\u6237\u3002\n\u8fd9\u4e2a\u5e10\u6237\u7528\u4e8e\u53d1\u9001\u6316\u77ff\u5956\u52b1\uff0c\u901a\u5e38\u88ab\u79f0\u4e3a coinbase \u6216 etherbase \u3002\n\u8bf7\u8bbf\u95ee\u672c\u6307\u5357\u7684 \u521b\u5efa\u8d26\u53f7 \u90e8\u5206\uff0c\u4e86\u89e3\u5982\u4f55\u521b\u5efa\u5e10\u6237\u3002   Warning  \u786e\u4fdd\u60a8\u7684\u533a\u5757\u94fe\u5728\u5f00\u59cb\u6316\u6398\u4e4b\u524d\u4e0e\u4e3b\u94fe\u5b8c\u5168\u540c\u6b65\uff0c\u5426\u5219\u60a8\u5c06\u4e0d\u4f1a\u5728\u4e3b\u94fe\u4e0a\u6316\u6398\u3002", 
            "title": "\u7b97\u6cd5"
        }, 
        {
            "location": "/mining/cpu/", 
            "text": "CPU\u6316\u77ff\n\n\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u60a8\u7684\u8ba1\u7b97\u673a\u7684\u4e2d\u592e\u5904\u7406\u5355\u5143\uff08CPU\uff09\u6765\u6316\u6398\u4ee5\u592a\u3002\nT\u4ed6\u4e0d\u518d\u6709\u5229\u53ef\u56fe\uff0c\u56e0\u4e3aGPU\u77ff\u5de5\u7684\u6548\u7387\u5927\u7ea6\u9ad8\u51fa\u4e24\u4e2a\u6570\u91cf\u7ea7\u3002\n\u7136\u800c\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528CPU\u5728\u83ab\u767b\u6d4b\u8bd5\u7f51\u6216\u79c1\u6709\u94fe\u4e0a\u6316\u6398\uff0c\u4ee5\u521b\u5efa\u60a8\u9700\u8981\u6d4b\u8bd5\u5408\u7ea6\u548c\u4ea4\u6613\u7684\u4ee5\u592a\u5e01\uff0c\u800c\u65e0\u9700\u5728\u5b9e\u65f6\u7f51\u7edc\u4e0a\u82b1\u8d39\u60a8\u7684\u5b9e\u9645\u7684\u65f6\u95f4\u3002\n\n\n\n\nNote\n\n\n\u9664\u4e86\u7528\u4e8e\u6d4b\u8bd5\u76ee\u7684\u4e4b\u5916\uff0c\u6d4b\u8bd5\u7f51\u7edc\u6ca1\u6709\u4efb\u4f55\u4ef7\u503c\uff08\u53c2\u89c1[\u6d4b\u8bd5\u7f51\u7edc]\uff09\u3002\n\n\n\n\n\u4f7f\u7528geth\n\n\n\u5f53\u4f60\u7528\ngeth\n\u542f\u52a8\u4f60\u7684ethereum\u8282\u70b9\u65f6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u6316\u77ff\u3002\n\u4ee5CPU\u91c7\u77ff\u6a21\u5f0f\u542f\u52a8, \u4f60\u9700\u8981\u4f7f\u7528\n--mine\n \n\u547d\u4ee4\u884c\u9009\u9879\n.\n\n-minerthreads\n\u53c2\u6570\u53ef\u7528\u4e8e\u8bbe\u7f6e\u5e76\u884c\u6316\u6398\u7ebf\u7a0b\u6570\uff08\u9ed8\u8ba4\u4e3a\u5904\u7406\u5668\u5185\u6838\u603b\u6570\uff09\u3002\n\n\ngeth --mine --minerthreads=4\n\n\n\u60a8\u4e5f\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u4f7f\u7528\nconsole\n\u542f\u52a8\u548c\u505c\u6b62CPU\u6316\u6398\uff0c.\n\nminer.start\n\u4e3a\u77ff\u5de5\u7ebf\u7a0b\u7684\u6570\u91cf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u9009\u7684\u53c2\u6570\u3002\n\n\n \nminer\n.\nstart\n(\n8\n)\n\n\ntrue\n\n\n \nminer\n.\nstop\n()\n\n\ntrue\n\n\n\n\n\n\u8bf7\u6ce8\u610f\uff0c\u53ea\u6709\u5728\u4e0e\u7f51\u7edc\u540c\u6b65\u7684\u60c5\u51b5\u4e0b\uff08\u56e0\u4e3a\u60a8\u662f\u5728\u4e00\u81f4\u6027\u5757\u4e4b\u4e0a\u8fdb\u884c\u6316\u6398\uff09\uff0c\u771f\u6b63\u7684\u4ee5\u592a\u7f51\u6316\u6398\u624d\u6709\u610f\u4e49\u3002\n\u56e0\u6b64\uff0ceth blockchain\u4e0b\u8f7d\u5668/\u540c\u6b65\u5668\u5c06\u5ef6\u8fdf\u6316\u6398\uff0c\u76f4\u5230\u540c\u6b65\u5b8c\u6210, \u4e4b\u540e\uff0c\u6316\u6398\u81ea\u52a8\u5f00\u59cb\uff0c\u9664\u975e\u4f60\u7528\nminer.stop()\n\u53d6\u6d88\u4f60\u7684\u610f\u56fe\u3002\n\n\n\u4e3a\u4e86\u8d5a\u53d6\u4e59\u919a\uff0c\u4f60\u5fc5\u987b\u6709\u4f60\u7684\n etherbase \n\uff08\u6216\n coinbase \n\uff09\u5730\u5740\u96c6\u3002\n\u8fd9\u4e2aetherbase\u9ed8\u8ba4\u4e3a\u60a8\u7684\u4e3b\u5e10\u6237\u3002\n\u5982\u679c\u4f60\u6ca1\u6709etherbase\u5730\u5740\uff0c\u90a3\u4e48\ngeth -mine\n\u5c06\u4e0d\u4f1a\u542f\u52a8\u3002\n\n\n\u4f60\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e0a\u8bbe\u7f6e\u4f60\u7684etherbase\uff1a\n\n\ngeth --etherbase \n1\n --mine  \n2\n geth.log // \n1\n is index: second account by creation order OR\ngeth --etherbase \n0xa4d8e9cae4d04b093aac82e6cd355b6b963fb7ff\n --mine \n2\n geth.log\n\n\n\n\n\u4f60\u4e5f\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u4e0a\u91cd\u7f6e\u4f60\u7684etherbase\uff1a\n\n\nminer\n.\nsetEtherbase\n(\neth\n.\naccounts\n[\n2\n])\n\n\n\n\n\n\u8bf7\u6ce8\u610f\uff0c\u60a8\u7684etherbase\u4e0d\u9700\u8981\u662f\u672c\u5730\u5e10\u6237\u7684\u5730\u5740\uff0c\u53ea\u662f\u73b0\u6709\u5e10\u6237\u7684\u5730\u5740\u3002\n\n\n\u6709\u4e00\u4e2a\u9009\u9879\n\u53ef\u4ee5\u6dfb\u52a0\u989d\u5916\u7684\u6570\u636e\n\uff08\u53ea\u670932\u4e2a\u5b57\u8282\uff09\u5230\u60a8\u7684\u5f00\u91c7\u5757\u3002\n\u6309\u7167\u60ef\u4f8b\uff0c\u8fd9\u88ab\u89e3\u91ca\u4e3aunicode\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u8bbe\u7f6e\u4f60\u7684\u77ed\u865a\u62df\u6807\u7b7e\u3002\n\n\nminer\n.\nsetExtra\n(\n\u039eTH\u039e\u042fSPH\u039e\u042f\u039e\n)\n\n\n...\n\n\ndebug\n.\nprintBlock\n(\n131805\n)\n\n\nBLOCK\n(\nbe465b020fdbedc4063756f0912b5a89bbb4735bd1d1df84363e05ade0195cb1\n)\n:\n \nSize\n:\n \n531.00\n \nB\n \nTD\n:\n \n643485290485\n \n{\n\n\nNoNonce\n:\n \nee48752c3a0bfe3d85339451a5f3f411c21c8170353e450985e1faab0a9ac4cc\n\n\nHeader\n:\n\n\n[\n\n\n...\n\n        \nCoinbase\n:\n           \na4d8e9cae4d04b093aac82e6cd355b6b963fb7ff\n\n        \nNumber\n:\n             \n131805\n\n        \nExtra\n:\n              \n\u039eTH\u039e\u042fSPH\u039e\u042f\u039e\n\n\n...\n\n\n}\n\n\n\n\n\n\u4f60\u53ef\u4ee5\u7528\nminer.hashrate\n\u6765\u68c0\u67e5\u4f60\u7684\u54c8\u5e0c\u7387, \u7ed3\u679c\u662fH/s\uff08\u6bcf\u79d2\u54c8\u5e0c\u64cd\u4f5c\uff09.\n\n\n \nminer\n.\nhashrate\n\n\n712000\n\n\n\n\n\n\u5728\u4f60\u6210\u529f\u5730\u5f00\u91c7\u4e86\u4e00\u4e9b\u5757\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u68c0\u67e5\u4f60\u7684etherbase\u5e10\u6237\u7684ether\u5e73\u8861\u3002\n\u73b0\u5728\u5047\u8bbe\u4f60\u7684etherbase\u662f\u4e00\u4e2a\u672c\u5730\u5e10\u6237\uff1a\n\n\n \neth\n.\ngetBalance\n(\neth\n.\ncoinbase\n).\ntoNumber\n();\n\n\n34698870000000\n\n\n\n\n\n\u4e3a\u4e86\u628a\u4f60\u7684\u6536\u5165\u82b1\u5728\u7164\u6c14\u4e0a\u8fdb\u884c\u4ea4\u6613, \u60a8\u5c06\u9700\u8981\u89e3\u9501\u6b64\u5e10\u6237\u3002\n\n\n \npersonal\n.\nunlockAccount\n(\neth\n.\ncoinbase\n)\n\n\nPassword\n\n\ntrue\n\n\n\n\n\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u63a7\u5236\u53f0\u4e0a\u7684\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u6765\u68c0\u67e5\u7279\u5b9a\u77ff\u5de5\uff08\u5730\u5740\uff09\u6316\u6398\u54ea\u4e9b\u5757\uff1a\n\n\nfunction\n \nminedBlocks\n(\nlastn\n,\n \naddr\n)\n \n{\n\n  \naddrs\n \n=\n \n[];\n\n  \nif\n \n(\n!\naddr\n)\n \n{\n\n    \naddr\n \n=\n \neth\n.\ncoinbase\n\n  \n}\n\n  \nlimit\n \n=\n \neth\n.\nblockNumber\n \n-\n \nlastn\n\n  \nfor\n \n(\ni\n \n=\n \neth\n.\nblockNumber\n;\n \ni\n \n=\n \nlimit\n;\n \ni\n--\n)\n \n{\n\n    \nif\n \n(\neth\n.\ngetBlock\n(\ni\n).\nminer\n \n==\n \naddr\n)\n \n{\n\n      \naddrs\n.\npush\n(\ni\n)\n\n    \n}\n\n  \n}\n\n  \nreturn\n \naddrs\n\n\n}\n\n\n// \u626b\u63cf\u6700\u540e\u76841000\u4e2a\u5757\uff0c\u5e76\u8fd4\u56de\u7531\u60a8\u7684coinbase\u5f00\u91c7\u7684\u5757\u7684\u5757\u7f16\u53f7\n\n\n// (\u66f4\u7cbe\u786e\u5730\u963b\u6b62\u53d1\u9001\u7ed9\u4f60\u7684coinbase\u7684\u6316\u77ff\u5956\u52b1).\n\n\nminedBlocks\n(\n1000\n,\n \neth\n.\ncoinbase\n);\n\n\n//[352708, 352655, 352559]\n\n\n\n\n\n\u8bf7\u6ce8\u610f\uff0c\u5b83\u4f1a\u7ecf\u5e38\u53d1\u751f\uff0c\u4f60\u627e\u5230\u4e00\u4e2a\u5757\uff0c\u4f46\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u5bf9\u89c4\u8303\u94fe\u3002\n\u8fd9\u610f\u5473\u7740\u5f53\u4f60\u5728\u5f53\u5730\u5305\u62ec\u4f60\u7684\u96f7\u533a, \u5f53\u524d\u72b6\u6001\u5c06\u663e\u793a\u6316\u6398\u5956\u52b1\u8bb0\u5165\u60a8\u7684\u5e10\u6237, \u7136\u800c\uff0c\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c \u53d1\u73b0\u66f4\u597d\u7684\u94fe\u6761\uff0c\u6211\u4eec\u5207\u6362\u5230\u4e0d\u5305\u542b\u60a8\u7684\u533a\u5757\u7684\u94fe\u6761\uff0c\u56e0\u6b64\u4e0d\u8bb0\u5f55\u6316\u6398\u5956\u52b1\u3002\n\u56e0\u6b64\uff0c\u76d1\u6d4b\u77ff\u5de5\u5e73\u8861\u7684\u77ff\u5de5\u5f88\u53ef\u80fd\u4f1a\u53d1\u73b0\u5b83\u53ef\u80fd\u4f1a\u6ce2\u52a8\u5f88\u591a\u3002", 
            "title": "CPU\u6316\u77ff"
        }, 
        {
            "location": "/mining/cpu/#cpu", 
            "text": "\u60a8\u53ef\u4ee5\u4f7f\u7528\u60a8\u7684\u8ba1\u7b97\u673a\u7684\u4e2d\u592e\u5904\u7406\u5355\u5143\uff08CPU\uff09\u6765\u6316\u6398\u4ee5\u592a\u3002\nT\u4ed6\u4e0d\u518d\u6709\u5229\u53ef\u56fe\uff0c\u56e0\u4e3aGPU\u77ff\u5de5\u7684\u6548\u7387\u5927\u7ea6\u9ad8\u51fa\u4e24\u4e2a\u6570\u91cf\u7ea7\u3002\n\u7136\u800c\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528CPU\u5728\u83ab\u767b\u6d4b\u8bd5\u7f51\u6216\u79c1\u6709\u94fe\u4e0a\u6316\u6398\uff0c\u4ee5\u521b\u5efa\u60a8\u9700\u8981\u6d4b\u8bd5\u5408\u7ea6\u548c\u4ea4\u6613\u7684\u4ee5\u592a\u5e01\uff0c\u800c\u65e0\u9700\u5728\u5b9e\u65f6\u7f51\u7edc\u4e0a\u82b1\u8d39\u60a8\u7684\u5b9e\u9645\u7684\u65f6\u95f4\u3002   Note  \u9664\u4e86\u7528\u4e8e\u6d4b\u8bd5\u76ee\u7684\u4e4b\u5916\uff0c\u6d4b\u8bd5\u7f51\u7edc\u6ca1\u6709\u4efb\u4f55\u4ef7\u503c\uff08\u53c2\u89c1[\u6d4b\u8bd5\u7f51\u7edc]\uff09\u3002", 
            "title": "CPU\u6316\u77ff"
        }, 
        {
            "location": "/mining/cpu/#geth", 
            "text": "\u5f53\u4f60\u7528 geth \u542f\u52a8\u4f60\u7684ethereum\u8282\u70b9\u65f6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u6316\u77ff\u3002\n\u4ee5CPU\u91c7\u77ff\u6a21\u5f0f\u542f\u52a8, \u4f60\u9700\u8981\u4f7f\u7528 --mine   \u547d\u4ee4\u884c\u9009\u9879 . -minerthreads \u53c2\u6570\u53ef\u7528\u4e8e\u8bbe\u7f6e\u5e76\u884c\u6316\u6398\u7ebf\u7a0b\u6570\uff08\u9ed8\u8ba4\u4e3a\u5904\u7406\u5668\u5185\u6838\u603b\u6570\uff09\u3002  geth --mine --minerthreads=4  \u60a8\u4e5f\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u4f7f\u7528 console \u542f\u52a8\u548c\u505c\u6b62CPU\u6316\u6398\uff0c. miner.start \u4e3a\u77ff\u5de5\u7ebf\u7a0b\u7684\u6570\u91cf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u9009\u7684\u53c2\u6570\u3002    miner . start ( 8 )  true    miner . stop ()  true   \u8bf7\u6ce8\u610f\uff0c\u53ea\u6709\u5728\u4e0e\u7f51\u7edc\u540c\u6b65\u7684\u60c5\u51b5\u4e0b\uff08\u56e0\u4e3a\u60a8\u662f\u5728\u4e00\u81f4\u6027\u5757\u4e4b\u4e0a\u8fdb\u884c\u6316\u6398\uff09\uff0c\u771f\u6b63\u7684\u4ee5\u592a\u7f51\u6316\u6398\u624d\u6709\u610f\u4e49\u3002\n\u56e0\u6b64\uff0ceth blockchain\u4e0b\u8f7d\u5668/\u540c\u6b65\u5668\u5c06\u5ef6\u8fdf\u6316\u6398\uff0c\u76f4\u5230\u540c\u6b65\u5b8c\u6210, \u4e4b\u540e\uff0c\u6316\u6398\u81ea\u52a8\u5f00\u59cb\uff0c\u9664\u975e\u4f60\u7528 miner.stop() \u53d6\u6d88\u4f60\u7684\u610f\u56fe\u3002  \u4e3a\u4e86\u8d5a\u53d6\u4e59\u919a\uff0c\u4f60\u5fc5\u987b\u6709\u4f60\u7684  etherbase  \uff08\u6216  coinbase  \uff09\u5730\u5740\u96c6\u3002\n\u8fd9\u4e2aetherbase\u9ed8\u8ba4\u4e3a\u60a8\u7684\u4e3b\u5e10\u6237\u3002\n\u5982\u679c\u4f60\u6ca1\u6709etherbase\u5730\u5740\uff0c\u90a3\u4e48 geth -mine \u5c06\u4e0d\u4f1a\u542f\u52a8\u3002  \u4f60\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e0a\u8bbe\u7f6e\u4f60\u7684etherbase\uff1a  geth --etherbase  1  --mine   2  geth.log //  1  is index: second account by creation order OR\ngeth --etherbase  0xa4d8e9cae4d04b093aac82e6cd355b6b963fb7ff  --mine  2  geth.log  \u4f60\u4e5f\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u4e0a\u91cd\u7f6e\u4f60\u7684etherbase\uff1a  miner . setEtherbase ( eth . accounts [ 2 ])   \u8bf7\u6ce8\u610f\uff0c\u60a8\u7684etherbase\u4e0d\u9700\u8981\u662f\u672c\u5730\u5e10\u6237\u7684\u5730\u5740\uff0c\u53ea\u662f\u73b0\u6709\u5e10\u6237\u7684\u5730\u5740\u3002  \u6709\u4e00\u4e2a\u9009\u9879 \u53ef\u4ee5\u6dfb\u52a0\u989d\u5916\u7684\u6570\u636e \uff08\u53ea\u670932\u4e2a\u5b57\u8282\uff09\u5230\u60a8\u7684\u5f00\u91c7\u5757\u3002\n\u6309\u7167\u60ef\u4f8b\uff0c\u8fd9\u88ab\u89e3\u91ca\u4e3aunicode\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u8bbe\u7f6e\u4f60\u7684\u77ed\u865a\u62df\u6807\u7b7e\u3002  miner . setExtra ( \u039eTH\u039e\u042fSPH\u039e\u042f\u039e )  ...  debug . printBlock ( 131805 )  BLOCK ( be465b020fdbedc4063756f0912b5a89bbb4735bd1d1df84363e05ade0195cb1 ) :   Size :   531.00   B   TD :   643485290485   {  NoNonce :   ee48752c3a0bfe3d85339451a5f3f411c21c8170353e450985e1faab0a9ac4cc  Header :  [  ... \n         Coinbase :             a4d8e9cae4d04b093aac82e6cd355b6b963fb7ff \n         Number :               131805 \n         Extra :                \u039eTH\u039e\u042fSPH\u039e\u042f\u039e  ...  }   \u4f60\u53ef\u4ee5\u7528 miner.hashrate \u6765\u68c0\u67e5\u4f60\u7684\u54c8\u5e0c\u7387, \u7ed3\u679c\u662fH/s\uff08\u6bcf\u79d2\u54c8\u5e0c\u64cd\u4f5c\uff09.    miner . hashrate  712000   \u5728\u4f60\u6210\u529f\u5730\u5f00\u91c7\u4e86\u4e00\u4e9b\u5757\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u68c0\u67e5\u4f60\u7684etherbase\u5e10\u6237\u7684ether\u5e73\u8861\u3002\n\u73b0\u5728\u5047\u8bbe\u4f60\u7684etherbase\u662f\u4e00\u4e2a\u672c\u5730\u5e10\u6237\uff1a    eth . getBalance ( eth . coinbase ). toNumber ();  34698870000000   \u4e3a\u4e86\u628a\u4f60\u7684\u6536\u5165\u82b1\u5728\u7164\u6c14\u4e0a\u8fdb\u884c\u4ea4\u6613, \u60a8\u5c06\u9700\u8981\u89e3\u9501\u6b64\u5e10\u6237\u3002    personal . unlockAccount ( eth . coinbase )  Password  true   \u60a8\u53ef\u4ee5\u4f7f\u7528\u63a7\u5236\u53f0\u4e0a\u7684\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u6765\u68c0\u67e5\u7279\u5b9a\u77ff\u5de5\uff08\u5730\u5740\uff09\u6316\u6398\u54ea\u4e9b\u5757\uff1a  function   minedBlocks ( lastn ,   addr )   { \n   addrs   =   []; \n   if   ( ! addr )   { \n     addr   =   eth . coinbase \n   } \n   limit   =   eth . blockNumber   -   lastn \n   for   ( i   =   eth . blockNumber ;   i   =   limit ;   i -- )   { \n     if   ( eth . getBlock ( i ). miner   ==   addr )   { \n       addrs . push ( i ) \n     } \n   } \n   return   addrs  }  // \u626b\u63cf\u6700\u540e\u76841000\u4e2a\u5757\uff0c\u5e76\u8fd4\u56de\u7531\u60a8\u7684coinbase\u5f00\u91c7\u7684\u5757\u7684\u5757\u7f16\u53f7  // (\u66f4\u7cbe\u786e\u5730\u963b\u6b62\u53d1\u9001\u7ed9\u4f60\u7684coinbase\u7684\u6316\u77ff\u5956\u52b1).  minedBlocks ( 1000 ,   eth . coinbase );  //[352708, 352655, 352559]   \u8bf7\u6ce8\u610f\uff0c\u5b83\u4f1a\u7ecf\u5e38\u53d1\u751f\uff0c\u4f60\u627e\u5230\u4e00\u4e2a\u5757\uff0c\u4f46\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u5bf9\u89c4\u8303\u94fe\u3002\n\u8fd9\u610f\u5473\u7740\u5f53\u4f60\u5728\u5f53\u5730\u5305\u62ec\u4f60\u7684\u96f7\u533a, \u5f53\u524d\u72b6\u6001\u5c06\u663e\u793a\u6316\u6398\u5956\u52b1\u8bb0\u5165\u60a8\u7684\u5e10\u6237, \u7136\u800c\uff0c\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c \u53d1\u73b0\u66f4\u597d\u7684\u94fe\u6761\uff0c\u6211\u4eec\u5207\u6362\u5230\u4e0d\u5305\u542b\u60a8\u7684\u533a\u5757\u7684\u94fe\u6761\uff0c\u56e0\u6b64\u4e0d\u8bb0\u5f55\u6316\u6398\u5956\u52b1\u3002\n\u56e0\u6b64\uff0c\u76d1\u6d4b\u77ff\u5de5\u5e73\u8861\u7684\u77ff\u5de5\u5f88\u53ef\u80fd\u4f1a\u53d1\u73b0\u5b83\u53ef\u80fd\u4f1a\u6ce2\u52a8\u5f88\u591a\u3002", 
            "title": "\u4f7f\u7528geth"
        }, 
        {
            "location": "/mining/gpu/", 
            "text": "GPU\u6316\u77ff\n\n\n\u786c\u4ef6\n\n\n\u8be5\u7b97\u6cd5\u5185\u5b58\u5f88\u96be\uff0c\u4e3a\u4e86\u4f7fDAG\u9002\u5408\u5185\u5b58\uff0c\u6bcf\u4e2aGPU\u9700\u89811-2GB\u7684\u5185\u5b58\u3002\u5982\u679c\u4f60\u5f97\u5230\u9519\u8befGPU\u6316\u6398\u3002 ,GPU\u5185\u5b58\u788e\u7247\uff1f\u201c\u4f60\u6ca1\u6709\u8db3\u591f\u7684\u5185\u5b58\u3002\nGPU\u77ff\u5de5\u5728OpenCL\u4e2d\u5b9e\u73b0\uff0c\u6240\u4ee5AMD GPU\u5c06\u6bd4\u540c\u7c7bNVIDIA GPU\u66f4\u201c\u5feb\u201d\u3002ASIC\u548cFPGA\u7684\u6548\u7387\u76f8\u5bf9\u8f83\u4f4e\uff0c\u56e0\u6b64\u4e0d\u9f13\u52b1\u3002\n\u8981\u83b7\u5f97\u82af\u7247\u7ec4\u548c\u5e73\u53f0\u7684openCL\uff0c\u8bf7\u5c1d\u8bd5\uff1a\n\n\n\n\nAMD SDK openCL\n\n\nNVIDIA CUDA openCL\n\n\n\n\nUbuntu Linux \u8bbe\u7f6e\n\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u5feb\u901f\u6307\u5357\uff0c\u4f60\u9700\u8981Ubuntu 14.04\u621615.04\u548cfglrx\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u3002\n\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528NVidia\u9a71\u52a8\u7a0b\u5e8f\u548c\u5176\u4ed6\u5e73\u53f0\uff0c\u4f46\u60a8\u5fc5\u987b\u627e\u5230\u81ea\u5df1\u7684\u65b9\u5f0f\u6765\u4f7f\u7528OpenCL\u8fdb\u884c\u5b89\u88c5\uff0c\u4f8b\u5982[Genoil\u7684ethminer fork]\uff08http://cryptomining-blog.com/tag/ ,ethminer /\uff09\u3002\n\n\n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f15.04\u7248\u672c\uff0c\u8bf7\u8f6c\u5230\u201c\u8f6f\u4ef6\u548c\u66f4\u65b0\n\u5176\u4ed6\u9a71\u52a8\u7a0b\u5e8f\u201d\uff0c\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u201c\u4f7f\u7528fglrx\u7684AMD\u56fe\u5f62\u52a0\u901f\u5668\u7684\u89c6\u9891\u9a71\u52a8\u7a0b\u5e8f\u201d\u3002\n\n\n\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f14.04\u7248\u672c\uff0c\u8bf7\u8f6c\u5230\u201c\u8f6f\u4ef6\u548c\u66f4\u65b0\n\u5176\u4ed6\u9a71\u52a8\u7a0b\u5e8f\u201d\uff0c\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u201c\u4f7f\u7528\u6765\u81eafglrx\u7684AMD\u56fe\u5f62\u52a0\u901f\u5668\u7684\u89c6\u9891\u9a71\u52a8\u7a0b\u5e8f\u201d\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u5bf9\u4e8e\u4f60\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u6765\u8bf4\uff0c\u7531\u4e8eUbuntu 14.04.02\u4e2d\u7684\u4e00\u4e2a\u5df2\u77e5\u9519\u8bef\uff0c\u65e0\u6cd5\u5207\u6362\u5230GPU\u6240\u9700\u7684\u4e13\u6709\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u3002\n\n\n\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u9047\u5230\u8fd9\u4e2a\u9519\u8bef\uff0c\u800c\u4e14\u5728\u4f60\u505a\u5176\u4ed6\u4e8b\u60c5\u4e4b\u524d\uff0c\u8bf7\u8f6c\u5230\u201c\u8f6f\u4ef6\u548c\u66f4\u65b0\n\u66f4\u65b0\u201d\uff0c\u7136\u540e\u9009\u62e9\u201c\u63d0\u524d\u53d1\u5e03\u7684\u66f4\u65b0\u53ef\u9760\u201d\u3002\n\u7136\u540e\uff0c\u8fd4\u56de\u5230\u201c\u8f6f\u4ef6\u548c\u66f4\u65b0\n\u5176\u4ed6\u9a71\u52a8\u7a0b\u5e8f\u201d\uff0c\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u201c\u4f7f\u7528fglrx\u7684AMD\u56fe\u5f62\u52a0\u901f\u5668\u7684\u89c6\u9891\u9a71\u52a8\u7a0b\u5e8f\u201d\uff09\u3002\n\u91cd\u65b0\u542f\u52a8\u540e\uff0c\u68c0\u67e5\u9a71\u52a8\u7a0b\u5e8f\u662f\u5426\u5df2\u7ecf\u6b63\u786e\u5b89\u88c5\uff08\u4f8b\u5982\u518d\u6b21\u8f6c\u5230\u201c\u5176\u4ed6\u9a71\u52a8\u7a0b\u5e8f\u201d\uff09\u662f\u975e\u5e38\u503c\u5f97\u7684\u3002\n\n\n\u65e0\u8bba\u4f60\u505a\u4ec0\u4e48\uff0c\u5982\u679c\u4f60\u572804\u5e744\u670814\u65e5\uff0c\u4e0d\u8981\u6539\u53d8\u9a71\u52a8\u7a0b\u5e8f\u6216\u4e00\u65e6\u8bbe\u7f6e\u7684\u9a71\u52a8\u7a0b\u5e8f\u914d\u7f6e\u3002\n\u4f8b\u5982\uff0c\u4f7f\u7528aticonfig --initial\uff08\u5c24\u5176\u662f\u4f7f\u7528-f\uff0c--force\u9009\u9879\uff09\u53ef\u4ee5\u201c\u4e2d\u65ad\u201d\u60a8\u7684\u8bbe\u7f6e\u3002\n\u5982\u679c\u4f60\u4e0d\u5c0f\u5fc3\u6539\u53d8\u4e86\u4ed6\u4eec\u7684\u914d\u7f6e\uff0c\u4f60\u9700\u8981\u5378\u8f7d\u9a71\u52a8\u7a0b\u5e8f\uff0c\u91cd\u65b0\u542f\u52a8\uff0c\u91cd\u65b0\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u5e76\u91cd\u65b0\u542f\u52a8\u3002\n\n\nMac \u8bbe\u7f6e\n\n\nwget http://developer.download.nvidia.com/compute/cuda/7_0/Prod/local_installers/cuda_7.0.29_mac.pkg\nsudo installer -pkg ~/Desktop/cuda_7.0.29_mac.pkg -target /\nbrew update\nbrew tap ethereum/ethereum\nbrew reinstall cpp-ethereum --with-gpu-mining --devel --headless --build-from-source\n\n\n\n\n\u4f60\u68c0\u67e5\u4f60\u7684\u51b7\u5374\u72b6\u6001\uff1a\n\n\naticonfig --adapter\n=\n0\n --od-gettemperature\n\n\n\n\nWindows \u8bbe\u7f6e\n\n\n[\u4e0b\u8f7d\u6700\u65b0\u7684Eth ++\u5b89\u88c5]\uff08https://github.com/ethereum-mining/ethminer/releases\uff09\uff0c\u5e76\u5728\u5b89\u88c5\u5c4f\u5e55\u7684\u201c\u9009\u62e9\u7ec4\u4ef6\u201d\u5c4f\u5e55\u4e0a\u9009\u62e9ethminer\n\n\n\n\n\u4e0egeth\u4e00\u8d77\u4f7f\u7528ethminer\n\n\ngeth account new // Set-up ethereum account \nif\n you \ndo\n not have one\ngeth --rpc --rpccorsdomain localhost \n2\n geth.log \n\nethminer -G  // -G \nfor\n GPU, -M \nfor\n benchmark\ntail -f geth.log\n\n\n\n\nethminer\n\u5728\u7aef\u53e38545\uff08geth\u4e2d\u7684\u9ed8\u8ba4RPC\u7aef\u53e3\uff09\u4e0a\u4e0egeth\u8fdb\u884c\u901a\u4fe1\u3002\n\u4f60\u53ef\u4ee5\u901a\u8fc7\u7ed9\ngeth\n\u6307\u5b9a\n--rpcport\n\u9009\u9879\u6765\u6539\u53d8\u5b83\u3002\nEthminer\u5c06\u5728\u4efb\u4f55\u6e2f\u53e3\u627e\u5230geth\u3002\n\u6ce8\u610f\u4f60\u9700\u8981\u7528\n--rpccorsdomain localhost\n\u8bbe\u7f6eCORS\u5934\u3002\n\u4f60\u4e5f\u53ef\u4ee5\u7528\n-F http\uff1a//127.0.0.1\uff1a3301\n\u5728\nethminer\n\u4e0a\u8bbe\u7f6e\u7aef\u53e3\u3002\n\u5982\u679c\u4f60\u60f3\u8981\u5728\u540c\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u6316\u6398\u591a\u4e2a\u5b9e\u4f8b\uff0c\u90a3\u4e48\u8bbe\u7f6e\u8fd9\u4e9b\u7aef\u53e3\u662f\u5fc5\u8981\u7684\uff0c\u5c3d\u7ba1\u8fd9\u6709\u4e9b\u6ca1\u6709\u610f\u4e49\u3002\n\u5982\u679c\u60a8\u6b63\u5728\u6d4b\u8bd5\u79c1\u6709\u94fe\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u4f7f\u7528CPU\u6316\u6398\u3002\n\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\n\n\u9664\u975e\u4f60\u60f3\u5728GPU\u6316\u6398\u7684TOP\u4e0a\u8fdb\u884cCPU\u6316\u6398\uff0c\u5426\u5219\u4f60\u4e0d\u9700\u8981\u7ed9\ngeth\n\u9009\u9879\u6216\u8005\u5728\u63a7\u5236\u53f0\u542f\u52a8\u77ff\u5de5\u3002\n:::\n\n\n\u5982\u679c\nethminer\n\u7684\u9ed8\u8ba4\u503c\u4e0d\u8d77\u4f5c\u7528\uff0c\u8bf7\u5c1d\u8bd5\u4f7f\u7528\n--opencl-device X\n\u6307\u5b9aOpenCL\u8bbe\u5907\uff0c\u5176\u4e2dX\u662f{0,1,2\uff0c...}\u3002\n\u5f53\u7528\n-M\n\uff08benchmark\uff09\u8fd0\u884c\nethminer\n\u65f6\uff0c\u4f60\u5e94\u8be5\u770b\u5230\u5982\u4e0b\u7684\u4e1c\u897f\uff1a\n\n\nBenchmarking on platform: \n{\n \nplatform\n: \nNVIDIA CUDA\n, \ndevice\n: \nGeForce GTX 750 Ti\n, \nversion\n: \nOpenCL 1.1 CUDA\n \n}\n\nBenchmarking on platform: \n{\n \nplatform\n: \nApple\n, \ndevice\n: \nIntel(R) Xeon(R) CPU E5-1620 v2 @ 3.70GHz\n, \nversion\n: \nOpenCL 1.2 \n \n}\n\n\n\n\n\n\u8c03\u8bd5\ngeth\n\uff1a\n\n\ngeth  --rpccorsdomain \nlocalhost\n --verbosity \n6\n \n2\n geth.log\n\n\n\n\n\u8c03\u8bd5\u77ff\u5de5\uff1a\n\n\nmake -DCMAKE_BUILD_TYPE\n=\nDebug -DETHASHCL\n=\n1\n -DGUI\n=\n0\n\ngdb --args ethminer -G -M\n\n\n\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\n\n\u5728GPU\u6316\u6398\u65f6\uff0chashrate\u4fe1\u606f\u5728\ngeth\n\u4e2d\u4e0d\u53ef\u7528\n\n\n:::\n\n\n\u7528\nethminer\n\u68c0\u67e5\u4f60\u7684hashrate\uff0c\nminer.hashrate\n\u5c06\u603b\u662f\u62a5\u544a0\u3002\n\n\n\u7528ethminer\u548ceth\n\n\n\u5728\u5355\u4e2aGPU\u4e0a\u6316\u6398\n\n\n\u4e3a\u4e86\u5728\u5355\u4e2aGPU\u4e0a\u6316\u6398\uff0c\u6240\u6709\u9700\u8981\u5b8c\u6210\u7684\u5de5\u4f5c\u662f\u4f7f\u7528\u4ee5\u4e0b\u53c2\u6570\u6765\u8fd0\u884ceth\uff1a\n\n\neth -v \n1\n -a 0xcadb3223d4eebcaa7b40ec5722967ced01cfc8f2 --client-name \nOPTIONALNAMEHERE\n -x \n50\n -m on -G\n\n\n\n\n\n\n-v 1\n \u5c06\u8be6\u7ec6\u7a0b\u5ea6\u8bbe\u7f6e\u4e3a1.\u8ba9\u6211\u4eec\u4e0d\u8981\u88ab\u90ae\u4ef6\u5783\u573e\u90ae\u4ef6\u3002\n\n\n-a YOURWALLETADDRESS\n \u8bbe\u7f6e\u91c7\u77ff\u5956\u52b1\u5c06\u4f1a\u53bb\u7684\u786c\u5e01\u5e93\u3002,\u4e0a\u9762\u7684\u5730\u5740\u53ea\u662f\u4e00\u4e2a\u4f8b\u5b50\u3002,\u8fd9\u4e2a\u8bba\u70b9\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u786e\u4fdd\u4e0d\u8981\u5728\u4f60\u7684\u94b1\u5305\u5730\u5740\u9519\u8bef\uff0c\u5426\u5219\u4f60\u5c06\u4e0d\u4f1a\u5f97\u5230\u4ee5\u592a\u4ed8\u51fa\u3002\n\n\n--client-name \"OPTIONAL\"\n \u8bbe\u7f6e\u53ef\u9009\u7684\u5ba2\u6237\u7aef\u540d\u79f0\u4ee5\u5728\u7f51\u7edc\u4e0a\u8bc6\u522b\u60a8\u7684\u8eab\u4efd\n\n\n-x 50\n \u8981\u6c42\u5927\u91cf\u7684\u540c\u4f34\u3002,\u5e2e\u52a9\u5728\u4e00\u5f00\u59cb\u627e\u5230\u540c\u884c\u3002\n\n\n-m on\n \u5176\u5b9e\u63a8\u51fa\u4e0e\u91c7\u77ff\u3002\n\n\n-G\n \u8bbe\u7f6eGPU\u6316\u6398\u3002\n\n\n\n\n\u5f53\u5ba2\u6237\u7aef\u8fd0\u884c\u65f6\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528geth attach`\u6216[ethconsole]\uff08\nhttps://github.com/ethereum/ethereum-console\n\uff09\u4e0e\u5b83\u8fdb\u884c\u4ea4\u4e92\u3002\n\n\n\u5728\u591a\u4e2aGPU\u4e0a\u6316\u6398\n\n\n\u4f7f\u7528\u591aGPU\u548ceth\u8fdb\u884c\u6316\u6398\u4e0e\u4f7f\u7528geth\u548c\u591aGPU\u8fdb\u884c\u6316\u6398\u975e\u5e38\u76f8\u4f3c\u3002\n\u786e\u4fdd\u6b63\u786e\u8fd0\u884c\u60a8\u7684coinbase\u5730\u5740\u7684eth\u8282\u70b9\uff1a\n\n\neth -v \n1\n -a 0xcadb3223d4eebcaa7b40ec5722967ced01cfc8f2 --client-name \nOPTIONALNAMEHERE\n -x \n50\n -j\n\n\n\n\n\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u8fd8\u6dfb\u52a0\u4e86-j\u53c2\u6570\uff0c\u4ee5\u4fbf\u5ba2\u6237\u7aef\u53ef\u4ee5\u542f\u7528JSON-RPC\u670d\u52a1\u5668\u4e0eethminer\u5b9e\u4f8b\u8fdb\u884c\u901a\u4fe1\u3002\n\u6b64\u5916\uff0c\u6211\u4eec\u5220\u9664\u4e86\u91c7\u77ff\u76f8\u5173\u7684\u8bba\u70b9\uff0c\u56e0\u4e3a\u4e59\u80fa\u5c06\u73b0\u5728\u4e3a\u6211\u4eec\u505a\u91c7\u77ff\u3002,\u5bf9\u4e8e\u60a8\u7684\u6bcf\u4e2aGPU\u6267\u884c\u4e00\u4e2a\u4e0d\u540c\u7684\u4e59\u80fa\u5b9e\u4f8b\uff1a\n\n\nethminer --no-precompute -G --opencl-device X\n\n\n\n\n\u5176\u4e2dX\u662f\u60a8\u5e0c\u671bethminer\u4f7f\u7528{0,1,2\uff0c...}\u7684openCL\u8bbe\u5907\u5bf9\u5e94\u7684\u7d22\u5f15\u53f7\u3002\n\u4e3a\u4e86\u8f7b\u677e\u83b7\u5f97OpenCL\u8bbe\u5907\u5217\u8868\uff0c\u60a8\u53ef\u4ee5\u6267\u884c\nethminer --list-devices\n\uff0c\u5b83\u5c06\u63d0\u4f9bOpenCL\u53ef\u4ee5\u68c0\u6d4b\u5230\u7684\u6240\u6709\u8bbe\u5907\u7684\u5217\u8868\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u8bbe\u5907\u7684\u4e00\u4e9b\u9644\u52a0\u4fe1\u606f\u3002\n\n\nBelow is a sample output:\n\n\n[0] GeForce GTX 770\n\n\n    CL_DEVICE_TYPE: GPU\n\n\n    CL_DEVICE_GLOBAL_MEM_SIZE: 4286345216\n\n\n    CL_DEVICE_MAX_MEM_ALLOC_SIZE: 1071586304\n\n\n    CL_DEVICE_MAX_WORK_GROUP_SIZE: 1024\n\n\n\n\n\n\u6700\u540e``\u65e0\u9884\u8ba1\u7b97'\u7684\u8bba\u70b9\u8981\u6c42\u4e59\u65b9\u4e0d\u8981\u63d0\u524d\u521b\u5efa\u4e0b\u4e00\u4e2a\u65f6\u4ee3\u7684DAG\u3002\n\u867d\u7136\u4e0d\u5efa\u8bae\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u6bcf\u5f53\u51fa\u73b0\u65f6\u4ee3\u8f6c\u6362\u65f6\u90fd\u4f1a\u6709\u91c7\u77ff\u4e2d\u65ad\u3002\n\n\n\u57fa\u51c6\n\n\n\u91c7\u77ff\u80fd\u529b\u5f80\u5f80\u968f\u7740\u5185\u5b58\u5e26\u5bbd\u7684\u6269\u5927\u800c\u589e\u957f\n\u6211\u4eec\u7684\u5b9e\u73b0\u662f\u7528OpenCL\u7f16\u5199\u7684\uff0c\u800cAMD\u7684GPU\u901a\u5e38\u6bd4NVidia\u66f4\u80fd\u652f\u6301OpenCL\u3002\n\u7ecf\u9a8c\u8bc1\u636e\u8868\u660e\uff0cAMD\u7684GPU\u5728\u4ef7\u683c\u4e0a\u6bd4NVidia\u7684\u4ea7\u54c1\u6709\u66f4\u597d\u7684\u6316\u6398\u6027\u80fd\u3002\n\n\n\u8981\u5bf9\u5355\u8bbe\u5907\u8bbe\u7f6e\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7-M\u9009\u9879\u5728\u57fa\u51c6\u6d4b\u8bd5\u6a21\u5f0f\u4e0b\u4f7f\u7528ethminer\uff1a\n\n\nethminer -G -M\n\n\n\n\n\u5982\u679c\u4f60\u6709\u5f88\u591a\u8bbe\u5907\uff0c\u5e76\u4e14\u4f60\u60f3\u5206\u522b\u5bf9\u6bcf\u4e00\u4e2a\u8bbe\u5907\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528--opencl-device\u9009\u9879\uff0c\u7c7b\u4f3c\u4e8e\u4e0a\u4e00\u8282\uff1a\n\n\nethminer -G -M --opencl-device X\n\n\n\n\n\u4f7f\u7528ethminer\n--list-devices\n\u5217\u51fa\u53ef\u80fd\u7684\u6570\u5b57\u6765\u4ee3\u66ffX {0,1,2\uff0c...}\u3002\n\n\n\u8981\u5f00\u59cb\u5728Windows\u4e0a\u6316\u6398\uff0c\u9996\u5148[\u4e0b\u8f7dgeth\u7a97\u53e3\u4e8c\u8fdb\u5236]\uff08https://build.ethereum.org/builds/Windows%20Go%20master%20branch/\uff09\u3002\n\n\n\n\n\u89e3\u538b\u7f29Geth\uff08\u53f3\u952e\u5355\u51fb\u5e76\u9009\u62e9\u89e3\u538b\u7f29\uff09\u5e76\u542f\u52a8\u547d\u4ee4\u63d0\u793a\u7b26\u3002\u4f7f\u7528cd\u5bfc\u822a\u5230Geth\u6570\u636e\u6587\u4ef6\u5939\u7684\u4f4d\u7f6e\uff08\u4f8b\u5982\uff0ccd /\u8f6c\u5230C\u9a71\u52a8\u5668\uff09\n\n\n\u901a\u8fc7\u8f93\u5165\ngeth --rpc\n\u5f00\u59cbgeth\u3002\n\n\n\n\n\u53ea\u8981\u4f60\u8f93\u5165\u8fd9\u4e2a\uff0c\u4ee5\u592a\u574a\u533a\u5757\u94fe\u5c06\u5f00\u59cb\u4e0b\u8f7d\u3002\n\u6709\u65f6\u4f60\u7684\u9632\u706b\u5899\u53ef\u80fd\u4f1a\u963b\u6b62\u540c\u6b65\u8fc7\u7a0b\uff08\u8fd9\u6837\u505a\u4f1a\u63d0\u793a\u4f60\uff09\u3002\n\u5982\u679c\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u8bf7\u70b9\u51fb\u201c\u5141\u8bb8\u8bbf\u95ee\u201d\u3002\n\n\n\n\n\u9996\u5148[\u4e0b\u8f7d\u5e76\u5b89\u88c5ethminer]\uff08http://cryptomining-blog.com/tag/ethminer-cuda-download/\uff09\uff0cC ++\u6316\u6398\u8f6f\u4ef6\uff08\u60a8\u7684\u9632\u706b\u5899\u6216Windows\u672c\u8eab\u53ef\u80fd\u4f1a\u6267\u884c\uff0c\u5141\u8bb8\u8bbf\u95ee\n\n\n\u6253\u5f00\u53e6\u4e00\u4e2a\u547d\u4ee4\u63d0\u793a\u7b26\uff08\u4fdd\u7559\u7b2c\u4e00\u4e2a\u547d\u4ee4\u63d0\u793a\u7b26\uff09\uff0c\u901a\u8fc7\u952e\u5165cd / Program \\ Files / Ethereum\uff08++\uff09/ release`\u6765\u6539\u53d8\u76ee\u5f55\n\n\n\u73b0\u5728\u786e\u4fddgeth\u5df2\u7ecf\u5b8c\u6210\u540c\u6b65\u533a\u5757\u94fe\u3002,\u5982\u679c\u4e0d\u518d\u540c\u6b65\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u547d\u4ee4\u63d0\u793a\u7b26\u4e0b\u952e\u5165\nethminer -G\n\u5f00\u59cb\u6316\u6398\u8fc7\u7a0b\n\n\n\n\n\u6b64\u65f6\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\n\u5982\u679c\u51fa\u73b0\u9519\u8bef\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u6309\u4e0b`\u6765\u4e2d\u6b62\u77ff\u5de5\n\u5982\u679c\u9519\u8bef\u63d0\u793a\u201c\u5185\u5b58\u4e0d\u8db3\u201d\uff0c\u90a3\u4e48\u60a8\u7684GPU\u6ca1\u6709\u8db3\u591f\u7684\u5185\u5b58\u6765\u6316\u6398\u4ee5\u592a\u7f51\u3002", 
            "title": "GPU\u6316\u77ff"
        }, 
        {
            "location": "/mining/gpu/#gpu", 
            "text": "", 
            "title": "GPU\u6316\u77ff"
        }, 
        {
            "location": "/mining/gpu/#_1", 
            "text": "\u8be5\u7b97\u6cd5\u5185\u5b58\u5f88\u96be\uff0c\u4e3a\u4e86\u4f7fDAG\u9002\u5408\u5185\u5b58\uff0c\u6bcf\u4e2aGPU\u9700\u89811-2GB\u7684\u5185\u5b58\u3002\u5982\u679c\u4f60\u5f97\u5230\u9519\u8befGPU\u6316\u6398\u3002 ,GPU\u5185\u5b58\u788e\u7247\uff1f\u201c\u4f60\u6ca1\u6709\u8db3\u591f\u7684\u5185\u5b58\u3002\nGPU\u77ff\u5de5\u5728OpenCL\u4e2d\u5b9e\u73b0\uff0c\u6240\u4ee5AMD GPU\u5c06\u6bd4\u540c\u7c7bNVIDIA GPU\u66f4\u201c\u5feb\u201d\u3002ASIC\u548cFPGA\u7684\u6548\u7387\u76f8\u5bf9\u8f83\u4f4e\uff0c\u56e0\u6b64\u4e0d\u9f13\u52b1\u3002\n\u8981\u83b7\u5f97\u82af\u7247\u7ec4\u548c\u5e73\u53f0\u7684openCL\uff0c\u8bf7\u5c1d\u8bd5\uff1a   AMD SDK openCL  NVIDIA CUDA openCL", 
            "title": "\u786c\u4ef6"
        }, 
        {
            "location": "/mining/gpu/#ubuntu-linux", 
            "text": "\u5bf9\u4e8e\u8fd9\u4e2a\u5feb\u901f\u6307\u5357\uff0c\u4f60\u9700\u8981Ubuntu 14.04\u621615.04\u548cfglrx\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u3002\n\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528NVidia\u9a71\u52a8\u7a0b\u5e8f\u548c\u5176\u4ed6\u5e73\u53f0\uff0c\u4f46\u60a8\u5fc5\u987b\u627e\u5230\u81ea\u5df1\u7684\u65b9\u5f0f\u6765\u4f7f\u7528OpenCL\u8fdb\u884c\u5b89\u88c5\uff0c\u4f8b\u5982[Genoil\u7684ethminer fork]\uff08http://cryptomining-blog.com/tag/ ,ethminer /\uff09\u3002  \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f15.04\u7248\u672c\uff0c\u8bf7\u8f6c\u5230\u201c\u8f6f\u4ef6\u548c\u66f4\u65b0 \u5176\u4ed6\u9a71\u52a8\u7a0b\u5e8f\u201d\uff0c\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u201c\u4f7f\u7528fglrx\u7684AMD\u56fe\u5f62\u52a0\u901f\u5668\u7684\u89c6\u9891\u9a71\u52a8\u7a0b\u5e8f\u201d\u3002  \u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f14.04\u7248\u672c\uff0c\u8bf7\u8f6c\u5230\u201c\u8f6f\u4ef6\u548c\u66f4\u65b0 \u5176\u4ed6\u9a71\u52a8\u7a0b\u5e8f\u201d\uff0c\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u201c\u4f7f\u7528\u6765\u81eafglrx\u7684AMD\u56fe\u5f62\u52a0\u901f\u5668\u7684\u89c6\u9891\u9a71\u52a8\u7a0b\u5e8f\u201d\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u5bf9\u4e8e\u4f60\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u6765\u8bf4\uff0c\u7531\u4e8eUbuntu 14.04.02\u4e2d\u7684\u4e00\u4e2a\u5df2\u77e5\u9519\u8bef\uff0c\u65e0\u6cd5\u5207\u6362\u5230GPU\u6240\u9700\u7684\u4e13\u6709\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u3002  \u6240\u4ee5\uff0c\u5982\u679c\u4f60\u9047\u5230\u8fd9\u4e2a\u9519\u8bef\uff0c\u800c\u4e14\u5728\u4f60\u505a\u5176\u4ed6\u4e8b\u60c5\u4e4b\u524d\uff0c\u8bf7\u8f6c\u5230\u201c\u8f6f\u4ef6\u548c\u66f4\u65b0 \u66f4\u65b0\u201d\uff0c\u7136\u540e\u9009\u62e9\u201c\u63d0\u524d\u53d1\u5e03\u7684\u66f4\u65b0\u53ef\u9760\u201d\u3002\n\u7136\u540e\uff0c\u8fd4\u56de\u5230\u201c\u8f6f\u4ef6\u548c\u66f4\u65b0 \u5176\u4ed6\u9a71\u52a8\u7a0b\u5e8f\u201d\uff0c\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u201c\u4f7f\u7528fglrx\u7684AMD\u56fe\u5f62\u52a0\u901f\u5668\u7684\u89c6\u9891\u9a71\u52a8\u7a0b\u5e8f\u201d\uff09\u3002\n\u91cd\u65b0\u542f\u52a8\u540e\uff0c\u68c0\u67e5\u9a71\u52a8\u7a0b\u5e8f\u662f\u5426\u5df2\u7ecf\u6b63\u786e\u5b89\u88c5\uff08\u4f8b\u5982\u518d\u6b21\u8f6c\u5230\u201c\u5176\u4ed6\u9a71\u52a8\u7a0b\u5e8f\u201d\uff09\u662f\u975e\u5e38\u503c\u5f97\u7684\u3002  \u65e0\u8bba\u4f60\u505a\u4ec0\u4e48\uff0c\u5982\u679c\u4f60\u572804\u5e744\u670814\u65e5\uff0c\u4e0d\u8981\u6539\u53d8\u9a71\u52a8\u7a0b\u5e8f\u6216\u4e00\u65e6\u8bbe\u7f6e\u7684\u9a71\u52a8\u7a0b\u5e8f\u914d\u7f6e\u3002\n\u4f8b\u5982\uff0c\u4f7f\u7528aticonfig --initial\uff08\u5c24\u5176\u662f\u4f7f\u7528-f\uff0c--force\u9009\u9879\uff09\u53ef\u4ee5\u201c\u4e2d\u65ad\u201d\u60a8\u7684\u8bbe\u7f6e\u3002\n\u5982\u679c\u4f60\u4e0d\u5c0f\u5fc3\u6539\u53d8\u4e86\u4ed6\u4eec\u7684\u914d\u7f6e\uff0c\u4f60\u9700\u8981\u5378\u8f7d\u9a71\u52a8\u7a0b\u5e8f\uff0c\u91cd\u65b0\u542f\u52a8\uff0c\u91cd\u65b0\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u5e76\u91cd\u65b0\u542f\u52a8\u3002", 
            "title": "Ubuntu Linux \u8bbe\u7f6e"
        }, 
        {
            "location": "/mining/gpu/#mac", 
            "text": "wget http://developer.download.nvidia.com/compute/cuda/7_0/Prod/local_installers/cuda_7.0.29_mac.pkg\nsudo installer -pkg ~/Desktop/cuda_7.0.29_mac.pkg -target /\nbrew update\nbrew tap ethereum/ethereum\nbrew reinstall cpp-ethereum --with-gpu-mining --devel --headless --build-from-source  \u4f60\u68c0\u67e5\u4f60\u7684\u51b7\u5374\u72b6\u6001\uff1a  aticonfig --adapter = 0  --od-gettemperature", 
            "title": "Mac \u8bbe\u7f6e"
        }, 
        {
            "location": "/mining/gpu/#windows", 
            "text": "[\u4e0b\u8f7d\u6700\u65b0\u7684Eth ++\u5b89\u88c5]\uff08https://github.com/ethereum-mining/ethminer/releases\uff09\uff0c\u5e76\u5728\u5b89\u88c5\u5c4f\u5e55\u7684\u201c\u9009\u62e9\u7ec4\u4ef6\u201d\u5c4f\u5e55\u4e0a\u9009\u62e9ethminer", 
            "title": "Windows \u8bbe\u7f6e"
        }, 
        {
            "location": "/mining/gpu/#gethethminer", 
            "text": "geth account new // Set-up ethereum account  if  you  do  not have one\ngeth --rpc --rpccorsdomain localhost  2  geth.log  \nethminer -G  // -G  for  GPU, -M  for  benchmark\ntail -f geth.log  ethminer \u5728\u7aef\u53e38545\uff08geth\u4e2d\u7684\u9ed8\u8ba4RPC\u7aef\u53e3\uff09\u4e0a\u4e0egeth\u8fdb\u884c\u901a\u4fe1\u3002\n\u4f60\u53ef\u4ee5\u901a\u8fc7\u7ed9 geth \u6307\u5b9a --rpcport \u9009\u9879\u6765\u6539\u53d8\u5b83\u3002\nEthminer\u5c06\u5728\u4efb\u4f55\u6e2f\u53e3\u627e\u5230geth\u3002\n\u6ce8\u610f\u4f60\u9700\u8981\u7528 --rpccorsdomain localhost \u8bbe\u7f6eCORS\u5934\u3002\n\u4f60\u4e5f\u53ef\u4ee5\u7528 -F http\uff1a//127.0.0.1\uff1a3301 \u5728 ethminer \u4e0a\u8bbe\u7f6e\u7aef\u53e3\u3002\n\u5982\u679c\u4f60\u60f3\u8981\u5728\u540c\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u6316\u6398\u591a\u4e2a\u5b9e\u4f8b\uff0c\u90a3\u4e48\u8bbe\u7f6e\u8fd9\u4e9b\u7aef\u53e3\u662f\u5fc5\u8981\u7684\uff0c\u5c3d\u7ba1\u8fd9\u6709\u4e9b\u6ca1\u6709\u610f\u4e49\u3002\n\u5982\u679c\u60a8\u6b63\u5728\u6d4b\u8bd5\u79c1\u6709\u94fe\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u4f7f\u7528CPU\u6316\u6398\u3002  ::: {.note}\n::: {.admonition-title}\nNote\n:::  \u9664\u975e\u4f60\u60f3\u5728GPU\u6316\u6398\u7684TOP\u4e0a\u8fdb\u884cCPU\u6316\u6398\uff0c\u5426\u5219\u4f60\u4e0d\u9700\u8981\u7ed9 geth \u9009\u9879\u6216\u8005\u5728\u63a7\u5236\u53f0\u542f\u52a8\u77ff\u5de5\u3002\n:::  \u5982\u679c ethminer \u7684\u9ed8\u8ba4\u503c\u4e0d\u8d77\u4f5c\u7528\uff0c\u8bf7\u5c1d\u8bd5\u4f7f\u7528 --opencl-device X \u6307\u5b9aOpenCL\u8bbe\u5907\uff0c\u5176\u4e2dX\u662f{0,1,2\uff0c...}\u3002\n\u5f53\u7528 -M \uff08benchmark\uff09\u8fd0\u884c ethminer \u65f6\uff0c\u4f60\u5e94\u8be5\u770b\u5230\u5982\u4e0b\u7684\u4e1c\u897f\uff1a  Benchmarking on platform:  {   platform :  NVIDIA CUDA ,  device :  GeForce GTX 750 Ti ,  version :  OpenCL 1.1 CUDA   } \nBenchmarking on platform:  {   platform :  Apple ,  device :  Intel(R) Xeon(R) CPU E5-1620 v2 @ 3.70GHz ,  version :  OpenCL 1.2    }   \u8c03\u8bd5 geth \uff1a  geth  --rpccorsdomain  localhost  --verbosity  6   2  geth.log  \u8c03\u8bd5\u77ff\u5de5\uff1a  make -DCMAKE_BUILD_TYPE = Debug -DETHASHCL = 1  -DGUI = 0 \ngdb --args ethminer -G -M  ::: {.note}\n::: {.admonition-title}\nNote\n:::  \u5728GPU\u6316\u6398\u65f6\uff0chashrate\u4fe1\u606f\u5728 geth \u4e2d\u4e0d\u53ef\u7528  :::  \u7528 ethminer \u68c0\u67e5\u4f60\u7684hashrate\uff0c miner.hashrate \u5c06\u603b\u662f\u62a5\u544a0\u3002", 
            "title": "\u4e0egeth\u4e00\u8d77\u4f7f\u7528ethminer"
        }, 
        {
            "location": "/mining/gpu/#ethminereth", 
            "text": "", 
            "title": "\u7528ethminer\u548ceth"
        }, 
        {
            "location": "/mining/gpu/#gpu_1", 
            "text": "\u4e3a\u4e86\u5728\u5355\u4e2aGPU\u4e0a\u6316\u6398\uff0c\u6240\u6709\u9700\u8981\u5b8c\u6210\u7684\u5de5\u4f5c\u662f\u4f7f\u7528\u4ee5\u4e0b\u53c2\u6570\u6765\u8fd0\u884ceth\uff1a  eth -v  1  -a 0xcadb3223d4eebcaa7b40ec5722967ced01cfc8f2 --client-name  OPTIONALNAMEHERE  -x  50  -m on -G   -v 1  \u5c06\u8be6\u7ec6\u7a0b\u5ea6\u8bbe\u7f6e\u4e3a1.\u8ba9\u6211\u4eec\u4e0d\u8981\u88ab\u90ae\u4ef6\u5783\u573e\u90ae\u4ef6\u3002  -a YOURWALLETADDRESS  \u8bbe\u7f6e\u91c7\u77ff\u5956\u52b1\u5c06\u4f1a\u53bb\u7684\u786c\u5e01\u5e93\u3002,\u4e0a\u9762\u7684\u5730\u5740\u53ea\u662f\u4e00\u4e2a\u4f8b\u5b50\u3002,\u8fd9\u4e2a\u8bba\u70b9\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u786e\u4fdd\u4e0d\u8981\u5728\u4f60\u7684\u94b1\u5305\u5730\u5740\u9519\u8bef\uff0c\u5426\u5219\u4f60\u5c06\u4e0d\u4f1a\u5f97\u5230\u4ee5\u592a\u4ed8\u51fa\u3002  --client-name \"OPTIONAL\"  \u8bbe\u7f6e\u53ef\u9009\u7684\u5ba2\u6237\u7aef\u540d\u79f0\u4ee5\u5728\u7f51\u7edc\u4e0a\u8bc6\u522b\u60a8\u7684\u8eab\u4efd  -x 50  \u8981\u6c42\u5927\u91cf\u7684\u540c\u4f34\u3002,\u5e2e\u52a9\u5728\u4e00\u5f00\u59cb\u627e\u5230\u540c\u884c\u3002  -m on  \u5176\u5b9e\u63a8\u51fa\u4e0e\u91c7\u77ff\u3002  -G  \u8bbe\u7f6eGPU\u6316\u6398\u3002   \u5f53\u5ba2\u6237\u7aef\u8fd0\u884c\u65f6\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528geth attach`\u6216[ethconsole]\uff08 https://github.com/ethereum/ethereum-console \uff09\u4e0e\u5b83\u8fdb\u884c\u4ea4\u4e92\u3002", 
            "title": "\u5728\u5355\u4e2aGPU\u4e0a\u6316\u6398"
        }, 
        {
            "location": "/mining/gpu/#gpu_2", 
            "text": "\u4f7f\u7528\u591aGPU\u548ceth\u8fdb\u884c\u6316\u6398\u4e0e\u4f7f\u7528geth\u548c\u591aGPU\u8fdb\u884c\u6316\u6398\u975e\u5e38\u76f8\u4f3c\u3002\n\u786e\u4fdd\u6b63\u786e\u8fd0\u884c\u60a8\u7684coinbase\u5730\u5740\u7684eth\u8282\u70b9\uff1a  eth -v  1  -a 0xcadb3223d4eebcaa7b40ec5722967ced01cfc8f2 --client-name  OPTIONALNAMEHERE  -x  50  -j  \u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u8fd8\u6dfb\u52a0\u4e86-j\u53c2\u6570\uff0c\u4ee5\u4fbf\u5ba2\u6237\u7aef\u53ef\u4ee5\u542f\u7528JSON-RPC\u670d\u52a1\u5668\u4e0eethminer\u5b9e\u4f8b\u8fdb\u884c\u901a\u4fe1\u3002\n\u6b64\u5916\uff0c\u6211\u4eec\u5220\u9664\u4e86\u91c7\u77ff\u76f8\u5173\u7684\u8bba\u70b9\uff0c\u56e0\u4e3a\u4e59\u80fa\u5c06\u73b0\u5728\u4e3a\u6211\u4eec\u505a\u91c7\u77ff\u3002,\u5bf9\u4e8e\u60a8\u7684\u6bcf\u4e2aGPU\u6267\u884c\u4e00\u4e2a\u4e0d\u540c\u7684\u4e59\u80fa\u5b9e\u4f8b\uff1a  ethminer --no-precompute -G --opencl-device X  \u5176\u4e2dX\u662f\u60a8\u5e0c\u671bethminer\u4f7f\u7528{0,1,2\uff0c...}\u7684openCL\u8bbe\u5907\u5bf9\u5e94\u7684\u7d22\u5f15\u53f7\u3002\n\u4e3a\u4e86\u8f7b\u677e\u83b7\u5f97OpenCL\u8bbe\u5907\u5217\u8868\uff0c\u60a8\u53ef\u4ee5\u6267\u884c ethminer --list-devices \uff0c\u5b83\u5c06\u63d0\u4f9bOpenCL\u53ef\u4ee5\u68c0\u6d4b\u5230\u7684\u6240\u6709\u8bbe\u5907\u7684\u5217\u8868\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u8bbe\u5907\u7684\u4e00\u4e9b\u9644\u52a0\u4fe1\u606f\u3002  Below is a sample output:  [0] GeForce GTX 770      CL_DEVICE_TYPE: GPU      CL_DEVICE_GLOBAL_MEM_SIZE: 4286345216      CL_DEVICE_MAX_MEM_ALLOC_SIZE: 1071586304      CL_DEVICE_MAX_WORK_GROUP_SIZE: 1024   \u6700\u540e``\u65e0\u9884\u8ba1\u7b97'\u7684\u8bba\u70b9\u8981\u6c42\u4e59\u65b9\u4e0d\u8981\u63d0\u524d\u521b\u5efa\u4e0b\u4e00\u4e2a\u65f6\u4ee3\u7684DAG\u3002\n\u867d\u7136\u4e0d\u5efa\u8bae\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u6bcf\u5f53\u51fa\u73b0\u65f6\u4ee3\u8f6c\u6362\u65f6\u90fd\u4f1a\u6709\u91c7\u77ff\u4e2d\u65ad\u3002", 
            "title": "\u5728\u591a\u4e2aGPU\u4e0a\u6316\u6398"
        }, 
        {
            "location": "/mining/gpu/#_2", 
            "text": "\u91c7\u77ff\u80fd\u529b\u5f80\u5f80\u968f\u7740\u5185\u5b58\u5e26\u5bbd\u7684\u6269\u5927\u800c\u589e\u957f\n\u6211\u4eec\u7684\u5b9e\u73b0\u662f\u7528OpenCL\u7f16\u5199\u7684\uff0c\u800cAMD\u7684GPU\u901a\u5e38\u6bd4NVidia\u66f4\u80fd\u652f\u6301OpenCL\u3002\n\u7ecf\u9a8c\u8bc1\u636e\u8868\u660e\uff0cAMD\u7684GPU\u5728\u4ef7\u683c\u4e0a\u6bd4NVidia\u7684\u4ea7\u54c1\u6709\u66f4\u597d\u7684\u6316\u6398\u6027\u80fd\u3002  \u8981\u5bf9\u5355\u8bbe\u5907\u8bbe\u7f6e\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7-M\u9009\u9879\u5728\u57fa\u51c6\u6d4b\u8bd5\u6a21\u5f0f\u4e0b\u4f7f\u7528ethminer\uff1a  ethminer -G -M  \u5982\u679c\u4f60\u6709\u5f88\u591a\u8bbe\u5907\uff0c\u5e76\u4e14\u4f60\u60f3\u5206\u522b\u5bf9\u6bcf\u4e00\u4e2a\u8bbe\u5907\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528--opencl-device\u9009\u9879\uff0c\u7c7b\u4f3c\u4e8e\u4e0a\u4e00\u8282\uff1a  ethminer -G -M --opencl-device X  \u4f7f\u7528ethminer --list-devices \u5217\u51fa\u53ef\u80fd\u7684\u6570\u5b57\u6765\u4ee3\u66ffX {0,1,2\uff0c...}\u3002  \u8981\u5f00\u59cb\u5728Windows\u4e0a\u6316\u6398\uff0c\u9996\u5148[\u4e0b\u8f7dgeth\u7a97\u53e3\u4e8c\u8fdb\u5236]\uff08https://build.ethereum.org/builds/Windows%20Go%20master%20branch/\uff09\u3002   \u89e3\u538b\u7f29Geth\uff08\u53f3\u952e\u5355\u51fb\u5e76\u9009\u62e9\u89e3\u538b\u7f29\uff09\u5e76\u542f\u52a8\u547d\u4ee4\u63d0\u793a\u7b26\u3002\u4f7f\u7528cd\u5bfc\u822a\u5230Geth\u6570\u636e\u6587\u4ef6\u5939\u7684\u4f4d\u7f6e\uff08\u4f8b\u5982\uff0ccd /\u8f6c\u5230C\u9a71\u52a8\u5668\uff09  \u901a\u8fc7\u8f93\u5165 geth --rpc \u5f00\u59cbgeth\u3002   \u53ea\u8981\u4f60\u8f93\u5165\u8fd9\u4e2a\uff0c\u4ee5\u592a\u574a\u533a\u5757\u94fe\u5c06\u5f00\u59cb\u4e0b\u8f7d\u3002\n\u6709\u65f6\u4f60\u7684\u9632\u706b\u5899\u53ef\u80fd\u4f1a\u963b\u6b62\u540c\u6b65\u8fc7\u7a0b\uff08\u8fd9\u6837\u505a\u4f1a\u63d0\u793a\u4f60\uff09\u3002\n\u5982\u679c\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u8bf7\u70b9\u51fb\u201c\u5141\u8bb8\u8bbf\u95ee\u201d\u3002   \u9996\u5148[\u4e0b\u8f7d\u5e76\u5b89\u88c5ethminer]\uff08http://cryptomining-blog.com/tag/ethminer-cuda-download/\uff09\uff0cC ++\u6316\u6398\u8f6f\u4ef6\uff08\u60a8\u7684\u9632\u706b\u5899\u6216Windows\u672c\u8eab\u53ef\u80fd\u4f1a\u6267\u884c\uff0c\u5141\u8bb8\u8bbf\u95ee  \u6253\u5f00\u53e6\u4e00\u4e2a\u547d\u4ee4\u63d0\u793a\u7b26\uff08\u4fdd\u7559\u7b2c\u4e00\u4e2a\u547d\u4ee4\u63d0\u793a\u7b26\uff09\uff0c\u901a\u8fc7\u952e\u5165cd / Program \\ Files / Ethereum\uff08++\uff09/ release`\u6765\u6539\u53d8\u76ee\u5f55  \u73b0\u5728\u786e\u4fddgeth\u5df2\u7ecf\u5b8c\u6210\u540c\u6b65\u533a\u5757\u94fe\u3002,\u5982\u679c\u4e0d\u518d\u540c\u6b65\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u547d\u4ee4\u63d0\u793a\u7b26\u4e0b\u952e\u5165 ethminer -G \u5f00\u59cb\u6316\u6398\u8fc7\u7a0b   \u6b64\u65f6\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\n\u5982\u679c\u51fa\u73b0\u9519\u8bef\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u6309\u4e0b`\u6765\u4e2d\u6b62\u77ff\u5de5\n\u5982\u679c\u9519\u8bef\u63d0\u793a\u201c\u5185\u5b58\u4e0d\u8db3\u201d\uff0c\u90a3\u4e48\u60a8\u7684GPU\u6ca1\u6709\u8db3\u591f\u7684\u5185\u5b58\u6765\u6316\u6398\u4ee5\u592a\u7f51\u3002", 
            "title": "\u57fa\u51c6"
        }, 
        {
            "location": "/mining/pools/", 
            "text": "\u77ff\u6c60\n\n\n\u77ff\u6c60\u662f\u5408\u4f5c\u793e\uff0c\u65e8\u5728\u901a\u8fc7\u96c6\u4e2d\u53c2\u4e0e\u77ff\u5de5\u7684\u91c7\u77ff\u529b\u91cf\u6765\u5e73\u8861\u9884\u671f\u7684\u6536\u5165\u3002\n\u4f5c\u4e3a\u56de\u62a5\uff0c\u4ed6\u4eec\u901a\u5e38\u4f1a\u5411\u60a8\u6536\u53d60-5\uff05\u7684\u91c7\u77ff\u5956\u52b1\u3002\n\u77ff\u6c60\u4ece\u4e2d\u592e\u8d26\u6237\u63d0\u4ea4\u6709\u5de5\u4f5c\u8bc1\u660e\u7684\u533a\u5757\uff0c\u5e76\u6309\u7167\u5176\u63d0\u4f9b\u7684\u91c7\u77ff\u6743\u6bd4\u4f8b\u5411\u53c2\u4e0e\u8005\u91cd\u65b0\u5206\u914d\u62a5\u916c\u3002\n\n\n\n\nWarning\n\n\n\u5927\u591a\u6570\u91c7\u77ff\u6c60\u6d89\u53ca\u7b2c\u4e09\u65b9\uff0c\u4e2d\u592e\u7ec4\u4ef6\uff0c\u8fd9\u610f\u5473\u7740\u4ed6\u4eec\u662f\u4e0d\u53ef\u9760\u7684\u3002\n\u6362\u4e00\u79cd\u8bf4\u6cd5\uff0c \u77ff\u6c60\u8fd0\u8425\u5546\u53ef\u80fd\u4f1a\u9003\u907f\u60a8\u7684\u6536\u5165\u3002 \u8c28\u614e\u884c\u4e8b\u3002\n\u6709\u8bb8\u591a\u4e0d\u53d7\u4fe1\u4efb\u7684\uff0c\u5206\u6563\u7684\u5f00\u6e90\u4ee3\u7801\u5e93\u3002\n\n\n\n\n\n\nWarning\n\n\n\u77ff\u6c60\u53ea\u80fd\u5916\u5305\u5de5\u4f5c\u91cf\u8ba1\u7b97, \u4ed6\u4eec\u4e0d\u9a8c\u8bc1\u5757\u6216\u8fd0\u884c\u865a\u62df\u673a\u6765\u68c0\u67e5\u6267\u884c\u4e8b\u52a1\u5e26\u6765\u7684\u72b6\u6001\u8f6c\u6362\u3002\n\u8fd9\u6709\u6548\u5730\u4f7f\u6c60\u5728\u5b89\u5168\u6027\u65b9\u9762\u8868\u73b0\u5f97\u50cf\u5355\u4e2a\u8282\u70b9, \u6240\u4ee5\u4ed6\u4eec\u7684\u6210\u957f\u4f1a\u9020\u6210\n51\uff05\n\u7684\u96c6\u4e2d\u5316\u98ce\u9669\u3002\n\u786e\u4fdd\u9075\u5faa\u7f51\u7edc\u5bb9\u91cf\u5206\u5e03\uff0c\u4e0d\u8981\u8ba9\u77ff\u6c60\u53d8\u5f97\u592a\u5927\u3002\n\n\n\n\n\u91c7\u77ff\u6c60\n\n\n\n\ncoinotron\n\n\nnanopool\n\n\nethpool\n - \u53ef\u9884\u6d4b\u7684\u72ec\u7acb\u91c7\u77ff\uff0c\u975e\u4f20\u7edf\u7684\u652f\u4ed8\u65b9\u6848\uff0c\u9644\u5c5e\u4e8e\netherchain.org\n\u3002\n\n\nsupernova\n\n\ncoinmine.pl\n\n\neth.pp.ua\n\n\ntalkether\n - \u975e\u5e38\u89c4\u6d3e\u606f\u65b9\u6848\uff0c\u90e8\u5206\u5206\u6563\n\n\nweipool\n\n\nethereumpool\n\n\npooleum\n\n\nalphapool\n\n\ncryptopool\n\n\nunitedminers\n\n\n2miners\n\n\ndwarfpool\n - \u5c3d\u91cf\u907f\u514d\u8fd9\u4e00\u70b9\uff08\u76ee\u524d\u8d85\u8fc750\uff05\u7684\u7f51\u7edc\uff09\n\n\nlaintimes\n - \u505c\u4ea7", 
            "title": "\u77ff\u6c60"
        }, 
        {
            "location": "/mining/pools/#_1", 
            "text": "\u77ff\u6c60\u662f\u5408\u4f5c\u793e\uff0c\u65e8\u5728\u901a\u8fc7\u96c6\u4e2d\u53c2\u4e0e\u77ff\u5de5\u7684\u91c7\u77ff\u529b\u91cf\u6765\u5e73\u8861\u9884\u671f\u7684\u6536\u5165\u3002\n\u4f5c\u4e3a\u56de\u62a5\uff0c\u4ed6\u4eec\u901a\u5e38\u4f1a\u5411\u60a8\u6536\u53d60-5\uff05\u7684\u91c7\u77ff\u5956\u52b1\u3002\n\u77ff\u6c60\u4ece\u4e2d\u592e\u8d26\u6237\u63d0\u4ea4\u6709\u5de5\u4f5c\u8bc1\u660e\u7684\u533a\u5757\uff0c\u5e76\u6309\u7167\u5176\u63d0\u4f9b\u7684\u91c7\u77ff\u6743\u6bd4\u4f8b\u5411\u53c2\u4e0e\u8005\u91cd\u65b0\u5206\u914d\u62a5\u916c\u3002   Warning  \u5927\u591a\u6570\u91c7\u77ff\u6c60\u6d89\u53ca\u7b2c\u4e09\u65b9\uff0c\u4e2d\u592e\u7ec4\u4ef6\uff0c\u8fd9\u610f\u5473\u7740\u4ed6\u4eec\u662f\u4e0d\u53ef\u9760\u7684\u3002\n\u6362\u4e00\u79cd\u8bf4\u6cd5\uff0c \u77ff\u6c60\u8fd0\u8425\u5546\u53ef\u80fd\u4f1a\u9003\u907f\u60a8\u7684\u6536\u5165\u3002 \u8c28\u614e\u884c\u4e8b\u3002\n\u6709\u8bb8\u591a\u4e0d\u53d7\u4fe1\u4efb\u7684\uff0c\u5206\u6563\u7684\u5f00\u6e90\u4ee3\u7801\u5e93\u3002    Warning  \u77ff\u6c60\u53ea\u80fd\u5916\u5305\u5de5\u4f5c\u91cf\u8ba1\u7b97, \u4ed6\u4eec\u4e0d\u9a8c\u8bc1\u5757\u6216\u8fd0\u884c\u865a\u62df\u673a\u6765\u68c0\u67e5\u6267\u884c\u4e8b\u52a1\u5e26\u6765\u7684\u72b6\u6001\u8f6c\u6362\u3002\n\u8fd9\u6709\u6548\u5730\u4f7f\u6c60\u5728\u5b89\u5168\u6027\u65b9\u9762\u8868\u73b0\u5f97\u50cf\u5355\u4e2a\u8282\u70b9, \u6240\u4ee5\u4ed6\u4eec\u7684\u6210\u957f\u4f1a\u9020\u6210 51\uff05 \u7684\u96c6\u4e2d\u5316\u98ce\u9669\u3002\n\u786e\u4fdd\u9075\u5faa\u7f51\u7edc\u5bb9\u91cf\u5206\u5e03\uff0c\u4e0d\u8981\u8ba9\u77ff\u6c60\u53d8\u5f97\u592a\u5927\u3002", 
            "title": "\u77ff\u6c60"
        }, 
        {
            "location": "/mining/pools/#_2", 
            "text": "coinotron  nanopool  ethpool  - \u53ef\u9884\u6d4b\u7684\u72ec\u7acb\u91c7\u77ff\uff0c\u975e\u4f20\u7edf\u7684\u652f\u4ed8\u65b9\u6848\uff0c\u9644\u5c5e\u4e8e etherchain.org \u3002  supernova  coinmine.pl  eth.pp.ua  talkether  - \u975e\u5e38\u89c4\u6d3e\u606f\u65b9\u6848\uff0c\u90e8\u5206\u5206\u6563  weipool  ethereumpool  pooleum  alphapool  cryptopool  unitedminers  2miners  dwarfpool  - \u5c3d\u91cf\u907f\u514d\u8fd9\u4e00\u70b9\uff08\u76ee\u524d\u8d85\u8fc750\uff05\u7684\u7f51\u7edc\uff09  laintimes  - \u505c\u4ea7", 
            "title": "\u91c7\u77ff\u6c60"
        }, 
        {
            "location": "/mining/resources/", 
            "text": "\u91c7\u77ff\u8d44\u6e90\n\n\n\n\n\u919a\u94fe\u4e0a24\u5c0f\u65f6\u7684\u9876\u7ea7\u77ff\u5de5\n\n\n2015\u5e748\u6708\u77ff\u6c60\u54c8\u5e0c\u7387\u5206\u5e03\n\n\n\u8bba\u575b\u4e0a\u6ca1\u6709\u7ef4\u62a4\u7684\u6c60\u5217\u8868\n\n\n\u52a0\u5bc6\u6bd4\u8f83\u6316\u6398\u76c8\u5229\u80fd\u529b\u8ba1\u7b97\u5668\n\n\n\u5728\u52a0\u5bc6wizzard\u4e0a\u6316\u6398\u76c8\u5229\u80fd\u529b\u8ba1\u7b97\u5668\n\n\n\u91c7\u7528etherscan\u7684\u6316\u6398\u76c8\u5229\u80fd\u529b\u8ba1\u7b97\u5668\n\n\n\u5728\u4ee5\u592a\u7f51\u4e0a\u6316\u6398\u76c8\u5229\u80fd\u529b\u8ba1\u7b97\u5668\n\n\n\u5728etherscan\u4e0a\u6316\u6398\u96be\u5ea6\u56fe\n\n\n\n\nPOS\u4e0ePOW\n\n\n\n\nELI5\uff1aPOS\u548cPOW\u7684\u533a\u522b\uff1f \n\n\n\u6743\u76ca\u8bc1\u660e: \u6211\u5982\u4f55\u5b66\u4f1a\u7231\u4e3b\u89c2\u5f31\n\n\n\u6709\u4eba\u53ef\u4ee5\u89e3\u91ca\u4e3a\u4ec0\u4e48\u5207\u6362\u5230PoS\uff1f,\u5982\u4f55\u548c\u4f55\u65f6\u3002", 
            "title": "\u8d44\u6e90"
        }, 
        {
            "location": "/mining/resources/#_1", 
            "text": "\u919a\u94fe\u4e0a24\u5c0f\u65f6\u7684\u9876\u7ea7\u77ff\u5de5  2015\u5e748\u6708\u77ff\u6c60\u54c8\u5e0c\u7387\u5206\u5e03  \u8bba\u575b\u4e0a\u6ca1\u6709\u7ef4\u62a4\u7684\u6c60\u5217\u8868  \u52a0\u5bc6\u6bd4\u8f83\u6316\u6398\u76c8\u5229\u80fd\u529b\u8ba1\u7b97\u5668  \u5728\u52a0\u5bc6wizzard\u4e0a\u6316\u6398\u76c8\u5229\u80fd\u529b\u8ba1\u7b97\u5668  \u91c7\u7528etherscan\u7684\u6316\u6398\u76c8\u5229\u80fd\u529b\u8ba1\u7b97\u5668  \u5728\u4ee5\u592a\u7f51\u4e0a\u6316\u6398\u76c8\u5229\u80fd\u529b\u8ba1\u7b97\u5668  \u5728etherscan\u4e0a\u6316\u6398\u96be\u5ea6\u56fe", 
            "title": "\u91c7\u77ff\u8d44\u6e90"
        }, 
        {
            "location": "/mining/resources/#pospow", 
            "text": "ELI5\uff1aPOS\u548cPOW\u7684\u533a\u522b\uff1f   \u6743\u76ca\u8bc1\u660e: \u6211\u5982\u4f55\u5b66\u4f1a\u7231\u4e3b\u89c2\u5f31  \u6709\u4eba\u53ef\u4ee5\u89e3\u91ca\u4e3a\u4ec0\u4e48\u5207\u6362\u5230PoS\uff1f,\u5982\u4f55\u548c\u4f55\u65f6\u3002", 
            "title": "POS\u4e0ePOW"
        }, 
        {
            "location": "/contracts-and-transactions/account-types-gas-and-transactions/", 
            "text": "\u8d26\u6237\u7c7b\u578b\uff0c\u71c3\u6599\u548c\u4ea4\u6613\n\n\nEOA\u4e0e\u5408\u7ea6\u8d26\u6237\n\n\n\u4ee5\u592a\u7f51\u4e2d\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u8d26\u6237\n\n\n:   - \u5916\u90e8\u62e5\u6709\u7684\u5e10\u6237\n    - \u5408\u7ea6\u8d26\u6237\n\n\n\u5b81\u9759\u4e2d\u53ef\u4ee5\u6d88\u9664\u8fd9\u79cd\u533a\u522b\u3002\n\n\n\u5916\u90e8\u8d26\u6237\uff08EOAs\uff09\n\n\n\u4e00\u4e2a\u5916\u90e8\u63a7\u5236\u7684\u8d26\u6237\n\n\n\n\nhas an ether balance,\n\n\ncan send transactions (ether transfer or trigger contract code),\n\n\nis controlled by private keys,\n\n\nhas no associated code.\n\n\n\n\n\u5408\u7ea6\u5e10\u6237\n\n\nA contract\n\n\n\n\nhas an ether balance,\n\n\nhas associated code,\n\n\ncode execution is triggered by transactions or messages (calls) received from other contracts.\n\n\nwhen executed\n\n\nperform operations of arbitrary complexity (Turing completeness)\n\n\nmanipulate its own persistent storage, i.e., can have its own permanent state\n\n\ncan call other contracts\n\n\n\n\n\n\n\n\nAll action on the Ethereum block chain is set in motion by transactions\nfired from externally owned accounts. Every time a contract account\nreceives a transaction, its code is executed as instructed by the input\nparameters sent as part of the transaction. The contract code is\nexecuted by the Ethereum Virtual Machine on each node participating in\nthe network as part of their verification of new blocks.\n\n\nThis execution needs to be completely deterministic, its only context is\nthe position of the block on the blockchain and all data available. The\nblocks on the blockchain represent units of time, the blockchain itself\nis a temporal dimension and represents the entire history of states at\nthe discrete time points designated by the blocks on the chain.\n\n\nAll ether balances and values are denominated in units of wei: 1 ether\nis 1e18 wei.\n\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\n\n\"Contracts\" in Ethereum should not be seen as something that should be\n\"fulfilled\" or \"complied with\"; rather, they are more like\n\"autonomous agents\" that live inside of the Ethereum execution\nenvironment, always executing a specific piece of code when \"poked\" by\na message or transaction, and having direct control over their own ether\nbalance and their own key/value store to store their permanent state.\n:::\n\n\n\u4ec0\u4e48\u662f\u4ea4\u6613\n\n\nThe term \"transaction\" is used in Ethereum to refer to the signed data\npackage that stores a message to be sent from an externally owned\naccount to another account on the blockchain.\n\n\nTransactions contain:\n\n\n:   - the recipient of the message,\n    - a signature identifying the sender and proving their intention to send the message via the blockchain to the recipient,\n    - \nVALUE\n field - The amount of wei to transfer from the sender to the recipient,\n    - an optional data field, which can contain the message sent to a contract,\n    - a \nSTARTGAS\n value, representing the maximum number of computational steps the transaction execution is allowed to take,\n    - a \nGASPRICE\n value, representing \"Wei per gas\". One Wei corresponds to 0.000000000000000001 Ether.\n\n\n\u4ec0\u4e48\u662f\u4fe1\u606f\n\n\nContracts have the ability to send \"messages\" to other contracts.\nMessages are virtual objects that are never serialized and exist only in\nthe Ethereum execution environment. They can be conceived of as function\ncalls.\n\n\nA message contains:\n\n\n:   - the sender of the message (implicit).\n    - the recipient of the message\n    - \nVALUE\n field - The amount of wei to transfer alongside the\n        message to the contract address,\n    - an optional data field, that is the actual input data to the\n        contract\n    - a \nSTARTGAS\n value, which limits the maximum amount of gas the\n        code execution triggered by the message can incur.\n\n\nEssentially, a message is like a transaction, except it is produced by a\ncontract and not an external actor. A message is produced when a\ncontract currently executing code executes the \nCALL\n or \nDELEGATECALL\n\nopcodes, which produces and executes a message. Like a transaction, a\nmessage leads to the recipient account running its code. Thus, contracts\ncan have relationships with other contracts in exactly the same way that\nexternal actors can.\n\n\n\u4ec0\u4e48\u662f\u71c3\u6599\uff1f\n\n\nEthereum implements an execution environment on the blockchain called\nthe Ethereum Virtual Machine (EVM). Every node participating in the\nnetwork runs the EVM as part of the block verification protocol. They go\nthrough the transactions listed in the block they are verifying and run\nthe code as triggered by the transaction within the EVM. Each and every\nfull node in the network does the same calculations and stores the same\nvalues. Clearly Ethereum is not about optimising efficiency of\ncomputation. Its parallel processing is redundantly parallel. This is to\noffer an efficient way to reach consensus on the system state without\nneeding trusted third parties, oracles or violence monopolies. But\nimportantly they are not there for optimal computation. The fact that\ncontract executions are redundantly replicated across nodes, naturally\nmakes them expensive, which generally creates an incentive not to use\nthe blockchain for computation that can be done offchain.\n\n\nWhen you are running a decentralized application (dapp), it interacts\nwith the blockchain to read and modify its state, but dapps will\ntypically only put the business logic and state that are crucial for\nconsensus on the blockchain.\n\n\nWhen a contract is executed as a result of being triggered by a message\nor transaction, every instruction is executed on every node of the\nnetwork. This has a cost: for every executed operation there is a\nspecified cost, expressed in a number of gas units.\n\n\nGas is the name for the execution fee that senders of transactions need\nto pay for every operation made on an Ethereum blockchain. The name gas\nis inspired by the view that this fee acts as cryptofuel, driving the\nmotion of smart contracts. Gas is purchased for ether from the miners\nthat execute the code. Gas and ether are decoupled deliberately since\nunits of gas align with computation units having a natural cost, while\nthe price of ether generally fluctuates as a result of market forces.\nThe two are mediated by a free market: the price of gas is actually\ndecided by the miners, who can refuse to process a transaction with a\nlower gas price than their minimum limit. To get gas you simply need to\nadd ether to your account. The Ethereum clients automatically purchase\ngas for your ether in the amount you specify as your maximum expenditure\nfor the transaction.\n\n\nThe Ethereum protocol charges a fee per computational step that is\nexecuted in a contract or transaction to prevent deliberate attacks and\nabuse on the Ethereum network. Every transaction is required to include\na gas limit and a fee that it is willing to pay per gas. Miners have the\nchoice of including the transaction and collecting the fee or not. If\nthe total amount of gas used by the computational steps spawned by the\ntransaction, including the original message and any sub-messages that\nmay be triggered, is less than or equal to the gas limit, then the\ntransaction is processed. If the total gas exceeds the gas limit, then\nall changes are reverted, except that the transaction is still valid and\nthe fee can still be collected by the miner. All excess gas not used by\nthe transaction execution is reimbursed to the sender as Ether. You do\nnot need to worry about overspending, since you are only charged for the\ngas you consume. This means that it is useful as well as safe to send\ntransactions with a gas limit well above the estimates.\n\n\n\u4f30\u7b97\u4ea4\u6613\u6210\u672c\n\n\nThe total ether cost of a transaction is based on 2 factors:\n\n\ngasUsed\n is the total gas that is consumed by the transaction\n\n\ngasPrice\n price (in ether) of one unit of gas specified in the transaction\n\n\nTotal cost = gasUsed * gasPrice\n\n\ngasUsed\n\n\nEach operation in the EVM was assigned a number of how much gas it\nconsumes. \ngasUsed\n is the sum of all the gas for all the operations\nexecuted. There is a \nspreadsheet\n which offers a\nglimpse to some of the analysis behind this.\n\n\nFor estimating \ngasUsed\n, there is an \nestimateGas API\n that can be used but has some caveats.\n\n\ngasPrice\n\n\nA user constructs and signs a transaction, and each user may specify\nwhatever \ngasPrice\n they desire, which can be zero. However, the\nEthereum clients launched at Frontier had a default gasPrice of 0.05e12\nwei. As miners optimize for their revenue, if most transactions are\nbeing submitted with a gasPrice of 0.05e12 wei, it would be difficult to\nconvince a miner to accept a transaction that specified a lower, or\nzero, gasPrice.\n\n\n\u793a\u4f8b\u4ea4\u6613\u516c\u53f8\n\n\nLet's take a contract that just adds 2 numbers. The EVM OPCODE \nADD\n\nconsumes 3 gas.\n\n\nThe approximate cost, using the default gas price (as of January 2016),\nwould be:\n\n\n3 * 0.05e12 = 1.5e11 wei\n\n\nSince 1 ether is 1e18 wei, the total cost would be 0.00000015 Ether.\n\n\nThis is a simplification since it ignores some costs, such as the cost\nof passing the 2 numbers to contract, before they can even be added.\n\n\n\n\nquestion\n\n\ngas fees\n\n\ngas cost calculator\n\n\nEthereum Gas Prices\n\n\n\n\nOperation Name      Gas Cost   Remark\n\n\n\n\nstep                1          default amount per execution cycle\n  stop                0          free\n  suicide sha3        0 20       free\n  sload               20         get from permanent storage\n  sstore balance      100 20     put into permanent storage\n  create              100        contract creation\n  call                20         initiating a read-only call\n  memory              1          every additional word when expanding memory\n  txdata              5          every byte of data or code for a transaction\n  transaction         500        base fee transaction\n  contract creation   53000      changed in homestead from 21000\n\n\n\u5e10\u6237\u4e92\u52a8\u793a\u4f8b - \u6295\u6ce8\u5408\u7ea6\n\n\nAs previously mentioned, there are two types of accounts:\n\n\n\n\nExternally owned account (EOAs)\n: an account controlled by a\n    private key, and if you own the private key associated with the EOA\n    you have the ability to send ether and messages from it.\n\n\nContract\n: an account that has its own code, and is controlled by code.\n\n\n\n\nBy default, the Ethereum execution environment is lifeless; nothing\nhappens and the state of every account remains the same. However, any\nuser can trigger an action by sending a transaction from an externally\nowned account, setting Ethereum's wheels in motion. If the destination\nof the transaction is another EOA, then the transaction may transfer\nsome ether but otherwise does nothing. However, if the destination is a\ncontract, then the contract in turn activates, and automatically runs\nits code.\n\n\nThe code has the ability to read/write to its own internal storage (a\ndatabase mapping 32-byte keys to 32-byte values), read the storage of\nthe received message, and send messages to other contracts, triggering\ntheir execution in turn. Once execution stops, and all sub-executions\ntriggered by a message sent by a contract stop (this all happens in a\ndeterministic and synchronous order, ie. a sub-call completes fully\nbefore the parent call goes any further), the execution environment\nhalts once again, until woken by the next transaction.\n\n\nContracts generally serve four purposes:\n\n\n\n\nMaintain a data store representing something which is useful to\n    either other contracts or to the outside world; one example of this\n    is a contract that simulates a currency, and another is a contract\n    that records membership in a particular organization.\n\n\nServe as a sort of externally-owned account with a more complicated\n    access policy; this is called a \"forwarding contract\" and\n    typically involves simply resending incoming messages to some\n    desired destination only if certain conditions are met; for example,\n    one can have a forwarding contract that waits until two out of a\n    given three private keys have confirmed a particular message before\n    resending it (ie. multisig). More complex forwarding contracts have\n    different conditions based on the nature of the message sent. The\n    simplest use case for this functionality is a withdrawal limit that\n    is overrideable via some more complicated access procedure. A wallet\n    contract is a good example of this.\n\n\nManage an ongoing contract or relationship between multiple users.\n    Examples of this include a financial contract, an escrow with some\n    particular set of mediators, or some kind of insurance. One can also\n    have an open contract that one party leaves open for any other party\n    to engage with at any time; one example of this is a contract that\n    automatically pays a bounty to whoever submits a valid solution to\n    some mathematical problem, or proves that it is providing some\n    computational resource.\n\n\nProvide functions to other contracts, essentially serving as a\n    software library.\n\n\n\n\nContracts interact with each other through an activity that is\nalternately called either \"calling\" or \"sending messages\". A\n\"message\" is an object containing some quantity of ether, a byte-array\nof data of any size, the addresses of a sender and a recipient. When a\ncontract receives a message, it has the option of returning some data,\nwhich the original sender of the message can then immediately use. In\nthis way, sending a message is exactly like calling a function.\n\n\nBecause contracts can play such different roles, we expect that\ncontracts will be interacting with each other. As an example, consider a\nsituation where Alice and Bob are betting 100 GavCoin that the\ntemperature in San Francisco will not exceed 35\u00baC at any point in the\nnext year. However, Alice is very security-conscious, and as her primary\naccount uses a forwarding contract which only sends messages with the\napproval of two out of three private keys. Bob is paranoid about quantum\ncryptography, so he uses a forwarding contract which passes along only\nmessages that have been signed with Lamport signatures alongside\ntraditional ECDSA (but because he's old fashioned, he prefers to use a\nversion of Lamport sigs based on SHA256, which is not supported in\nEthereum directly).\n\n\nThe betting contract itself needs to fetch data about the San Francisco\nweather from some contract, and it also needs to talk to the GavCoin\ncontract when it wants to actually send the GavCoin to either Alice or\nBob (or, more precisely, Alice or Bob's forwarding contract). We can\nshow the relationships between the accounts thus:\n\n\n\n\nWhen Bob wants to finalize the bet, the following steps happen:\n\n\n\n\nA transaction is sent, triggering a message from Bob's EOA to his forwarding contract.\n\n\nBob's forwarding contract sends the hash of the message and the Lamport signature to a contract which functions as a Lamport     signature verification library.\n\n\nThe Lamport signature verification library sees that Bob wants a SHA256-based Lamport sig, so it calls the SHA256 library many times as needed to verify the signature.\n\n\nOnce the Lamport signature verification library returns 1, signifying that the signature has been verified, it sends a message     to the contract representing the bet.\n\n\nThe bet contract checks the contract providing the San Francisco temperature to see what the temperature is.\n\n\nThe bet contract sees that the response to the messages shows that the temperature is above 35\u00baC, so it sends a message to the GavCoin contract to move the GavCoin from its account to Bob's forwarding contract.\n\n\n\n\nNote that the GavCoin is all \"stored\" as entries in the GavCoin\ncontract's database; the word \"account\" in the context of step 6\nsimply means that there is a data entry in the GavCoin contract storage\nwith a key for the bet contract's address and a value for its balance.\nAfter receiving this message, the GavCoin contract decreases this value\nby some amount and increases the value in the entry corresponding to\nBob's forwarding contract's address. We can see these steps in the\nfollowing diagram:\n\n\n\n\n\u7b7e\u7f72\u4ea4\u6613\u79bb\u7ebf\n\n\nMaybe add this to the FAQ and point to the ethkey section of turboethereum guide?\n\n\n\n\nResilience Raw Transaction Broadcaster", 
            "title": "\u5e10\u6237\u7c7b\u578b\u71c3\u6599\u4ea4\u6613"
        }, 
        {
            "location": "/contracts-and-transactions/account-types-gas-and-transactions/#_1", 
            "text": "", 
            "title": "\u8d26\u6237\u7c7b\u578b\uff0c\u71c3\u6599\u548c\u4ea4\u6613"
        }, 
        {
            "location": "/contracts-and-transactions/account-types-gas-and-transactions/#eoa", 
            "text": "\u4ee5\u592a\u7f51\u4e2d\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u8d26\u6237  :   - \u5916\u90e8\u62e5\u6709\u7684\u5e10\u6237\n    - \u5408\u7ea6\u8d26\u6237  \u5b81\u9759\u4e2d\u53ef\u4ee5\u6d88\u9664\u8fd9\u79cd\u533a\u522b\u3002", 
            "title": "EOA\u4e0e\u5408\u7ea6\u8d26\u6237"
        }, 
        {
            "location": "/contracts-and-transactions/account-types-gas-and-transactions/#eoas", 
            "text": "\u4e00\u4e2a\u5916\u90e8\u63a7\u5236\u7684\u8d26\u6237   has an ether balance,  can send transactions (ether transfer or trigger contract code),  is controlled by private keys,  has no associated code.", 
            "title": "\u5916\u90e8\u8d26\u6237\uff08EOAs\uff09"
        }, 
        {
            "location": "/contracts-and-transactions/account-types-gas-and-transactions/#_2", 
            "text": "A contract   has an ether balance,  has associated code,  code execution is triggered by transactions or messages (calls) received from other contracts.  when executed  perform operations of arbitrary complexity (Turing completeness)  manipulate its own persistent storage, i.e., can have its own permanent state  can call other contracts     All action on the Ethereum block chain is set in motion by transactions\nfired from externally owned accounts. Every time a contract account\nreceives a transaction, its code is executed as instructed by the input\nparameters sent as part of the transaction. The contract code is\nexecuted by the Ethereum Virtual Machine on each node participating in\nthe network as part of their verification of new blocks.  This execution needs to be completely deterministic, its only context is\nthe position of the block on the blockchain and all data available. The\nblocks on the blockchain represent units of time, the blockchain itself\nis a temporal dimension and represents the entire history of states at\nthe discrete time points designated by the blocks on the chain.  All ether balances and values are denominated in units of wei: 1 ether\nis 1e18 wei.  ::: {.note}\n::: {.admonition-title}\nNote\n:::  \"Contracts\" in Ethereum should not be seen as something that should be\n\"fulfilled\" or \"complied with\"; rather, they are more like\n\"autonomous agents\" that live inside of the Ethereum execution\nenvironment, always executing a specific piece of code when \"poked\" by\na message or transaction, and having direct control over their own ether\nbalance and their own key/value store to store their permanent state.\n:::", 
            "title": "\u5408\u7ea6\u5e10\u6237"
        }, 
        {
            "location": "/contracts-and-transactions/account-types-gas-and-transactions/#_3", 
            "text": "The term \"transaction\" is used in Ethereum to refer to the signed data\npackage that stores a message to be sent from an externally owned\naccount to another account on the blockchain.  Transactions contain:  :   - the recipient of the message,\n    - a signature identifying the sender and proving their intention to send the message via the blockchain to the recipient,\n    -  VALUE  field - The amount of wei to transfer from the sender to the recipient,\n    - an optional data field, which can contain the message sent to a contract,\n    - a  STARTGAS  value, representing the maximum number of computational steps the transaction execution is allowed to take,\n    - a  GASPRICE  value, representing \"Wei per gas\". One Wei corresponds to 0.000000000000000001 Ether.", 
            "title": "\u4ec0\u4e48\u662f\u4ea4\u6613"
        }, 
        {
            "location": "/contracts-and-transactions/account-types-gas-and-transactions/#_4", 
            "text": "Contracts have the ability to send \"messages\" to other contracts.\nMessages are virtual objects that are never serialized and exist only in\nthe Ethereum execution environment. They can be conceived of as function\ncalls.  A message contains:  :   - the sender of the message (implicit).\n    - the recipient of the message\n    -  VALUE  field - The amount of wei to transfer alongside the\n        message to the contract address,\n    - an optional data field, that is the actual input data to the\n        contract\n    - a  STARTGAS  value, which limits the maximum amount of gas the\n        code execution triggered by the message can incur.  Essentially, a message is like a transaction, except it is produced by a\ncontract and not an external actor. A message is produced when a\ncontract currently executing code executes the  CALL  or  DELEGATECALL \nopcodes, which produces and executes a message. Like a transaction, a\nmessage leads to the recipient account running its code. Thus, contracts\ncan have relationships with other contracts in exactly the same way that\nexternal actors can.", 
            "title": "\u4ec0\u4e48\u662f\u4fe1\u606f"
        }, 
        {
            "location": "/contracts-and-transactions/account-types-gas-and-transactions/#_5", 
            "text": "Ethereum implements an execution environment on the blockchain called\nthe Ethereum Virtual Machine (EVM). Every node participating in the\nnetwork runs the EVM as part of the block verification protocol. They go\nthrough the transactions listed in the block they are verifying and run\nthe code as triggered by the transaction within the EVM. Each and every\nfull node in the network does the same calculations and stores the same\nvalues. Clearly Ethereum is not about optimising efficiency of\ncomputation. Its parallel processing is redundantly parallel. This is to\noffer an efficient way to reach consensus on the system state without\nneeding trusted third parties, oracles or violence monopolies. But\nimportantly they are not there for optimal computation. The fact that\ncontract executions are redundantly replicated across nodes, naturally\nmakes them expensive, which generally creates an incentive not to use\nthe blockchain for computation that can be done offchain.  When you are running a decentralized application (dapp), it interacts\nwith the blockchain to read and modify its state, but dapps will\ntypically only put the business logic and state that are crucial for\nconsensus on the blockchain.  When a contract is executed as a result of being triggered by a message\nor transaction, every instruction is executed on every node of the\nnetwork. This has a cost: for every executed operation there is a\nspecified cost, expressed in a number of gas units.  Gas is the name for the execution fee that senders of transactions need\nto pay for every operation made on an Ethereum blockchain. The name gas\nis inspired by the view that this fee acts as cryptofuel, driving the\nmotion of smart contracts. Gas is purchased for ether from the miners\nthat execute the code. Gas and ether are decoupled deliberately since\nunits of gas align with computation units having a natural cost, while\nthe price of ether generally fluctuates as a result of market forces.\nThe two are mediated by a free market: the price of gas is actually\ndecided by the miners, who can refuse to process a transaction with a\nlower gas price than their minimum limit. To get gas you simply need to\nadd ether to your account. The Ethereum clients automatically purchase\ngas for your ether in the amount you specify as your maximum expenditure\nfor the transaction.  The Ethereum protocol charges a fee per computational step that is\nexecuted in a contract or transaction to prevent deliberate attacks and\nabuse on the Ethereum network. Every transaction is required to include\na gas limit and a fee that it is willing to pay per gas. Miners have the\nchoice of including the transaction and collecting the fee or not. If\nthe total amount of gas used by the computational steps spawned by the\ntransaction, including the original message and any sub-messages that\nmay be triggered, is less than or equal to the gas limit, then the\ntransaction is processed. If the total gas exceeds the gas limit, then\nall changes are reverted, except that the transaction is still valid and\nthe fee can still be collected by the miner. All excess gas not used by\nthe transaction execution is reimbursed to the sender as Ether. You do\nnot need to worry about overspending, since you are only charged for the\ngas you consume. This means that it is useful as well as safe to send\ntransactions with a gas limit well above the estimates.", 
            "title": "\u4ec0\u4e48\u662f\u71c3\u6599\uff1f"
        }, 
        {
            "location": "/contracts-and-transactions/account-types-gas-and-transactions/#_6", 
            "text": "The total ether cost of a transaction is based on 2 factors:  gasUsed  is the total gas that is consumed by the transaction  gasPrice  price (in ether) of one unit of gas specified in the transaction  Total cost = gasUsed * gasPrice", 
            "title": "\u4f30\u7b97\u4ea4\u6613\u6210\u672c"
        }, 
        {
            "location": "/contracts-and-transactions/account-types-gas-and-transactions/#gasused", 
            "text": "Each operation in the EVM was assigned a number of how much gas it\nconsumes.  gasUsed  is the sum of all the gas for all the operations\nexecuted. There is a  spreadsheet  which offers a\nglimpse to some of the analysis behind this.  For estimating  gasUsed , there is an  estimateGas API  that can be used but has some caveats.", 
            "title": "gasUsed"
        }, 
        {
            "location": "/contracts-and-transactions/account-types-gas-and-transactions/#gasprice", 
            "text": "A user constructs and signs a transaction, and each user may specify\nwhatever  gasPrice  they desire, which can be zero. However, the\nEthereum clients launched at Frontier had a default gasPrice of 0.05e12\nwei. As miners optimize for their revenue, if most transactions are\nbeing submitted with a gasPrice of 0.05e12 wei, it would be difficult to\nconvince a miner to accept a transaction that specified a lower, or\nzero, gasPrice.", 
            "title": "gasPrice"
        }, 
        {
            "location": "/contracts-and-transactions/account-types-gas-and-transactions/#_7", 
            "text": "Let's take a contract that just adds 2 numbers. The EVM OPCODE  ADD \nconsumes 3 gas.  The approximate cost, using the default gas price (as of January 2016),\nwould be:  3 * 0.05e12 = 1.5e11 wei  Since 1 ether is 1e18 wei, the total cost would be 0.00000015 Ether.  This is a simplification since it ignores some costs, such as the cost\nof passing the 2 numbers to contract, before they can even be added.   question  gas fees  gas cost calculator  Ethereum Gas Prices   Operation Name      Gas Cost   Remark   step                1          default amount per execution cycle\n  stop                0          free\n  suicide sha3        0 20       free\n  sload               20         get from permanent storage\n  sstore balance      100 20     put into permanent storage\n  create              100        contract creation\n  call                20         initiating a read-only call\n  memory              1          every additional word when expanding memory\n  txdata              5          every byte of data or code for a transaction\n  transaction         500        base fee transaction\n  contract creation   53000      changed in homestead from 21000", 
            "title": "\u793a\u4f8b\u4ea4\u6613\u516c\u53f8"
        }, 
        {
            "location": "/contracts-and-transactions/account-types-gas-and-transactions/#-", 
            "text": "As previously mentioned, there are two types of accounts:   Externally owned account (EOAs) : an account controlled by a\n    private key, and if you own the private key associated with the EOA\n    you have the ability to send ether and messages from it.  Contract : an account that has its own code, and is controlled by code.   By default, the Ethereum execution environment is lifeless; nothing\nhappens and the state of every account remains the same. However, any\nuser can trigger an action by sending a transaction from an externally\nowned account, setting Ethereum's wheels in motion. If the destination\nof the transaction is another EOA, then the transaction may transfer\nsome ether but otherwise does nothing. However, if the destination is a\ncontract, then the contract in turn activates, and automatically runs\nits code.  The code has the ability to read/write to its own internal storage (a\ndatabase mapping 32-byte keys to 32-byte values), read the storage of\nthe received message, and send messages to other contracts, triggering\ntheir execution in turn. Once execution stops, and all sub-executions\ntriggered by a message sent by a contract stop (this all happens in a\ndeterministic and synchronous order, ie. a sub-call completes fully\nbefore the parent call goes any further), the execution environment\nhalts once again, until woken by the next transaction.  Contracts generally serve four purposes:   Maintain a data store representing something which is useful to\n    either other contracts or to the outside world; one example of this\n    is a contract that simulates a currency, and another is a contract\n    that records membership in a particular organization.  Serve as a sort of externally-owned account with a more complicated\n    access policy; this is called a \"forwarding contract\" and\n    typically involves simply resending incoming messages to some\n    desired destination only if certain conditions are met; for example,\n    one can have a forwarding contract that waits until two out of a\n    given three private keys have confirmed a particular message before\n    resending it (ie. multisig). More complex forwarding contracts have\n    different conditions based on the nature of the message sent. The\n    simplest use case for this functionality is a withdrawal limit that\n    is overrideable via some more complicated access procedure. A wallet\n    contract is a good example of this.  Manage an ongoing contract or relationship between multiple users.\n    Examples of this include a financial contract, an escrow with some\n    particular set of mediators, or some kind of insurance. One can also\n    have an open contract that one party leaves open for any other party\n    to engage with at any time; one example of this is a contract that\n    automatically pays a bounty to whoever submits a valid solution to\n    some mathematical problem, or proves that it is providing some\n    computational resource.  Provide functions to other contracts, essentially serving as a\n    software library.   Contracts interact with each other through an activity that is\nalternately called either \"calling\" or \"sending messages\". A\n\"message\" is an object containing some quantity of ether, a byte-array\nof data of any size, the addresses of a sender and a recipient. When a\ncontract receives a message, it has the option of returning some data,\nwhich the original sender of the message can then immediately use. In\nthis way, sending a message is exactly like calling a function.  Because contracts can play such different roles, we expect that\ncontracts will be interacting with each other. As an example, consider a\nsituation where Alice and Bob are betting 100 GavCoin that the\ntemperature in San Francisco will not exceed 35\u00baC at any point in the\nnext year. However, Alice is very security-conscious, and as her primary\naccount uses a forwarding contract which only sends messages with the\napproval of two out of three private keys. Bob is paranoid about quantum\ncryptography, so he uses a forwarding contract which passes along only\nmessages that have been signed with Lamport signatures alongside\ntraditional ECDSA (but because he's old fashioned, he prefers to use a\nversion of Lamport sigs based on SHA256, which is not supported in\nEthereum directly).  The betting contract itself needs to fetch data about the San Francisco\nweather from some contract, and it also needs to talk to the GavCoin\ncontract when it wants to actually send the GavCoin to either Alice or\nBob (or, more precisely, Alice or Bob's forwarding contract). We can\nshow the relationships between the accounts thus:   When Bob wants to finalize the bet, the following steps happen:   A transaction is sent, triggering a message from Bob's EOA to his forwarding contract.  Bob's forwarding contract sends the hash of the message and the Lamport signature to a contract which functions as a Lamport     signature verification library.  The Lamport signature verification library sees that Bob wants a SHA256-based Lamport sig, so it calls the SHA256 library many times as needed to verify the signature.  Once the Lamport signature verification library returns 1, signifying that the signature has been verified, it sends a message     to the contract representing the bet.  The bet contract checks the contract providing the San Francisco temperature to see what the temperature is.  The bet contract sees that the response to the messages shows that the temperature is above 35\u00baC, so it sends a message to the GavCoin contract to move the GavCoin from its account to Bob's forwarding contract.   Note that the GavCoin is all \"stored\" as entries in the GavCoin\ncontract's database; the word \"account\" in the context of step 6\nsimply means that there is a data entry in the GavCoin contract storage\nwith a key for the bet contract's address and a value for its balance.\nAfter receiving this message, the GavCoin contract decreases this value\nby some amount and increases the value in the entry corresponding to\nBob's forwarding contract's address. We can see these steps in the\nfollowing diagram:", 
            "title": "\u5e10\u6237\u4e92\u52a8\u793a\u4f8b - \u6295\u6ce8\u5408\u7ea6"
        }, 
        {
            "location": "/contracts-and-transactions/account-types-gas-and-transactions/#_8", 
            "text": "Maybe add this to the FAQ and point to the ethkey section of turboethereum guide?   Resilience Raw Transaction Broadcaster", 
            "title": "\u7b7e\u7f72\u4ea4\u6613\u79bb\u7ebf"
        }, 
        {
            "location": "/contracts-and-transactions/contracts/", 
            "text": "\u5408\u7ea6\n\n\n\u4ec0\u4e48\u662f\u5408\u7ea6\uff1f\n\n\nA contract is a collection of code (its functions) and data (its state)\nthat resides at a specific address on the Ethereum blockchain. Contract\naccounts are able to pass messages between themselves as well as doing\npractically Turing complete computation. Contracts live on the\nblockchain in a Ethereum-specific binary format called Ethereum Virtual\nMachine (EVM) bytecode.\n\n\nContracts are typically written in some high level language such as\n\nSolidity\n and then\ncompiled into bytecode to be uploaded on the blockchain.\n\n\n::: {.seealso}\nOther languages also exist, notably Serpent and LLL, which are described\nfurther in the [ethereum-high-level-languages]{role=\"ref\"} section of\nthis documentation.\n:::\n\n\n[IDE-or-development-framework]{role=\"ref\"} lists the integrated\ndevelopment environments, developer tools that help you develop in these\nlanguages, offering testing, and deployment support among other\nfeatures.\n\n\n\u4ee5\u592a\u574a\u9ad8\u7ea7\u8bed\u8a00\n\n\nContracts live on the blockchain in an Ethereum-specific binary format\n(EVM bytecode) that is executed by the Ethereum Virtual Machine (EVM).\nHowever, contracts are typically written in a higher level language and\nthen compiled using the EVM compiler into byte code to be deployed to\nthe blockchain.\n\n\nBelow are the different high level languages developers can use to write\nsmart contracts for Ethereum.\n\n\nSolidity\n\n\nSolidity is a language similar to JavaScript which allows you to develop\ncontracts and compile to EVM bytecode. It is currently the flagship\nlanguage of Ethereum and the most popular.\n\n\n\n\nSolidity Documentation\n -\n    Solidity is the flagship Ethereum high level language that is used to write contracts.\n\n\nSolidity online realtime compiler\n\n\nStandardized Contract APIs\n\n\nUseful \u00d0app Patterns\n - Code snippets which are useful for \u00d0app development.\n\n\n\n\nSerpent\n\n\nSerpent is a language similar to Python which can be used to develop\ncontracts and compile to EVM bytecode. It is intended to be maximally\nclean and simple, combining many of the efficiency benefits of a\nlow-level language with ease-of-use in programming style, and at the\nsame time adding special domain-specific features for contract\nprogramming. Serpent is compiled using _LLL.\n\n\n\n\nSerpent on the ethereum wiki\n\n\nSerpent EVM compiler\n\n\n\n\nLLL\n\n\nLisp Like Language\n(LLL)\n is a\nlow level language similar to Assembly. It is meant to be very simple\nand minimalistic; essentially just a tiny wrapper over coding in EVM\ndirectly.\n\n\n\n\nLIBLLL in GitHub\n\n\nExamples of LLL\n\n\n\n\nMutan (deprecated)\n\n\nMutan\n is a statically typed, C-like\nlanguage designed and developed by Jeffrey Wilcke. It is no longer maintained.\n\n\nWriting a contract\n\n\nNo language would be complete without a Hello World program. Operating\nwithin the Ethereum environment, Solidity has no obvious way of\n\"outputting\" a string. The closest we can do is to use a \nlog event\n\nto place a string into the blockchain:\n\n\ncontract\n \nHelloWorld\n \n{\n\n    \nevent\n \nPrint\n(\nstring\n \nout\n);\n\n    \nfunction\n()\n \n{\n \nPrint\n(\nHello, World!\n);\n \n}\n\n\n}\n\n\n\n\n\nThis contract will create a log entry on the blockchain of type Print\nwith a parameter \"Hello, World!\" each time it is executed.\n\n\n::: {.seealso}\n\nSolidity docs\n has more\nexamples and guidelines to writing Solidity code.\n:::\n\n\n\u7f16\u5236\u5408\u7ea6\n\n\nCompilation of solidity contracts can be accomplished via a number of\nmechanisms.\n\n\n\n\nUsing the \nsolc\n compiler via the command line.\n\n\nUsing \nweb3.eth.compile.solidity\n in the javascript console provided by \ngeth\n or \neth\n (This still requires the \nsolc\n compiler to be installed).\n\n\nThe \nonline Solidity realtime compiler\n.\n\n\nThe \nMeteor dapp Cosmo for building solidity contracts\n.\n\n\nThe \nMix IDE\n.\n\n\nThe \nEthereum Wallet\n.\n\n\n\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\n\nMore information on solc and compiling Solidity contract code can be found \nhere\n.\n:::\n\n\nSetting up the solidity compiler in geth\n\n\nIf you start up your \ngeth\n node, you can check which compilers are available.\n\n\n web3.eth.getCompilers\n()\n;\n\n\n[\nlll\n, \nsolidity\n, \nserpent\n]\n\n\n\n\n\nThis command returns an array of strings indicating which compilers are\ncurrently available.\n\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\n\nThe \nsolc\n compiler is installed with \ncpp-ethereum\n. Alternatively, you\ncan \nbuild it\nyourself\n.\n:::\n\n\nIf your \nsolc\n executable is in a non-standard location you can specify\na custom path to the \nsolc\n executable using th \n--solc\n flag.\n\n\n$ geth --solc /usr/local/bin/solc\n\n\n\n\nAlternatively, you can set this option at runtime via the console:\n\n\n admin.setSolc\n(\n/usr/local/bin/solc\n)\n\nsolc, the solidity compiler commandline interface\nVersion: \n0\n.2.2-02bb315d/.-Darwin/appleclang/JIT linked to libethereum-1.2.0-8007cef0/.-Darwin/appleclang/JIT\npath: /usr/local/bin/solc\n\n\n\n\n\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u5408\u7ea6\n\n\n\u6211\u4eec\u6765\u7f16\u4e00\u4e2a\u7b80\u5355\u7684\u5408\u7ea6:\n\n\n \nsource\n \n=\n \ncontract test { function multiply(uint a) returns(uint d) { return a * 7; } }\n\n\n\n\n\nThis contract offers a single method \nmultiply\n which is called with a\npositive integer \na\n and returns \na * 7\n.\n\n\nYou are ready to compile solidity code in the \ngeth\n JS console using\n\neth.compile.solidity()\n:\n\n\n \ncontract\n \n=\n eth.compile.solidity\n(\nsource\n)\n.test\n\n{\n\n  code: \n605280600c6000396000f3006000357c010000000000000000000000000000000000000000000000000000000090048063c6888fa114602e57005b60376004356041565b8060005260206000f35b6000600782029050604d565b91905056\n,\n  info: \n{\n\n    language: \nSolidity\n,\n    languageVersion: \n0\n,\n    compilerVersion: \n0.9.13\n,\n    abiDefinition: \n[{\n\n      constant: false,\n      inputs: \n[{\n\n        name: \na\n,\n        type: \nuint256\n\n      \n}\n \n]\n,\n      name: \nmultiply\n,\n      outputs: \n[{\n\n        name: \nd\n,\n        type: \nuint256\n\n      \n}\n \n]\n,\n      type: \nfunction\n\n    \n}\n \n]\n,\n    userDoc: \n{\n\n      methods: \n{\n\n      \n}\n\n    \n}\n,\n    developerDoc: \n{\n\n      methods: \n{\n\n      \n}\n\n    \n}\n,\n    source: \ncontract test { function multiply(uint a) returns(uint d) { return a * 7; } }\n\n  \n}\n\n\n}\n\n\n\n\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\n\nThe compiler is also available via\n\nRPC\n and therefore via\nweb3\\.js \\\nhttps://github.com/ethereum/wiki/wiki/JavaScript\n API#web3ethcompilesolidity\n__ to any in-browser \u00d0app connecting to\n\ngeth\n via RPC/IPC.\n:::\n\n\nThe following example shows how you interface \ngeth\n via JSON-RPC to use\nthe compiler.\n\n\n$ geth --datadir ~/eth/ --loglevel \n6\n --logtostderr\n=\ntrue\n --rpc --rpcport \n8100\n --rpccorsdomain \n*\n --mine console  \n2\n ~/eth/eth.log\n$ curl -X POST --data \n{\njsonrpc\n:\n2.0\n,\nmethod\n:\neth_compileSolidity\n,\nparams\n:[\ncontract test { function multiply(uint a) returns(uint d) { return a * 7; } }\n],\nid\n:1}\n http://127.0.0.1:8100\n\n\n\n\nThe compiler output for one source will give you contract objects each\nrepresenting a single contract. The actual return value of\n\neth.compile.solidity\n is a map of contract name to contract object\npairs. Since our contract's name is \ntest\n,\n\neth.compile.solidity(source).test\n will give you the contract object\nfor the test contract containing the following fields:\n\n\n::: {.glossary}\n\n\ncode\n\n\n:   The compiled EVM bytecode\n\n\ninfo\n\n\n:   Additional metadata output from the compiler\n\n\nsource\n\n\n:   The source code\n\n\nlanguage\n\n\n:   The contract language (Solidity, Serpent, LLL)\n\n\nlanguageVersion\n\n\n:   The contract language version\n\n\ncompilerVersion\n\n\n:   The solidity compiler version that was used to compile this\n    contract.\n\n\nabiDefinition\n\n\n:   The \nApplication Binary Interface\n    Definition\n\n\nuserDoc\n\n\n:   The \nNatSpec\n    Doc\n\n    for users.\n\n\ndeveloperDoc\n\n\n:   The \nNatSpec\n    Doc\n\n    for developers.\n:::\n\n\nThe immediate structuring of the compiler output (into \ncode\n and\n\ninfo\n) reflects the two very different \npaths of deployment\n. The\ncompiled EVM code is sent off to the blockchain with a contract creation\ntransaction while the rest (info) will ideally live on the decentralised\ncloud as publicly verifiable metadata complementing the code on the\nblockchain.\n\n\nIf your source contains multiple contracts, the output will contain an\nentry for each contract, the corresponding contract info object can be\nretrieved with the name of the contract as attribute name. You can try\nthis by inspecting the most current GlobalRegistrar code:\n\n\ncontracts\n \n=\n \neth\n.\ncompile\n.\nsolidity\n(\nglobalRegistrarSrc\n)\n\n\n\n\n\n\u521b\u5efa\u548c\u90e8\u7f72\u4e00\u4e2a\u5408\u7ea6\n\n\nBefore you begin this section, make sure you have both an unlocked\naccount as well as some funds.\n\n\nYou will now create a contract on the blockchain by \nsending a\ntransaction\n\nto the empty address with the EVM code from the previous section as\ndata.\n\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\n\nThis can be accomplished much easier using the \nonline Solidity realtime\ncompiler\n or the \nMix\nIDE\n program.\n:::\n\n\nvar\n \nprimaryAddress\n \n=\n \neth\n.\naccounts\n[\n0\n]\n\n\nvar\n \nabi\n \n=\n \n[{\n \nconstant\n:\n \nfalse\n,\n \ninputs\n:\n \n{\n \nname\n:\n \na\n,\n \ntype\n:\n \nuint256\n \n}\n \n}]\n\n\nvar\n \nMyContract\n \n=\n \neth\n.\ncontract\n(\nabi\n)\n\n\nvar\n \ncontract\n \n=\n \nMyContract\n.\nnew\n(\narg1\n,\n \narg2\n,\n \n...,\n \n{\nfrom\n:\n \nprimaryAddress\n,\n \ndata\n:\n \nevmByteCodeFromPreviousSection\n})\n\n\n\n\n\nAll binary data is serialised in hexadecimal form. Hex strings always\nhave a hex prefix \n0x\n.\n\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\n\nNote that \narg1, arg2, ...\n are the arguments for the contract\nconstructor, in case it accepts any. If the contract does not require\nany constructor arguments then these arguments can be omitted.\n:::\n\n\nIt is worth pointing out that this step requires you to pay for\nexecution. Your balance on the account (that you put as sender in the\n\nfrom\n field) will be reduced according to the gas rules of the EVM once\nyour transaction makes it into a block. After some time, your\ntransaction should appear included in a block confirming that the state\nit brought about is a consensus. Your contract now lives on the\nblockchain.\n\n\nThe asynchronous way of doing the same looks like this:\n\n\nMyContract\n.\nnew\n([\narg1\n,\n \narg2\n,\n \n...,]{\nfrom\n:\n \nprimaryAccount\n,\n \ndata\n:\n \nevmCode\n},\n \nfunction\n(\nerr\n,\n \ncontract\n)\n \n{\n\n  \nif\n \n(\n!\nerr\n \n \ncontract\n.\naddress\n)\n\n    \nconsole\n.\nlog\n(\ncontract\n.\naddress\n);\n\n\n});\n\n\n\n\n\n\u4e0e\u4e00\u4e2a\u5408\u7ea6\u4ea4\u6d41\n\n\nInteraction with a contract is typically done using an abstraction layer\nsuch as the\n\neth.contract()\n\nfunction which returns a javascript object with all of the contract\nfunctions available as callable functions in javascript.\n\n\nThe standard way to describe the available functions of a contract is\nthe \nABI\ndefinition\n.\nThis object is an array which describles the call signature and return\nvalues for each available contract function.\n\n\nvar\n \nMultiply7\n \n=\n \neth\n.\ncontract\n(\ncontract\n.\ninfo\n.\nabiDefinition\n);\n\n\nvar\n \nmyMultiply7\n \n=\n \nMultiply7\n.\nat\n(\naddress\n);\n\n\n\n\n\nNow all the function calls specified in the ABI are made available on\nthe contract instance. You can just call those methods on the contract\ninstance in one of two ways.\n\n\n \nmyMultiply7\n.\nmultiply\n.\nsendTransaction\n(\n3\n,\n \n{\nfrom\n:\n \naddress\n})\n\n\n0x12345\n\n\n \nmyMultiply7\n.\nmultiply\n.\ncall\n(\n3\n)\n\n\n21\n\n\n\n\n\nWhen called using \nsendTransaction\n the function call is executed via\nsending a transaction. This will cost ether to send and the call will be\nrecorded forever on the blockchain. The return value of calls made in\nthis manner is the hash of the transaction.\n\n\nWhen called using \ncall\n the function is executed locally in the EVM and\nthe return value of the function is returned with the function. Calls\nmade in this manner are not recorded on the blockchain and thus, cannot\nmodify the internal state of the contract. This manner of call is\nreferred to as a \nconstant\n function call. Calls made in this manner\ndo not cost any ether.\n\n\nYou should use \ncall\n if you are interested only in the return value and\nuse \nsendTransaction\n if you only care about \nside effects\n on the state\nof the contract.\n\n\nIn the example above, there are no side effects, therefore\n\nsendTransaction\n only burns gas and increases the entropy of the\nuniverse.\n\n\n\u5143\u6570\u636e\u5408\u7ea6\n\n\nIn the previous sections we explained how you create a contract on the\nblockchain. Now we will deal with the rest of the compiler output, the\n\ncontract metadata\n or contract info.\n\n\nWhen interacting with a contract you did not create you might want\ndocumentation or to look at the source code. Contract authors are\nencouraged to make such information available by registering it on the\nblockchain or through a third party service, such as\n\nEtherChain\n. The \nadmin\n API\nprovides convenience methods to fetch this bundle for any contract that\nchose to register.\n\n\n// get the contract info for contract address to do manual verification\n\n\nvar\n \ninfo\n \n=\n \nadmin\n.\ngetContractInfo\n(\naddress\n)\n \n// lookup, fetch, decode\n\n\nvar\n \nsource\n \n=\n \ninfo\n.\nsource\n;\n\n\nvar\n \nabiDef\n \n=\n \ninfo\n.\nabiDefinition\n\n\n\n\n\nThe underlying mechanism that makes this work is is that:\n\n\n\n\ncontract info is uploaded somewhere identifiable by a \nURI\n which is\n    publicly accessible\n\n\nanyone can find out what the \nURI\n is only knowing the contracts\n    address\n\n\n\n\nThese requirements are achieved using a 2 step blockchain registry. The\nfirst step registers the contract code (hash) with a content hash in a\ncontract called \nHashReg\n. The second step registers a url with the\ncontent hash in the \nUrlHint\n contract. These \nregistry\ncontracts\n\nwere part of the Frontier release and have carried on into Homestead.\n\n\nBy using this scheme, it is sufficient to know a contract's address to\nlook up the url and fetch the actual contract metadata info bundle.\n\n\nSo if you are a conscientious contract creator, the steps are the\nfollowing:\n\n\n\n\nDeploy the contract itself to the blockchain\n\n\nGet the contract info json file.\n\n\nDeploy contract info json file to any url of your choice\n\n\nRegister codehash -\ncontent hash -\n url\n\n\n\n\nThe JS API makes this process very easy by providing helpers. Call\n\nadmin.register\n to extract info from the contract, write out its json\nserialisation in the given file, calculates the content hash of the file\nand finally registers this content hash to the contract's code hash.\nOnce you deployed that file to any url, you can use \nadmin.registerUrl\n\nto register the url with your content hash on the blockchain as well.\n(Note that in case a fixed content addressed model is used as document\nstore, the url-hint is no longer necessary.)\n\n\nsource\n \n=\n \ncontract test { function multiply(uint a) returns(uint d) { return a * 7; } }\n\n\n// compile with solc\n\n\ncontract\n \n=\n \neth\n.\ncompile\n.\nsolidity\n(\nsource\n).\ntest\n\n\n// create contract object\n\n\nvar\n \nMyContract\n \n=\n \neth\n.\ncontract\n(\ncontract\n.\ninfo\n.\nabiDefinition\n)\n\n\n// extracts info from contract, save the json serialisation in the given file,\n\n\ncontenthash\n \n=\n \nadmin\n.\nsaveInfo\n(\ncontract\n.\ninfo\n,\n \n~/dapps/shared/contracts/test/info.json\n)\n\n\n// send off the contract to the blockchain\n\n\nMyContract\n.\nnew\n({\nfrom\n:\n \nprimaryAccount\n,\n \ndata\n:\n \ncontract\n.\ncode\n},\n \nfunction\n(\nerror\n,\n \ncontract\n){\n\n  \nif\n(\n!\nerror\n \n \ncontract\n.\naddress\n)\n \n{\n\n    \n// calculates the content hash and registers it with the code hash in `HashReg`\n\n    \n// it uses address to send the transaction.\n\n    \n// returns the content hash that we use to register a url\n\n    \nadmin\n.\nregister\n(\nprimaryAccount\n,\n \ncontract\n.\naddress\n,\n \ncontenthash\n)\n\n    \n// here you deploy ~/dapps/shared/contracts/test/info.json to a url\n\n    \nadmin\n.\nregisterUrl\n(\nprimaryAccount\n,\n \nhash\n,\n \nurl\n)\n\n  \n}\n\n\n});\n\n\n\n\n\n\u6d4b\u8bd5\u5408\u7ea6\u548c\u4ea4\u6613\n\n\nOften you need to resort to a low level strategy of testing and\ndebugging contracts and transactions. This section introduces some debug\ntools and practices you can use. In order to test contracts and\ntransactions without real-word consequences, you best test it on a\nprivate blockchain. This can be achieved with configuring an alternative\nnetwork id (select a unique integer) and/or disable peers. It is\nrecommended practice that for testing you use an alternative data\ndirectory and ports so that you never even accidentally clash with your\nlive running node (assuming that runs using the defaults. Starting your\n\ngeth\n with in VM debug mode with profiling and highest logging\nverbosity level is recommended:\n\n\ngeth --datadir ~/dapps/testing/00/ --port \n30310\n --rpcport \n8110\n --networkid \n4567890\n --nodiscover --maxpeers \n0\n --vmdebug --verbosity \n6\n --pprof --pprofport \n6110\n console \n2\n ~/dapp/testint/00/00.log\n\n\n\n\n\u5728\u60a8\u63d0\u4ea4\u4efb\u4f55\u4ea4\u6613\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u8bbe\u7f6e\u60a8\u7684\u79c1\u4eba\u6d4b\u8bd5\u94fe\u3002 \u53c2\u89c1[\u6d4b\u8bd5\u7684\u7f51\u7edc].\n\n\n// create account. will prompt for password\n\n\npersonal\n.\nnewAccount\n();\n\n\n// name your primary account, will often use it\n\n\nprimary\n \n=\n \neth\n.\naccounts\n[\n0\n];\n\n\n// check your balance (denominated in ether)\n\n\nbalance\n \n=\n \nweb3\n.\nfromWei\n(\neth\n.\ngetBalance\n(\nprimary\n),\n \nether\n);\n\n\n\n\n\n// assume an existing unlocked primary account\n\n\nprimary\n \n=\n \neth\n.\naccounts\n[\n0\n];\n\n\n\n// mine 10 blocks to generate ether\n\n\n\n// starting miner\n\n\nminer\n.\nstart\n(\n4\n);\n\n\n// sleep for 10 blocks (this can take quite some time).\n\n\nadmin\n.\nsleepBlocks\n(\n10\n);\n\n\n// then stop mining (just not to burn heat in vain)\n\n\nminer\n.\nstop\n();\n\n\nbalance\n \n=\n \nweb3\n.\nfromWei\n(\neth\n.\ngetBalance\n(\nprimary\n),\n \nether\n);\n\n\n\n\n\n\u521b\u5efa\u4ea4\u6613\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u51e0\u884c\u5f3a\u5236\u5904\u7406\u5b83\u4eec\uff1a\n\n\nminer\n.\nstart\n(\n1\n);\n\n\nadmin\n.\nsleepBlocks\n(\n1\n);\n\n\nminer\n.\nstop\n();\n\n\n\n\n\n\u4f60\u53ef\u4ee5\u68c0\u67e5\u4f60\u7684\u672a\u51b3\u4ea4\u6613:\n\n\n// \u663e\u793a\u4ea4\u6613\u6c60\n\n\ntxpool\n.\nstatus\n\n\n// \u5f85\u5904\u7406\u7684\u6570\u91cf\n\n\neth\n.\ngetBlockTransactionCount\n(\npending\n);\n\n\n// \u6253\u5370\u6240\u6709\u5f85\u5904\u7406\u7684TX\n\n\neth\n.\ngetBlock\n(\npending\n,\n \ntrue\n).\ntransactions\n\n\n\n\n\n\u5982\u679c\u60a8\u63d0\u4ea4\u4e86\u5408\u7ea6\u521b\u5efa\u4ea4\u6613\uff0c\u60a8\u53ef\u4ee5\u68c0\u67e5\u6240\u9700\u7684\u4ee3\u7801\u662f\u5426\u5b9e\u9645\u63d2\u5165\u5230\u5f53\u524d\u533a\u5757\u94fe\u4e2d\uff1a\n\n\ntxhash\n \n=\n \neth\n.\nsendTansaction\n({\nfrom\n:\nprimary\n,\n \ndata\n:\n \ncode\n})\n\n\n//... mining\n\n\ncontractaddress\n \n=\n \neth\n.\ngetTransactionReceipt\n(\ntxhash\n);\n\n\neth\n.\ngetCode\n(\ncontractaddress\n)", 
            "title": "\u5408\u7ea6"
        }, 
        {
            "location": "/contracts-and-transactions/contracts/#_1", 
            "text": "", 
            "title": "\u5408\u7ea6"
        }, 
        {
            "location": "/contracts-and-transactions/contracts/#_2", 
            "text": "A contract is a collection of code (its functions) and data (its state)\nthat resides at a specific address on the Ethereum blockchain. Contract\naccounts are able to pass messages between themselves as well as doing\npractically Turing complete computation. Contracts live on the\nblockchain in a Ethereum-specific binary format called Ethereum Virtual\nMachine (EVM) bytecode.  Contracts are typically written in some high level language such as Solidity  and then\ncompiled into bytecode to be uploaded on the blockchain.  ::: {.seealso}\nOther languages also exist, notably Serpent and LLL, which are described\nfurther in the [ethereum-high-level-languages]{role=\"ref\"} section of\nthis documentation.\n:::  [IDE-or-development-framework]{role=\"ref\"} lists the integrated\ndevelopment environments, developer tools that help you develop in these\nlanguages, offering testing, and deployment support among other\nfeatures.", 
            "title": "\u4ec0\u4e48\u662f\u5408\u7ea6\uff1f"
        }, 
        {
            "location": "/contracts-and-transactions/contracts/#_3", 
            "text": "Contracts live on the blockchain in an Ethereum-specific binary format\n(EVM bytecode) that is executed by the Ethereum Virtual Machine (EVM).\nHowever, contracts are typically written in a higher level language and\nthen compiled using the EVM compiler into byte code to be deployed to\nthe blockchain.  Below are the different high level languages developers can use to write\nsmart contracts for Ethereum.", 
            "title": "\u4ee5\u592a\u574a\u9ad8\u7ea7\u8bed\u8a00"
        }, 
        {
            "location": "/contracts-and-transactions/contracts/#solidity", 
            "text": "Solidity is a language similar to JavaScript which allows you to develop\ncontracts and compile to EVM bytecode. It is currently the flagship\nlanguage of Ethereum and the most popular.   Solidity Documentation  -\n    Solidity is the flagship Ethereum high level language that is used to write contracts.  Solidity online realtime compiler  Standardized Contract APIs  Useful \u00d0app Patterns  - Code snippets which are useful for \u00d0app development.", 
            "title": "Solidity"
        }, 
        {
            "location": "/contracts-and-transactions/contracts/#serpent", 
            "text": "Serpent is a language similar to Python which can be used to develop\ncontracts and compile to EVM bytecode. It is intended to be maximally\nclean and simple, combining many of the efficiency benefits of a\nlow-level language with ease-of-use in programming style, and at the\nsame time adding special domain-specific features for contract\nprogramming. Serpent is compiled using _LLL.   Serpent on the ethereum wiki  Serpent EVM compiler", 
            "title": "Serpent"
        }, 
        {
            "location": "/contracts-and-transactions/contracts/#lll", 
            "text": "Lisp Like Language\n(LLL)  is a\nlow level language similar to Assembly. It is meant to be very simple\nand minimalistic; essentially just a tiny wrapper over coding in EVM\ndirectly.   LIBLLL in GitHub  Examples of LLL", 
            "title": "LLL"
        }, 
        {
            "location": "/contracts-and-transactions/contracts/#mutan-deprecated", 
            "text": "Mutan  is a statically typed, C-like\nlanguage designed and developed by Jeffrey Wilcke. It is no longer maintained.", 
            "title": "Mutan (deprecated)"
        }, 
        {
            "location": "/contracts-and-transactions/contracts/#writing-a-contract", 
            "text": "No language would be complete without a Hello World program. Operating\nwithin the Ethereum environment, Solidity has no obvious way of\n\"outputting\" a string. The closest we can do is to use a  log event \nto place a string into the blockchain:  contract   HelloWorld   { \n     event   Print ( string   out ); \n     function ()   {   Print ( Hello, World! );   }  }   This contract will create a log entry on the blockchain of type Print\nwith a parameter \"Hello, World!\" each time it is executed.  ::: {.seealso} Solidity docs  has more\nexamples and guidelines to writing Solidity code.\n:::", 
            "title": "Writing a contract"
        }, 
        {
            "location": "/contracts-and-transactions/contracts/#_4", 
            "text": "Compilation of solidity contracts can be accomplished via a number of\nmechanisms.   Using the  solc  compiler via the command line.  Using  web3.eth.compile.solidity  in the javascript console provided by  geth  or  eth  (This still requires the  solc  compiler to be installed).  The  online Solidity realtime compiler .  The  Meteor dapp Cosmo for building solidity contracts .  The  Mix IDE .  The  Ethereum Wallet .   ::: {.note}\n::: {.admonition-title}\nNote\n:::  More information on solc and compiling Solidity contract code can be found  here .\n:::", 
            "title": "\u7f16\u5236\u5408\u7ea6"
        }, 
        {
            "location": "/contracts-and-transactions/contracts/#setting-up-the-solidity-compiler-in-geth", 
            "text": "If you start up your  geth  node, you can check which compilers are available.   web3.eth.getCompilers () ;  [ lll ,  solidity ,  serpent ]   This command returns an array of strings indicating which compilers are\ncurrently available.  ::: {.note}\n::: {.admonition-title}\nNote\n:::  The  solc  compiler is installed with  cpp-ethereum . Alternatively, you\ncan  build it\nyourself .\n:::  If your  solc  executable is in a non-standard location you can specify\na custom path to the  solc  executable using th  --solc  flag.  $ geth --solc /usr/local/bin/solc  Alternatively, you can set this option at runtime via the console:   admin.setSolc ( /usr/local/bin/solc ) \nsolc, the solidity compiler commandline interface\nVersion:  0 .2.2-02bb315d/.-Darwin/appleclang/JIT linked to libethereum-1.2.0-8007cef0/.-Darwin/appleclang/JIT\npath: /usr/local/bin/solc", 
            "title": "Setting up the solidity compiler in geth"
        }, 
        {
            "location": "/contracts-and-transactions/contracts/#_5", 
            "text": "\u6211\u4eec\u6765\u7f16\u4e00\u4e2a\u7b80\u5355\u7684\u5408\u7ea6:    source   =   contract test { function multiply(uint a) returns(uint d) { return a * 7; } }   This contract offers a single method  multiply  which is called with a\npositive integer  a  and returns  a * 7 .  You are ready to compile solidity code in the  geth  JS console using eth.compile.solidity() :    contract   =  eth.compile.solidity ( source ) .test { \n  code:  605280600c6000396000f3006000357c010000000000000000000000000000000000000000000000000000000090048063c6888fa114602e57005b60376004356041565b8060005260206000f35b6000600782029050604d565b91905056 ,\n  info:  { \n    language:  Solidity ,\n    languageVersion:  0 ,\n    compilerVersion:  0.9.13 ,\n    abiDefinition:  [{ \n      constant: false,\n      inputs:  [{ \n        name:  a ,\n        type:  uint256 \n       }   ] ,\n      name:  multiply ,\n      outputs:  [{ \n        name:  d ,\n        type:  uint256 \n       }   ] ,\n      type:  function \n     }   ] ,\n    userDoc:  { \n      methods:  { \n       } \n     } ,\n    developerDoc:  { \n      methods:  { \n       } \n     } ,\n    source:  contract test { function multiply(uint a) returns(uint d) { return a * 7; } } \n   }  }   ::: {.note}\n::: {.admonition-title}\nNote\n:::  The compiler is also available via RPC  and therefore via\nweb3\\.js \\ https://github.com/ethereum/wiki/wiki/JavaScript\n API#web3ethcompilesolidity __ to any in-browser \u00d0app connecting to geth  via RPC/IPC.\n:::  The following example shows how you interface  geth  via JSON-RPC to use\nthe compiler.  $ geth --datadir ~/eth/ --loglevel  6  --logtostderr = true  --rpc --rpcport  8100  --rpccorsdomain  *  --mine console   2  ~/eth/eth.log\n$ curl -X POST --data  { jsonrpc : 2.0 , method : eth_compileSolidity , params :[ contract test { function multiply(uint a) returns(uint d) { return a * 7; } } ], id :1}  http://127.0.0.1:8100  The compiler output for one source will give you contract objects each\nrepresenting a single contract. The actual return value of eth.compile.solidity  is a map of contract name to contract object\npairs. Since our contract's name is  test , eth.compile.solidity(source).test  will give you the contract object\nfor the test contract containing the following fields:  ::: {.glossary}  code  :   The compiled EVM bytecode  info  :   Additional metadata output from the compiler  source  :   The source code  language  :   The contract language (Solidity, Serpent, LLL)  languageVersion  :   The contract language version  compilerVersion  :   The solidity compiler version that was used to compile this\n    contract.  abiDefinition  :   The  Application Binary Interface\n    Definition  userDoc  :   The  NatSpec\n    Doc \n    for users.  developerDoc  :   The  NatSpec\n    Doc \n    for developers.\n:::  The immediate structuring of the compiler output (into  code  and info ) reflects the two very different  paths of deployment . The\ncompiled EVM code is sent off to the blockchain with a contract creation\ntransaction while the rest (info) will ideally live on the decentralised\ncloud as publicly verifiable metadata complementing the code on the\nblockchain.  If your source contains multiple contracts, the output will contain an\nentry for each contract, the corresponding contract info object can be\nretrieved with the name of the contract as attribute name. You can try\nthis by inspecting the most current GlobalRegistrar code:  contracts   =   eth . compile . solidity ( globalRegistrarSrc )", 
            "title": "\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u5408\u7ea6"
        }, 
        {
            "location": "/contracts-and-transactions/contracts/#_6", 
            "text": "Before you begin this section, make sure you have both an unlocked\naccount as well as some funds.  You will now create a contract on the blockchain by  sending a\ntransaction \nto the empty address with the EVM code from the previous section as\ndata.  ::: {.note}\n::: {.admonition-title}\nNote\n:::  This can be accomplished much easier using the  online Solidity realtime\ncompiler  or the  Mix\nIDE  program.\n:::  var   primaryAddress   =   eth . accounts [ 0 ]  var   abi   =   [{   constant :   false ,   inputs :   {   name :   a ,   type :   uint256   }   }]  var   MyContract   =   eth . contract ( abi )  var   contract   =   MyContract . new ( arg1 ,   arg2 ,   ...,   { from :   primaryAddress ,   data :   evmByteCodeFromPreviousSection })   All binary data is serialised in hexadecimal form. Hex strings always\nhave a hex prefix  0x .  ::: {.note}\n::: {.admonition-title}\nNote\n:::  Note that  arg1, arg2, ...  are the arguments for the contract\nconstructor, in case it accepts any. If the contract does not require\nany constructor arguments then these arguments can be omitted.\n:::  It is worth pointing out that this step requires you to pay for\nexecution. Your balance on the account (that you put as sender in the from  field) will be reduced according to the gas rules of the EVM once\nyour transaction makes it into a block. After some time, your\ntransaction should appear included in a block confirming that the state\nit brought about is a consensus. Your contract now lives on the\nblockchain.  The asynchronous way of doing the same looks like this:  MyContract . new ([ arg1 ,   arg2 ,   ...,]{ from :   primaryAccount ,   data :   evmCode },   function ( err ,   contract )   { \n   if   ( ! err     contract . address ) \n     console . log ( contract . address );  });", 
            "title": "\u521b\u5efa\u548c\u90e8\u7f72\u4e00\u4e2a\u5408\u7ea6"
        }, 
        {
            "location": "/contracts-and-transactions/contracts/#_7", 
            "text": "Interaction with a contract is typically done using an abstraction layer\nsuch as the eth.contract() \nfunction which returns a javascript object with all of the contract\nfunctions available as callable functions in javascript.  The standard way to describe the available functions of a contract is\nthe  ABI\ndefinition .\nThis object is an array which describles the call signature and return\nvalues for each available contract function.  var   Multiply7   =   eth . contract ( contract . info . abiDefinition );  var   myMultiply7   =   Multiply7 . at ( address );   Now all the function calls specified in the ABI are made available on\nthe contract instance. You can just call those methods on the contract\ninstance in one of two ways.    myMultiply7 . multiply . sendTransaction ( 3 ,   { from :   address })  0x12345    myMultiply7 . multiply . call ( 3 )  21   When called using  sendTransaction  the function call is executed via\nsending a transaction. This will cost ether to send and the call will be\nrecorded forever on the blockchain. The return value of calls made in\nthis manner is the hash of the transaction.  When called using  call  the function is executed locally in the EVM and\nthe return value of the function is returned with the function. Calls\nmade in this manner are not recorded on the blockchain and thus, cannot\nmodify the internal state of the contract. This manner of call is\nreferred to as a  constant  function call. Calls made in this manner\ndo not cost any ether.  You should use  call  if you are interested only in the return value and\nuse  sendTransaction  if you only care about  side effects  on the state\nof the contract.  In the example above, there are no side effects, therefore sendTransaction  only burns gas and increases the entropy of the\nuniverse.", 
            "title": "\u4e0e\u4e00\u4e2a\u5408\u7ea6\u4ea4\u6d41"
        }, 
        {
            "location": "/contracts-and-transactions/contracts/#_8", 
            "text": "In the previous sections we explained how you create a contract on the\nblockchain. Now we will deal with the rest of the compiler output, the contract metadata  or contract info.  When interacting with a contract you did not create you might want\ndocumentation or to look at the source code. Contract authors are\nencouraged to make such information available by registering it on the\nblockchain or through a third party service, such as EtherChain . The  admin  API\nprovides convenience methods to fetch this bundle for any contract that\nchose to register.  // get the contract info for contract address to do manual verification  var   info   =   admin . getContractInfo ( address )   // lookup, fetch, decode  var   source   =   info . source ;  var   abiDef   =   info . abiDefinition   The underlying mechanism that makes this work is is that:   contract info is uploaded somewhere identifiable by a  URI  which is\n    publicly accessible  anyone can find out what the  URI  is only knowing the contracts\n    address   These requirements are achieved using a 2 step blockchain registry. The\nfirst step registers the contract code (hash) with a content hash in a\ncontract called  HashReg . The second step registers a url with the\ncontent hash in the  UrlHint  contract. These  registry\ncontracts \nwere part of the Frontier release and have carried on into Homestead.  By using this scheme, it is sufficient to know a contract's address to\nlook up the url and fetch the actual contract metadata info bundle.  So if you are a conscientious contract creator, the steps are the\nfollowing:   Deploy the contract itself to the blockchain  Get the contract info json file.  Deploy contract info json file to any url of your choice  Register codehash - content hash -  url   The JS API makes this process very easy by providing helpers. Call admin.register  to extract info from the contract, write out its json\nserialisation in the given file, calculates the content hash of the file\nand finally registers this content hash to the contract's code hash.\nOnce you deployed that file to any url, you can use  admin.registerUrl \nto register the url with your content hash on the blockchain as well.\n(Note that in case a fixed content addressed model is used as document\nstore, the url-hint is no longer necessary.)  source   =   contract test { function multiply(uint a) returns(uint d) { return a * 7; } }  // compile with solc  contract   =   eth . compile . solidity ( source ). test  // create contract object  var   MyContract   =   eth . contract ( contract . info . abiDefinition )  // extracts info from contract, save the json serialisation in the given file,  contenthash   =   admin . saveInfo ( contract . info ,   ~/dapps/shared/contracts/test/info.json )  // send off the contract to the blockchain  MyContract . new ({ from :   primaryAccount ,   data :   contract . code },   function ( error ,   contract ){ \n   if ( ! error     contract . address )   { \n     // calculates the content hash and registers it with the code hash in `HashReg` \n     // it uses address to send the transaction. \n     // returns the content hash that we use to register a url \n     admin . register ( primaryAccount ,   contract . address ,   contenthash ) \n     // here you deploy ~/dapps/shared/contracts/test/info.json to a url \n     admin . registerUrl ( primaryAccount ,   hash ,   url ) \n   }  });", 
            "title": "\u5143\u6570\u636e\u5408\u7ea6"
        }, 
        {
            "location": "/contracts-and-transactions/contracts/#_9", 
            "text": "Often you need to resort to a low level strategy of testing and\ndebugging contracts and transactions. This section introduces some debug\ntools and practices you can use. In order to test contracts and\ntransactions without real-word consequences, you best test it on a\nprivate blockchain. This can be achieved with configuring an alternative\nnetwork id (select a unique integer) and/or disable peers. It is\nrecommended practice that for testing you use an alternative data\ndirectory and ports so that you never even accidentally clash with your\nlive running node (assuming that runs using the defaults. Starting your geth  with in VM debug mode with profiling and highest logging\nverbosity level is recommended:  geth --datadir ~/dapps/testing/00/ --port  30310  --rpcport  8110  --networkid  4567890  --nodiscover --maxpeers  0  --vmdebug --verbosity  6  --pprof --pprofport  6110  console  2  ~/dapp/testint/00/00.log  \u5728\u60a8\u63d0\u4ea4\u4efb\u4f55\u4ea4\u6613\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u8bbe\u7f6e\u60a8\u7684\u79c1\u4eba\u6d4b\u8bd5\u94fe\u3002 \u53c2\u89c1[\u6d4b\u8bd5\u7684\u7f51\u7edc].  // create account. will prompt for password  personal . newAccount ();  // name your primary account, will often use it  primary   =   eth . accounts [ 0 ];  // check your balance (denominated in ether)  balance   =   web3 . fromWei ( eth . getBalance ( primary ),   ether );   // assume an existing unlocked primary account  primary   =   eth . accounts [ 0 ];  // mine 10 blocks to generate ether  // starting miner  miner . start ( 4 );  // sleep for 10 blocks (this can take quite some time).  admin . sleepBlocks ( 10 );  // then stop mining (just not to burn heat in vain)  miner . stop ();  balance   =   web3 . fromWei ( eth . getBalance ( primary ),   ether );   \u521b\u5efa\u4ea4\u6613\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u51e0\u884c\u5f3a\u5236\u5904\u7406\u5b83\u4eec\uff1a  miner . start ( 1 );  admin . sleepBlocks ( 1 );  miner . stop ();   \u4f60\u53ef\u4ee5\u68c0\u67e5\u4f60\u7684\u672a\u51b3\u4ea4\u6613:  // \u663e\u793a\u4ea4\u6613\u6c60  txpool . status  // \u5f85\u5904\u7406\u7684\u6570\u91cf  eth . getBlockTransactionCount ( pending );  // \u6253\u5370\u6240\u6709\u5f85\u5904\u7406\u7684TX  eth . getBlock ( pending ,   true ). transactions   \u5982\u679c\u60a8\u63d0\u4ea4\u4e86\u5408\u7ea6\u521b\u5efa\u4ea4\u6613\uff0c\u60a8\u53ef\u4ee5\u68c0\u67e5\u6240\u9700\u7684\u4ee3\u7801\u662f\u5426\u5b9e\u9645\u63d2\u5165\u5230\u5f53\u524d\u533a\u5757\u94fe\u4e2d\uff1a  txhash   =   eth . sendTansaction ({ from : primary ,   data :   code })  //... mining  contractaddress   =   eth . getTransactionReceipt ( txhash );  eth . getCode ( contractaddress )", 
            "title": "\u6d4b\u8bd5\u5408\u7ea6\u548c\u4ea4\u6613"
        }, 
        {
            "location": "/contracts-and-transactions/accessing-contracts-and-transactions/", 
            "text": "\u8bbf\u95ee\u5408\u540c\u548c\u4ea4\u6613\n\n\nRPC\n\n\nIn previous sections we have seen how contracts can be written, deployed\nand interacted with. Now it's time to dive in the details of\ncommunicating with the Ethereum network and smart contracts.\n\n\nAn Ethereum node offers a \nRPC\n interface. This\ninterface gives \u00d0app's access to the Ethereum blockchain and\nfunctionality that the node provides, such as compiling smart contract\ncode. It uses a subset of the \nJSON-RPC 2.0\n specification (no support for\nnotifications or named parameters) as serialisation protocol and is available over HTTP and IPC (unix domain sockets on linux/OSX and named pipe's on Windows).\n\n\nIf you are not interested in the details but are looking for an easy to\nuse javascript library you can skip the following sections and continue\nwith [Using Web3 \n]{role=\"ref\"}.\n\n\n\u7ea6\u5b9a\n\n\nThe RPC interface uses a couple of conventions that are not part of the\nJSON-RPC 2.0 specification:\n\n\n\n\nNumbers are hex encoded. This decision was made because some\n    languages have no or limited support for working with extremly large\n    numbers. To prevent these type of errors numbers are hex encoded and\n    it is up to the developer to parse these numbers and handle them\n    appropriately. See the \nhex encoding\n    section\n\n    on the wiki for examples.\n\n\nDefault block number, several RPC methods accept a block number. In\n    some cases it's not possible to give a block number or not very\n    convenient. For these cases the default block number can be one of\n    these strings [\\\"earliest\\\", \\\"latest\\\", \\\"pending\\\"]. See the\n    \nwiki\n    page\n\n    for a list of RPC methods that use the default block parameters.\n\n\n\n\n\u90e8\u7f72\u5408\u540c\n\n\nWe will go through the different steps to deploy the following contract\nusing only the RPC interface.\n\n\ncontract\n \nMultiply7\n \n{\n\n   \nevent\n \nPrint\n(\nuint\n);\n\n   \nfunction\n \nmultiply\n(\nuint\n \ninput\n)\n \nreturns\n \n(\nuint\n)\n \n{\n\n      \nPrint\n(\ninput\n \n*\n \n7\n);\n\n      \nreturn\n \ninput\n \n*\n \n7\n;\n\n   \n}\n\n\n}\n\n\n\n\n\nThe first thing to do is make sure the HTTP RPC interface is enabled.\nThis means for geth we supply the \n--rpc\n flag on startup and for eth\nthe \n-j\n flag. In this example we use the geth node on a private\ndevelopment chain. Using this approach we don't need ether on the real\nnetwork.\n\n\n geth --rpc --dev --mine --minerthreads \n1\n --unlock \n0\n console \n2\ngeth.log\n\n\n\n\nThis will start the HTTP RPC interface on \nhttp://localhost:8545\n.\n\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\n\ngeth supports \nCORS\n, see the \n--rpccorsdomain\n flag for more information.\n:::\n\n\nWe can verify that the interface is running by retrieving the coinbase\naddress and balance using \ncurl\n.\nPlease note that data in these examples will differ on your local node.\nIf you want to try these command replace the request params accordingly.\n\n\n curl --data \n{\njsonrpc\n:\n2.0\n,\nmethod\n:\neth_coinbase\n, \nid\n:1}\n -H \nContent-Type: application/json\n localhost:8545\n\n{\nid\n:1,\njsonrpc\n:\n2.0\n,\nresult\n:\n[\n0x9b1d35635cc34752ca54713bb99d38614f63c955\n]}\n\n\n\n curl --data \n{\njsonrpc\n:\n2.0\n,\nmethod\n:\neth_getBalance\n, \nparams\n: [\n0x9b1d35635cc34752ca54713bb99d38614f63c955\n, \nlatest\n], \nid\n:2}\n -H \nContent-Type: application/json\n localhost:8545\n\n{\nid\n:2,\njsonrpc\n:\n2.0\n,\nresult\n:\n0x1639e49bba16280000\n}\n\n\n\n\n\nRemember when we said that numbers are hex encoded? In this case the\nbalance is returned in wei as a hex string. If we want to have the\nbalance in ether as a number we can use web3 from the geth console.\n\n\n \nweb3\n.\nfromWei\n(\n0x1639e49bba16280000\n,\n \nether\n)\n\n\n410\n\n\n\n\n\nNow that we have some ether on our private development chain we can\ndeploy the contract. The first step is to compile the Multiply7 contract\nto byte code that can be sent to the EVM. Follow these\n\nthese\n\ninstructions to install solc, the solidity compiler.\n\n\nThe next step is to compile the Multiply7 contract to byte code that can be send to the EVM.\n\n\n# \n echo \npragma solidity ^0.4.16; contract Multiply7 { event Print(uint); function multiply(uint input) public returns (uint) { Print(input * 7); return input * 7; } }\n | solc --bin\n\n \nstdin\n:Multiply7 \n=======\n\nBinary:\n6060604052341561000f57600080fd5b60eb8061001d6000396000f300606060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063c6888fa1146044575b600080fd5b3415604e57600080fd5b606260048080359060200190919050506078565b6040518082815260200191505060405180910390f35b60007f24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da600783026040518082815260200191505060405180910390a16007820290509190505600a165627a7a7230582040383f19d9f65246752244189b02f56e8d0980ed44e7a56c0b200458caad20bb0029\n\n\n\n\nNow that we have the compiled code we need to determine how much gas it costs to deploy it. The RPC interface has an \neth_estimateGas\n method that will give us an estimate.\n\n\n curl --data \n{\njsonrpc\n:\n2.0\n,\nmethod\n: \neth_estimateGas\n, \nparams\n: [{\nfrom\n: \n0x9b1d35635cc34752ca54713bb99d38614f63c955\n, \ndata\n: \n0x6060604052341561000f57600080fd5b60eb8061001d6000396000f300606060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063c6888fa1146044575b600080fd5b3415604e57600080fd5b606260048080359060200190919050506078565b6040518082815260200191505060405180910390f35b60007f24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da600783026040518082815260200191505060405180910390a16007820290509190505600a165627a7a7230582040383f19d9f65246752244189b02f56e8d0980ed44e7a56c0b200458caad20bb0029\n}], \nid\n: 5}\n -H \nContent-Type: application/json\n localhost:8545\n\n{\njsonrpc\n:\n2.0\n,\nid\n:5,\nresult\n:\n0x1c31e\n}\n\n\n\n\n\nAnd finally deploy the contract.\n\n\n curl --data \n{\njsonrpc\n:\n2.0\n,\nmethod\n: \neth_sendTransaction\n, \nparams\n: [{\nfrom\n: \n0x9b1d35635cc34752ca54713bb99d38614f63c955\n, \ngas\n: \n0x1c31e\n, \ndata\n: \n0x6060604052341561000f57600080fd5b60eb8061001d6000396000f300606060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063c6888fa1146044575b600080fd5b3415604e57600080fd5b606260048080359060200190919050506078565b6040518082815260200191505060405180910390f35b60007f24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da600783026040518082815260200191505060405180910390a16007820290509190505600a165627a7a7230582040383f19d9f65246752244189b02f56e8d0980ed44e7a56c0b200458caad20bb0029\n}], \nid\n: 6}\n -H \nContent-Type: application/json\n localhost:8545\n\n{\nid\n:6,\njsonrpc\n:\n2.0\n,\nresult\n:\n0xe1f3095770633ab2b18081658bad475439f6a08c902d0915903bafff06e6febf\n}\n\n\n\n\n\nThe transaction is accepted by the node and a transaction hash is returned. We can use this hash to track the transaction.\n\n\nThe next step is to determine the address where our contract is\ndeployed. Each executed transaction will create a receipt. This receipt\ncontains various information about the transaction such as in which\nblock the transaction was included and how much gas was used by the EVM.\nIf a transaction creates a contract it will also contain the contract\naddress. We can retrieve the receipt with the\n\neth_getTransactionReceipt\n RPC method.\n\n\n curl --data \n{\njsonrpc\n:\n2.0\n,\nmethod\n: \neth_getTransactionReceipt\n, \nparams\n: [\n0xe1f3095770633ab2b18081658bad475439f6a08c902d0915903bafff06e6febf\n], \nid\n: 7}\n -H \nContent-Type: application/json\n localhost:8545\n\n{\njsonrpc\n:\n2.0\n,\nid\n:7,\nresult\n:\n{\nblockHash\n:\n0x77b1a4f6872b9066312de3744f60020cbd8102af68b1f6512a05b7619d527a4f\n,\nblockNumber\n:\n0x1\n,\ncontractAddress\n:\n0x4d03d617d700cf81935d7f797f4e2ae719648262\n,\ncumulativeGasUsed\n:\n0x1c31e\n,\nfrom\n:\n0x9b1d35635cc34752ca54713bb99d38614f63c955\n,\ngasUsed\n:\n0x1c31e\n,\nlogs\n:\n[]\n,\nlogsBloom\n:\n0xn,\nstatus\n:\n0x1\n,\nto\n:null,\ntransactionHash\n:\n0xe1f3095770633ab2b18081658bad475439f6a08c902d0915903bafff06e6febf\n,\ntransactionIndex\n:\n0x0\n}}\n\n\n\n\n\nWe can see that our contract was created on \n0x4d03d617d700cf81935d7f797f4e2ae719648262\n. If you got null instead of a receipt the transaction has not been included in a block yet. Wait for a moment and check if your miner is running and retry it.\n\n\n\u4e0e\u667a\u80fd\u5408\u7ea6\u4ea4\u4e92\n\n\nNow that our contract is deployed we can interact with it. There are 2 methods for this, sending a transaction or [using call as previously explained \n]{role=\"ref\"}.\nIn this example we will be sending a transaction to the multiply method of the contract.\n\n\nIf we look at the documentation for the \neth_sendTransaction\n\nwe can see that we need to supply several arguments. In our case we need\nto specify the \nfrom\n, \nto\n and \ndata\n arguments. \nFrom\n is the public\naddress of our account and \nto\n the contract address. The \ndata\n\nargument is a bit harder. It contains a payload that defines which\nmethod must be called and with which arguments. This is were the ABI\ncomes into play. The ABI defines how to define and encode data for the\nEVM. You can read \nall the details about the ABI\nhere\n.\n\n\nThe bytes of the payload is the function selector and defines which\nmethod is called. This is done by taking the first 4 bytes from the\nKeccak hash over the function name and its argument types and hex encode\nit. The multiply function accepts an uint which is an\n\nalias\n\nfor uint256. This leaves us with:\n\n\n \nweb3\n.\nsha3\n(\nmultiply(uint256)\n).\nsubstring\n(\n0\n,\n \n10\n)\n\n\n0xc6888fa1\n\n\n\n\n\nSee for details \nthis page\n.\n\n\nThe next step is to encode the arguments. We only have one uint256, lets assume we supply the value 6. The ABI has a \nsection\n\nwhich specifies how to encode uint256 types.\n\n\n\n\nint\n: enc(X) is the big-endian two's complement encoding of X, padded on the higher-oder (left) side with 0xff for negative X and with zero bytes\nfor positive X such that the length is a multiple of 32 bytes.\n\n\n\n\nThis encodes to\n\n0000000000000000000000000000000000000000000000000000000000000006\n.\n\n\nCombining the function selector and the encoded argument our \ndata\n will\nbe\n\n0xc6888fa10000000000000000000000000000000000000000000000000000000000000006\n.\n\n\nLets try it:\n\n\n curl --data \n{\njsonrpc\n:\n2.0\n,\nmethod\n: \neth_sendTransaction\n, \nparams\n: [{\nfrom\n: \n0x9b1d35635cc34752ca54713bb99d38614f63c955\n, \nto\n: \n0x4d03d617d700cf81935d7f797f4e2ae719648262\n, \ndata\n: \n0xc6888fa10000000000000000000000000000000000000000000000000000000000000006\n}], \nid\n: 8}\n -H \nContent-Type: application/json\n localhost:8545\n\n{\nid\n:8,\njsonrpc\n:\n2.0\n,\nresult\n:\n0x50905bea8043e1166703a2a72390f6e6eb4f23150c8e7d13094a6d82ce89a054\n}\n\n\n\n\n\nSince we sent a transaction we got the transaction hash returned. If we\nretrieve the receipt we can see something new:\n\n\n{\n\n  \nblockHash\n:\n \n0x55262092dc46db5c7d3595decd4317780896c765c4db69cf2d5f650e46249b13\n,\n\n  \nblockNumber\n:\n \n6\n,\n\n  \ncontractAddress\n:\n \nnull\n,\n\n  \ncumulativeGasUsed\n:\n \n22774\n,\n\n  \nfrom\n:\n \n0x9b1d35635cc34752ca54713bb99d38614f63c955\n,\n\n  \ngasUsed\n:\n \n22774\n,\n\n  \nlogs\n:\n \n[{\n\n      \naddress\n:\n \n0x4d03d617d700cf81935d7f797f4e2ae719648262\n,\n\n      \nblockHash\n:\n \n0x55262092dc46db5c7d3595decd4317780896c765c4db69cf2d5f650e46249b13\n,\n\n      \nblockNumber\n:\n \n6\n,\n\n      \ndata\n:\n \n0x000000000000000000000000000000000000000000000000000000000000002a\n,\n\n      \nlogIndex\n:\n \n0\n,\n\n      \nremoved\n:\n \nfalse\n,\n\n      \ntopics\n:\n \n[\n0x24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da\n],\n\n      \ntransactionHash\n:\n \n0x50905bea8043e1166703a2a72390f6e6eb4f23150c8e7d13094a6d82ce89a054\n,\n\n      \ntransactionIndex\n:\n \n0\n\n  \n}],\n\n  \nlogsBloom\n:\n \n0xn,\n\n  \nstatus\n:\n \n0x1\n,\n\n  \nto\n:\n \n0x4d03d617d700cf81935d7f797f4e2ae719648262\n,\n\n  \ntransactionHash\n:\n \n0x50905bea8043e1166703a2a72390f6e6eb4f23150c8e7d13094a6d82ce89a054\n,\n\n  \ntransactionIndex\n:\n \n0\n\n\n}\n\n\n\n\n\nThe receipt contains a log. This log was generated by the EVM on\ntransaction execution and included in the receipt. If we look at the\nmultipy function we can see that the Print event was raised with the\ninput times 7. Since the argument for the Print event was a uint256 we\ncan decode it according to the ABI rules which will leave us with the\nexpected decimal 42.\n\n\n \necho\n \n$((\n0\nx000000000000000000000000000000000000000000000000000000000000002a\n))\n\n\n42\n\n\n\n\n\nApart from the data it is worth noting that topics can be used to\ndetermine which event created the log:\n\n\n \nweb3\n.\nsha3\n(\nPrint(uint256)\n)\n\n\n24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da\n\n\n\n\n\nYou can read more about events, topics and indexing in the \nSolidity\ntutorial\n.\n\n\nThis was just a brief introduction into some of the most common tasks.\nSee for a full list of available RPC methods the \nRPC wiki\npage\n.\n\n\nWeb3.js {#using_web3.js}\n\n\nAs we have seen in the previous example using the JSON-RPC interface can\nbe quite tedious and error-prone, especially when we have to deal with\nthe ABI. Web3.js is a javascript library that works on top of the\nEthereum RPC interface. Its goal is to provide a more user friendly\ninterface and reducing the chance for errors.\n\n\nDeploying the Multiply7 contract using web3 would look like:\n\n\nvar\n \nsource\n \n=\n \ncontract Multiply7 { event Print(uint); function multiply(uint input) returns (uint) { Print(input * 7); return input * 7; } }\n;\n\n\nvar\n \ncompiled\n \n=\n \nweb3\n.\neth\n.\ncompile\n.\nsolidity\n(\nsource\n);\n\n\nvar\n \ncode\n \n=\n \ncompiled\n.\nMultiply7\n.\ncode\n;\n\n\nvar\n \nabi\n \n=\n \ncompiled\n.\nMultiply7\n.\ninfo\n.\nabiDefinition\n;\n\n\n\nweb3\n.\neth\n.\ncontract\n(\nabi\n).\nnew\n({\nfrom\n:\n \n0xeb85a5557e5bdc18ee1934a89d8bb402398ee26a\n,\n \ndata\n:\n \ncode\n},\n \nfunction\n \n(\nerr\n,\n \ncontract\n)\n \n{\n\n   \nif\n \n(\n!\nerr\n \n \ncontract\n.\naddress\n)\n\n      \nconsole\n.\nlog\n(\ndeployed on:\n,\n \ncontract\n.\naddress\n);\n\n   \n}\n\n\n);\n\n\n\ndeployed\n \non\n:\n \n0x0ab60714033847ad7f0677cc7514db48313976e2\n\n\n\n\n\nLoad a deployed contract and send a transaction:\n\n\nvar\n \nsource\n \n=\n \ncontract Multiply7 { event Print(uint); function multiply(uint input) returns (uint) { Print(input * 7); return input * 7; } }\n;\n\n\nvar\n \ncompiled\n \n=\n \nweb3\n.\neth\n.\ncompile\n.\nsolidity\n(\nsource\n);\n\n\nvar\n \nMultiply7\n \n=\n \nweb3\n.\neth\n.\ncontract\n(\ncompiled\n.\nMultiply7\n.\ninfo\n.\nabiDefinition\n);\n\n\nvar\n \nmulti\n \n=\n \nMultiply7\n.\nat\n(\n0x0ab60714033847ad7f0677cc7514db48313976e2\n)\n\n\nmulti\n.\nmultiply\n.\nsendTransaction\n(\n6\n,\n \n{\nfrom\n:\n \n0xeb85a5557e5bdc18ee1934a89d8bb402398ee26a\n})\n\n\n\n\n\nRegister a callback which is called when the \nPrint\n event created a\nlog.\n\n\nmulti\n.\nPrint\n(\nfunction\n(\nerr\n,\n \ndata\n)\n \n{\n \nconsole\n.\nlog\n(\nJSON\n.\nstringify\n(\ndata\n))\n \n})\n\n\n{\naddress\n:\n0x0ab60714033847ad7f0677cc7514db48313976e2\n,\nargs\n:\n \n{\n:\n21\n},\nblockHash\n:\n0x259c7dc07c99eed9dd884dcaf3e00a81b2a1c83df2d9855ce14c464b59f0c8b3\n,\nblockNumber\n:\n539\n,\nevent\n:\nPrint\n,\nlogIndex\n:\n0\n,\n \ntransactionHash\n:\n0x5c115aaa5418118457e96d3c44a3b66fe9f2bead630d79455d0ecd832dc88d48\n,\ntransactionIndex\n:\n0\n}\n\n\n\n\n\nSee for more information the\n\nweb3.js\n wiki\npage.\n\n\nConsole\n\n\nThe geth \nconsole\n\noffers a command line interface with a javascript runtime. It can\nconnect to a local or remote geth or eth node. It will load the web3.js\nlibrary that users can use. This allows users to deploy and interact\nwith smart contract from the console using web3.js. In fact the examples\nin the [Web3.js \n]{role=\"ref\"} section can by copied\ninto the console.\n\n\n\u67e5\u770b\u5408\u540c\u548c\u4ea4\u6613\n\n\nThere are several online blockchain explorers available that will allow\nyou to inspect the Ethereum blockchain. See for a list:\n[Blockchain explorers \n]{role=\"ref\"}.\n\n\n\u6258\u7ba1\u533a\u5757\u94fe\u63a2\u7d22\u8005 {#blockchain_explorers}\n\n\n\n\nEtherChain\n\n\nEtherCamp\n\n\nEtherScan\n (and for \nTestnet\n)\n\n\n\n\n\u5176\u4ed6\u8d44\u6e90\n\n\n\n\nEtherNodes\n - Geographic distribution of nodes and split by client\n\n\nEtherListen\n - Realtime Ethereum transaction visualizer and audializer", 
            "title": "\u8bbf\u95ee\u5408\u7ea6\u548c\u4ea4\u6613"
        }, 
        {
            "location": "/contracts-and-transactions/accessing-contracts-and-transactions/#_1", 
            "text": "", 
            "title": "\u8bbf\u95ee\u5408\u540c\u548c\u4ea4\u6613"
        }, 
        {
            "location": "/contracts-and-transactions/accessing-contracts-and-transactions/#rpc", 
            "text": "In previous sections we have seen how contracts can be written, deployed\nand interacted with. Now it's time to dive in the details of\ncommunicating with the Ethereum network and smart contracts.  An Ethereum node offers a  RPC  interface. This\ninterface gives \u00d0app's access to the Ethereum blockchain and\nfunctionality that the node provides, such as compiling smart contract\ncode. It uses a subset of the  JSON-RPC 2.0  specification (no support for\nnotifications or named parameters) as serialisation protocol and is available over HTTP and IPC (unix domain sockets on linux/OSX and named pipe's on Windows).  If you are not interested in the details but are looking for an easy to\nuse javascript library you can skip the following sections and continue\nwith [Using Web3  ]{role=\"ref\"}.", 
            "title": "RPC"
        }, 
        {
            "location": "/contracts-and-transactions/accessing-contracts-and-transactions/#_2", 
            "text": "The RPC interface uses a couple of conventions that are not part of the\nJSON-RPC 2.0 specification:   Numbers are hex encoded. This decision was made because some\n    languages have no or limited support for working with extremly large\n    numbers. To prevent these type of errors numbers are hex encoded and\n    it is up to the developer to parse these numbers and handle them\n    appropriately. See the  hex encoding\n    section \n    on the wiki for examples.  Default block number, several RPC methods accept a block number. In\n    some cases it's not possible to give a block number or not very\n    convenient. For these cases the default block number can be one of\n    these strings [\\\"earliest\\\", \\\"latest\\\", \\\"pending\\\"]. See the\n     wiki\n    page \n    for a list of RPC methods that use the default block parameters.", 
            "title": "\u7ea6\u5b9a"
        }, 
        {
            "location": "/contracts-and-transactions/accessing-contracts-and-transactions/#_3", 
            "text": "We will go through the different steps to deploy the following contract\nusing only the RPC interface.  contract   Multiply7   { \n    event   Print ( uint ); \n    function   multiply ( uint   input )   returns   ( uint )   { \n       Print ( input   *   7 ); \n       return   input   *   7 ; \n    }  }   The first thing to do is make sure the HTTP RPC interface is enabled.\nThis means for geth we supply the  --rpc  flag on startup and for eth\nthe  -j  flag. In this example we use the geth node on a private\ndevelopment chain. Using this approach we don't need ether on the real\nnetwork.   geth --rpc --dev --mine --minerthreads  1  --unlock  0  console  2 geth.log  This will start the HTTP RPC interface on  http://localhost:8545 .  ::: {.note}\n::: {.admonition-title}\nNote\n:::  geth supports  CORS , see the  --rpccorsdomain  flag for more information.\n:::  We can verify that the interface is running by retrieving the coinbase\naddress and balance using  curl .\nPlease note that data in these examples will differ on your local node.\nIf you want to try these command replace the request params accordingly.   curl --data  { jsonrpc : 2.0 , method : eth_coinbase ,  id :1}  -H  Content-Type: application/json  localhost:8545 { id :1, jsonrpc : 2.0 , result : [ 0x9b1d35635cc34752ca54713bb99d38614f63c955 ]}   curl --data  { jsonrpc : 2.0 , method : eth_getBalance ,  params : [ 0x9b1d35635cc34752ca54713bb99d38614f63c955 ,  latest ],  id :2}  -H  Content-Type: application/json  localhost:8545 { id :2, jsonrpc : 2.0 , result : 0x1639e49bba16280000 }   Remember when we said that numbers are hex encoded? In this case the\nbalance is returned in wei as a hex string. If we want to have the\nbalance in ether as a number we can use web3 from the geth console.    web3 . fromWei ( 0x1639e49bba16280000 ,   ether )  410   Now that we have some ether on our private development chain we can\ndeploy the contract. The first step is to compile the Multiply7 contract\nto byte code that can be sent to the EVM. Follow these these \ninstructions to install solc, the solidity compiler.  The next step is to compile the Multiply7 contract to byte code that can be send to the EVM.  #   echo  pragma solidity ^0.4.16; contract Multiply7 { event Print(uint); function multiply(uint input) public returns (uint) { Print(input * 7); return input * 7; } }  | solc --bin \n  stdin :Multiply7  ======= \nBinary:\n6060604052341561000f57600080fd5b60eb8061001d6000396000f300606060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063c6888fa1146044575b600080fd5b3415604e57600080fd5b606260048080359060200190919050506078565b6040518082815260200191505060405180910390f35b60007f24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da600783026040518082815260200191505060405180910390a16007820290509190505600a165627a7a7230582040383f19d9f65246752244189b02f56e8d0980ed44e7a56c0b200458caad20bb0029  Now that we have the compiled code we need to determine how much gas it costs to deploy it. The RPC interface has an  eth_estimateGas  method that will give us an estimate.   curl --data  { jsonrpc : 2.0 , method :  eth_estimateGas ,  params : [{ from :  0x9b1d35635cc34752ca54713bb99d38614f63c955 ,  data :  0x6060604052341561000f57600080fd5b60eb8061001d6000396000f300606060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063c6888fa1146044575b600080fd5b3415604e57600080fd5b606260048080359060200190919050506078565b6040518082815260200191505060405180910390f35b60007f24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da600783026040518082815260200191505060405180910390a16007820290509190505600a165627a7a7230582040383f19d9f65246752244189b02f56e8d0980ed44e7a56c0b200458caad20bb0029 }],  id : 5}  -H  Content-Type: application/json  localhost:8545 { jsonrpc : 2.0 , id :5, result : 0x1c31e }   And finally deploy the contract.   curl --data  { jsonrpc : 2.0 , method :  eth_sendTransaction ,  params : [{ from :  0x9b1d35635cc34752ca54713bb99d38614f63c955 ,  gas :  0x1c31e ,  data :  0x6060604052341561000f57600080fd5b60eb8061001d6000396000f300606060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063c6888fa1146044575b600080fd5b3415604e57600080fd5b606260048080359060200190919050506078565b6040518082815260200191505060405180910390f35b60007f24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da600783026040518082815260200191505060405180910390a16007820290509190505600a165627a7a7230582040383f19d9f65246752244189b02f56e8d0980ed44e7a56c0b200458caad20bb0029 }],  id : 6}  -H  Content-Type: application/json  localhost:8545 { id :6, jsonrpc : 2.0 , result : 0xe1f3095770633ab2b18081658bad475439f6a08c902d0915903bafff06e6febf }   The transaction is accepted by the node and a transaction hash is returned. We can use this hash to track the transaction.  The next step is to determine the address where our contract is\ndeployed. Each executed transaction will create a receipt. This receipt\ncontains various information about the transaction such as in which\nblock the transaction was included and how much gas was used by the EVM.\nIf a transaction creates a contract it will also contain the contract\naddress. We can retrieve the receipt with the eth_getTransactionReceipt  RPC method.   curl --data  { jsonrpc : 2.0 , method :  eth_getTransactionReceipt ,  params : [ 0xe1f3095770633ab2b18081658bad475439f6a08c902d0915903bafff06e6febf ],  id : 7}  -H  Content-Type: application/json  localhost:8545 { jsonrpc : 2.0 , id :7, result : { blockHash : 0x77b1a4f6872b9066312de3744f60020cbd8102af68b1f6512a05b7619d527a4f , blockNumber : 0x1 , contractAddress : 0x4d03d617d700cf81935d7f797f4e2ae719648262 , cumulativeGasUsed : 0x1c31e , from : 0x9b1d35635cc34752ca54713bb99d38614f63c955 , gasUsed : 0x1c31e , logs : [] , logsBloom : 0xstatus : 0x1 , to :null, transactionHash : 0xe1f3095770633ab2b18081658bad475439f6a08c902d0915903bafff06e6febf , transactionIndex : 0x0 }}   We can see that our contract was created on  0x4d03d617d700cf81935d7f797f4e2ae719648262 . If you got null instead of a receipt the transaction has not been included in a block yet. Wait for a moment and check if your miner is running and retry it.", 
            "title": "\u90e8\u7f72\u5408\u540c"
        }, 
        {
            "location": "/contracts-and-transactions/accessing-contracts-and-transactions/#_4", 
            "text": "Now that our contract is deployed we can interact with it. There are 2 methods for this, sending a transaction or [using call as previously explained  ]{role=\"ref\"}.\nIn this example we will be sending a transaction to the multiply method of the contract.  If we look at the documentation for the  eth_sendTransaction \nwe can see that we need to supply several arguments. In our case we need\nto specify the  from ,  to  and  data  arguments.  From  is the public\naddress of our account and  to  the contract address. The  data \nargument is a bit harder. It contains a payload that defines which\nmethod must be called and with which arguments. This is were the ABI\ncomes into play. The ABI defines how to define and encode data for the\nEVM. You can read  all the details about the ABI\nhere .  The bytes of the payload is the function selector and defines which\nmethod is called. This is done by taking the first 4 bytes from the\nKeccak hash over the function name and its argument types and hex encode\nit. The multiply function accepts an uint which is an alias \nfor uint256. This leaves us with:    web3 . sha3 ( multiply(uint256) ). substring ( 0 ,   10 )  0xc6888fa1   See for details  this page .  The next step is to encode the arguments. We only have one uint256, lets assume we supply the value 6. The ABI has a  section \nwhich specifies how to encode uint256 types.   int : enc(X) is the big-endian two's complement encoding of X, padded on the higher-oder (left) side with 0xff for negative X and with zero bytes\nfor positive X such that the length is a multiple of 32 bytes.   This encodes to 0000000000000000000000000000000000000000000000000000000000000006 .  Combining the function selector and the encoded argument our  data  will\nbe 0xc6888fa10000000000000000000000000000000000000000000000000000000000000006 .  Lets try it:   curl --data  { jsonrpc : 2.0 , method :  eth_sendTransaction ,  params : [{ from :  0x9b1d35635cc34752ca54713bb99d38614f63c955 ,  to :  0x4d03d617d700cf81935d7f797f4e2ae719648262 ,  data :  0xc6888fa10000000000000000000000000000000000000000000000000000000000000006 }],  id : 8}  -H  Content-Type: application/json  localhost:8545 { id :8, jsonrpc : 2.0 , result : 0x50905bea8043e1166703a2a72390f6e6eb4f23150c8e7d13094a6d82ce89a054 }   Since we sent a transaction we got the transaction hash returned. If we\nretrieve the receipt we can see something new:  { \n   blockHash :   0x55262092dc46db5c7d3595decd4317780896c765c4db69cf2d5f650e46249b13 , \n   blockNumber :   6 , \n   contractAddress :   null , \n   cumulativeGasUsed :   22774 , \n   from :   0x9b1d35635cc34752ca54713bb99d38614f63c955 , \n   gasUsed :   22774 , \n   logs :   [{ \n       address :   0x4d03d617d700cf81935d7f797f4e2ae719648262 , \n       blockHash :   0x55262092dc46db5c7d3595decd4317780896c765c4db69cf2d5f650e46249b13 , \n       blockNumber :   6 , \n       data :   0x000000000000000000000000000000000000000000000000000000000000002a , \n       logIndex :   0 , \n       removed :   false , \n       topics :   [ 0x24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da ], \n       transactionHash :   0x50905bea8043e1166703a2a72390f6e6eb4f23150c8e7d13094a6d82ce89a054 , \n       transactionIndex :   0 \n   }], \n   logsBloom :   0x00000000000008000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000020800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 , \n   status :   0x1 , \n   to :   0x4d03d617d700cf81935d7f797f4e2ae719648262 , \n   transactionHash :   0x50905bea8043e1166703a2a72390f6e6eb4f23150c8e7d13094a6d82ce89a054 , \n   transactionIndex :   0  }   The receipt contains a log. This log was generated by the EVM on\ntransaction execution and included in the receipt. If we look at the\nmultipy function we can see that the Print event was raised with the\ninput times 7. Since the argument for the Print event was a uint256 we\ncan decode it according to the ABI rules which will leave us with the\nexpected decimal 42.    echo   $(( 0 x000000000000000000000000000000000000000000000000000000000000002a ))  42   Apart from the data it is worth noting that topics can be used to\ndetermine which event created the log:    web3 . sha3 ( Print(uint256) )  24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da   You can read more about events, topics and indexing in the  Solidity\ntutorial .  This was just a brief introduction into some of the most common tasks.\nSee for a full list of available RPC methods the  RPC wiki\npage .", 
            "title": "\u4e0e\u667a\u80fd\u5408\u7ea6\u4ea4\u4e92"
        }, 
        {
            "location": "/contracts-and-transactions/accessing-contracts-and-transactions/#web3js-using_web3js", 
            "text": "As we have seen in the previous example using the JSON-RPC interface can\nbe quite tedious and error-prone, especially when we have to deal with\nthe ABI. Web3.js is a javascript library that works on top of the\nEthereum RPC interface. Its goal is to provide a more user friendly\ninterface and reducing the chance for errors.  Deploying the Multiply7 contract using web3 would look like:  var   source   =   contract Multiply7 { event Print(uint); function multiply(uint input) returns (uint) { Print(input * 7); return input * 7; } } ;  var   compiled   =   web3 . eth . compile . solidity ( source );  var   code   =   compiled . Multiply7 . code ;  var   abi   =   compiled . Multiply7 . info . abiDefinition ;  web3 . eth . contract ( abi ). new ({ from :   0xeb85a5557e5bdc18ee1934a89d8bb402398ee26a ,   data :   code },   function   ( err ,   contract )   { \n    if   ( ! err     contract . address ) \n       console . log ( deployed on: ,   contract . address ); \n    }  );  deployed   on :   0x0ab60714033847ad7f0677cc7514db48313976e2   Load a deployed contract and send a transaction:  var   source   =   contract Multiply7 { event Print(uint); function multiply(uint input) returns (uint) { Print(input * 7); return input * 7; } } ;  var   compiled   =   web3 . eth . compile . solidity ( source );  var   Multiply7   =   web3 . eth . contract ( compiled . Multiply7 . info . abiDefinition );  var   multi   =   Multiply7 . at ( 0x0ab60714033847ad7f0677cc7514db48313976e2 )  multi . multiply . sendTransaction ( 6 ,   { from :   0xeb85a5557e5bdc18ee1934a89d8bb402398ee26a })   Register a callback which is called when the  Print  event created a\nlog.  multi . Print ( function ( err ,   data )   {   console . log ( JSON . stringify ( data ))   })  { address : 0x0ab60714033847ad7f0677cc7514db48313976e2 , args :   { : 21 }, blockHash : 0x259c7dc07c99eed9dd884dcaf3e00a81b2a1c83df2d9855ce14c464b59f0c8b3 , blockNumber : 539 , event : Print , logIndex : 0 ,   transactionHash : 0x5c115aaa5418118457e96d3c44a3b66fe9f2bead630d79455d0ecd832dc88d48 , transactionIndex : 0 }   See for more information the web3.js  wiki\npage.", 
            "title": "Web3.js {#using_web3.js}"
        }, 
        {
            "location": "/contracts-and-transactions/accessing-contracts-and-transactions/#console", 
            "text": "The geth  console \noffers a command line interface with a javascript runtime. It can\nconnect to a local or remote geth or eth node. It will load the web3.js\nlibrary that users can use. This allows users to deploy and interact\nwith smart contract from the console using web3.js. In fact the examples\nin the [Web3.js  ]{role=\"ref\"} section can by copied\ninto the console.", 
            "title": "Console"
        }, 
        {
            "location": "/contracts-and-transactions/accessing-contracts-and-transactions/#_5", 
            "text": "There are several online blockchain explorers available that will allow\nyou to inspect the Ethereum blockchain. See for a list:\n[Blockchain explorers  ]{role=\"ref\"}.", 
            "title": "\u67e5\u770b\u5408\u540c\u548c\u4ea4\u6613"
        }, 
        {
            "location": "/contracts-and-transactions/accessing-contracts-and-transactions/#blockchain_explorers", 
            "text": "EtherChain  EtherCamp  EtherScan  (and for  Testnet )", 
            "title": "\u6258\u7ba1\u533a\u5757\u94fe\u63a2\u7d22\u8005 {#blockchain_explorers}"
        }, 
        {
            "location": "/contracts-and-transactions/accessing-contracts-and-transactions/#_6", 
            "text": "EtherNodes  - Geographic distribution of nodes and split by client  EtherListen  - Realtime Ethereum transaction visualizer and audializer", 
            "title": "\u5176\u4ed6\u8d44\u6e90"
        }, 
        {
            "location": "/contracts-and-transactions/mix/", 
            "text": "Mix\n\n\nIDE Mix\u65e8\u5728\u5e2e\u52a9\u60a8\u4f5c\u4e3a\u5f00\u53d1\u4eba\u5458\u521b\u5efa, \u8c03\u8bd5\u548c\u90e8\u7f72\u5951\u7ea6\u548cdapps\uff08\u5408\u7ea6\u540e\u7aef\u548c\u524d\u7aef\uff09.\n\n\n\n\nWarning\n\n\n\u6709\u5f88\u591a\u5173\u4e8eOS X\u4e0aMix\u7684\u5d29\u6e83\u5f15\u5bfc\u95ee\u9898\u7684\u62a5\u544a\u3002\n\u8fd9\u4e2a\u95ee\u9898\u662f\u6211\u4eec\u4e00\u76f4\u5728\u8ffd\u8d76\u4e00\u4e24\u4e2a\u6708\u7684\n\u6d77\u68ee\u866b\n\u3002\n\u6211\u4eec\u73b0\u5728\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u8c03\u8bd5\u914d\u7f6e, \u50cf\u8fd9\u6837:\n\n\n    cmake -DCMAKE_BUILD_TYPE\n=\nDebug ..\n\n\n\n\n\n\n\n\nWarning\n\n\nMix\u7684\u66ff\u4ee3\u540d\u4e3a\nRemix\n\u6b63\u5728\u8fdb\u884c\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u4f7f\u7528Mix\u9047\u5230\u95ee\u9898\uff0c\u4f60\u53ef\u80fd\u4f1a\u66f4\u597d\u5730\u5bfb\u627e\u66ff\u4ee3\u54c1\uff0c\u76f4\u5230Remix\u66f4\u6210\u719f\u3002\n\n\n\n\n\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u7531\u4ee5\u4e0b\u5185\u5bb9\u7ec4\u6210\u7684\u65b0\u9879\u76ee\n\n\n\n\n\u5408\u7ea6\n\n\nhtml\u6587\u4ef6\n\n\nJavaScript\u6587\u4ef6\n\n\n\u6837\u5f0f\u6587\u4ef6\n\n\n\u56fe\u50cf\u6587\u4ef6", 
            "title": "\u6982\u8ff0"
        }, 
        {
            "location": "/contracts-and-transactions/mix/#mix", 
            "text": "IDE Mix\u65e8\u5728\u5e2e\u52a9\u60a8\u4f5c\u4e3a\u5f00\u53d1\u4eba\u5458\u521b\u5efa, \u8c03\u8bd5\u548c\u90e8\u7f72\u5951\u7ea6\u548cdapps\uff08\u5408\u7ea6\u540e\u7aef\u548c\u524d\u7aef\uff09.   Warning  \u6709\u5f88\u591a\u5173\u4e8eOS X\u4e0aMix\u7684\u5d29\u6e83\u5f15\u5bfc\u95ee\u9898\u7684\u62a5\u544a\u3002\n\u8fd9\u4e2a\u95ee\u9898\u662f\u6211\u4eec\u4e00\u76f4\u5728\u8ffd\u8d76\u4e00\u4e24\u4e2a\u6708\u7684 \u6d77\u68ee\u866b \u3002\n\u6211\u4eec\u73b0\u5728\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u8c03\u8bd5\u914d\u7f6e, \u50cf\u8fd9\u6837:      cmake -DCMAKE_BUILD_TYPE = Debug ..    Warning  Mix\u7684\u66ff\u4ee3\u540d\u4e3a Remix \u6b63\u5728\u8fdb\u884c\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u4f7f\u7528Mix\u9047\u5230\u95ee\u9898\uff0c\u4f60\u53ef\u80fd\u4f1a\u66f4\u597d\u5730\u5bfb\u627e\u66ff\u4ee3\u54c1\uff0c\u76f4\u5230Remix\u66f4\u6210\u719f\u3002   \u9996\u5148\u521b\u5efa\u4e00\u4e2a\u7531\u4ee5\u4e0b\u5185\u5bb9\u7ec4\u6210\u7684\u65b0\u9879\u76ee   \u5408\u7ea6  html\u6587\u4ef6  JavaScript\u6587\u4ef6  \u6837\u5f0f\u6587\u4ef6  \u56fe\u50cf\u6587\u4ef6", 
            "title": "Mix"
        }, 
        {
            "location": "/contracts-and-transactions/mix/project-editor/", 
            "text": "\u9879\u76ee\u7f16\u8f91\u5668\n\n\nYou can use projects to manage the creation and testing of a dapp. The\nproject will contain data related to both backend and frontend as well\nas the data related to your scenarios (blockchain interaction) for\ndebugging and testing. The related files will be created and saved\nautomatically in the project directory.\n\n\n\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\n\n\nThe development of a dapp start with the creation of a new project.\nCreate a new project in the \"edit\" menu. Enter the project name, e.g.\n\"Ratings\" and select a path for the project file.\n\n\n\u7f16\u8f91\u540e\u7aef\u5408\u540c\u6587\u4ef6\n\n\nBy default, a new project contains a contract \"Contract\" for backend development on the blockchain using the Solidity language and the \"index.html\" for the frontend.\nCheck the Solidity tutorial for references.\n\n\nEdit the empty default contract \"Contract\", e.g.\n\n\n    \ncontract\n \nRating\n \n{\n\n        \nfunction\n \nsetRating\n(\nbytes32\n \n_key\n,\n \nuint256\n \n_value\n)\n \n{\n\n            \nratings\n[\n_key\n]\n \n=\n \n_value\n;\n\n        \n}\n\n        \nmapping\n \n(\nbytes32\n \n=\nuint256\n)\n \npublic\n \nratings\n;\n\n    \n}\n\n\n\n\n\nCheck the Solidity tutorial for help getting started with the solidity\nprogramming language.\n\n\nSave changes\n\n\n\u7f16\u8f91\u524d\u7aefhtml\u6587\u4ef6\n\n\n\u9009\u62e9\u9ed8\u8ba4\u7684index.html\u6587\u4ef6\u5e76\u8f93\u5165\u4e0b\u9762\u7684\u4ee3\u7801\n\n\n    \n....\n\n    \nscript\n\n    \nfunction\n \ngetRating\n()\n \n{\n\n        \nvar\n \nparam\n \n=\n \ndocument\n.\ngetElementById\n(\nquery\n).\nvalue\n;\n \nvar\n \nres\n \n=\n\n        \ncontracts\n[\nRating\n].\ncontract\n.\nratings\n(\nparam\n);\n\n        \ndocument\n.\ngetElementById\n(\nqueryres\n).\ninnerText\n \n=\n \nres\n;\n\n    \n}\n\n    \nfunction\n \nsetRating\n()\n \n{\n\n        \nvar\n \nkey\n \n=\n \ndocument\n.\ngetElementById\n(\nkey\n).\nvalue\n;\n \nvar\n \nvalue\n \n=\n\n        \nparseInt\n(\ndocument\n.\ngetElementById\n(\nvalue\n).\nvalue\n);\n \nvar\n \nres\n \n=\n\n        \ncontracts\n[\nRating\n].\ncontract\n.\nsetRating\n(\nkey\n,\n \nvalue\n);\n\n    \n}\n\n    \n/script\n\n\n\n\n\n    \n/\nhead\n\n    \nbody\n \nbgcolor\n=\n#E6E6FA\n\n        \nh1\nRatings\n/\nh1\n\n        \ndiv\n\n            Store: \ninput\n \ntype\n=\nstring\n \nid\n=\nkey\n\n            \ninput\n \ntype\n=\nnumber\n \nid\n=\nvalue\n\n            \nbutton\n \nonclick\n=\nsetRating()\nSave\n/button\n        \n/\ndiv\n\n        \ndiv\n\n            Query: \ninput\n \ntype\n=\nstring\n \nid\n=\nquery\n \nonkeyup\n=\ngetRating()\n\n            \ndiv\n \nid\n=\nqueryres\n/\ndiv\n\n        \n/\ndiv\n\n    \n/\nbody\n\n\n/\nhtml\n\n\n\n\n\n\u7136\u540e\uff0c\u53ef\u4ee5\u6dfb\u52a0\u8bb8\u591a\u5408\u540c\u6587\u4ef6\u4ee5\u53ca\u8bb8\u591aHTML\uff0cJavaScript\uff0cCSS\u6587\u4ef6", 
            "title": "\u9879\u76ee\u7f16\u8f91\u5668"
        }, 
        {
            "location": "/contracts-and-transactions/mix/project-editor/#_1", 
            "text": "You can use projects to manage the creation and testing of a dapp. The\nproject will contain data related to both backend and frontend as well\nas the data related to your scenarios (blockchain interaction) for\ndebugging and testing. The related files will be created and saved\nautomatically in the project directory.", 
            "title": "\u9879\u76ee\u7f16\u8f91\u5668"
        }, 
        {
            "location": "/contracts-and-transactions/mix/project-editor/#_2", 
            "text": "The development of a dapp start with the creation of a new project.\nCreate a new project in the \"edit\" menu. Enter the project name, e.g.\n\"Ratings\" and select a path for the project file.", 
            "title": "\u521b\u5efa\u4e00\u4e2a\u65b0\u7684"
        }, 
        {
            "location": "/contracts-and-transactions/mix/project-editor/#_3", 
            "text": "By default, a new project contains a contract \"Contract\" for backend development on the blockchain using the Solidity language and the \"index.html\" for the frontend.\nCheck the Solidity tutorial for references.  Edit the empty default contract \"Contract\", e.g.       contract   Rating   { \n         function   setRating ( bytes32   _key ,   uint256   _value )   { \n             ratings [ _key ]   =   _value ; \n         } \n         mapping   ( bytes32   = uint256 )   public   ratings ; \n     }   Check the Solidity tutorial for help getting started with the solidity\nprogramming language.  Save changes", 
            "title": "\u7f16\u8f91\u540e\u7aef\u5408\u540c\u6587\u4ef6"
        }, 
        {
            "location": "/contracts-and-transactions/mix/project-editor/#html", 
            "text": "\u9009\u62e9\u9ed8\u8ba4\u7684index.html\u6587\u4ef6\u5e76\u8f93\u5165\u4e0b\u9762\u7684\u4ee3\u7801       .... \n     script \n     function   getRating ()   { \n         var   param   =   document . getElementById ( query ). value ;   var   res   = \n         contracts [ Rating ]. contract . ratings ( param ); \n         document . getElementById ( queryres ). innerText   =   res ; \n     } \n     function   setRating ()   { \n         var   key   =   document . getElementById ( key ). value ;   var   value   = \n         parseInt ( document . getElementById ( value ). value );   var   res   = \n         contracts [ Rating ]. contract . setRating ( key ,   value ); \n     } \n     /script        / head \n     body   bgcolor = #E6E6FA \n         h1 Ratings / h1 \n         div \n            Store:  input   type = string   id = key \n             input   type = number   id = value \n             button   onclick = setRating() Save /button\n         / div \n         div \n            Query:  input   type = string   id = query   onkeyup = getRating() \n             div   id = queryres / div \n         / div \n     / body  / html   \u7136\u540e\uff0c\u53ef\u4ee5\u6dfb\u52a0\u8bb8\u591a\u5408\u540c\u6587\u4ef6\u4ee5\u53ca\u8bb8\u591aHTML\uff0cJavaScript\uff0cCSS\u6587\u4ef6", 
            "title": "\u7f16\u8f91\u524d\u7aefhtml\u6587\u4ef6"
        }, 
        {
            "location": "/contracts-and-transactions/mix/scenario-editor/", 
            "text": "\u65b9\u6848\u7f16\u8f91\n\n\n\u65b9\u6848\u53ef\u4ee5\u7528\u6765\u6d4b\u8bd5\u548c\u8c03\u8bd5\u5408\u540c\u3002\n\n\nA scenario is effectively a local blockchain where blocks can be mined\nwithout PoW -- otherwise testing would be quite slow ;).\n\n\nA scenario consists of a sequence of transactions. Usually, a scenario\nwould start with the contract creation scenarios of the dapp. In\naddition, further transactions can be added to test and debug the dapp.\nScenarios can be modified, i.e. transactions can be removed. Note that a\nscenario needs to be rebuilt for modifications to become effective.\nFurther testing can be done using local JS calls via the JS API.\n\n\nIn case it's not open, access the scenario and debugger pane by pressing\nF7 or Windows > Show right or the debug button in the upper right\ncorner of the main window.\n\n\n\u521b\u5efa\u548c\u8bbe\u7f6e\u4e00\u4e2a\u65b0\u7684\u65b9\u6848\n\n\nWhen you launch Mix for the first time, an empty scenario, i.e. not\ncontaining any transactions, will be created. Add an account named\n\"MyAccount\" and set it's initial balance to 1 ether. Click OK. Rename\nthe scenario to \"Deploy\".\n\n\n\u4fee\u6539\u5e10\u6237\u7684\u521d\u59cb\u4ee5\u592a\u5e73\u8861\n\n\nActually, we want to do a lot of tests Edit the Genesis block parameters\nand set your initial account balance to 1000 ether. Rebuild the scenario\nfor the change to become effective.\n\n\n\u91cd\u5efa\u573a\u666f\n\n\nEach time a transaction is modified or an account added, the scenario\nhas to be rebuilt for modifications to become effective. Note that if a\nscenario is rebuilt the web frontend (local storage) may also need to be\nreset (this is not done automatically be Mix).\n\n\n\u521b\u5efa\u4e00\u4e2a\u4e8b\u52a1\n\n\nLet's get some ether sent to Bob. Create another account named \"Bob\"\nwith zero ether balance. Create a new transaction in the scenario pane.\nClick \"Add Tx...\" and send 300 ether to Bob. Add a block.\n\n\n\u6539\u53d8\u548c\u91cd\u590d\u4f7f\u7528\u573a\u666f\n\n\nCreate a new scenario or start from a scenario with several transactions\nthat you duplicate first\n\n\nRename the scenario\n\n\nModify scenario by specifying transactions that shall be removed\n\n\nRebuild the scenario\n\n\n\u663e\u793a\u547c\u53eb\n\n\nA contract call is a function invokation. This is not a transaction as a\ncontract call cannot change the state. A contract call is not part of\nthe blockchain but for practical and ux design reason, it is convenient\nto display calls at the same functional level as a transaction. The JS\nicon warn you that this is not a transaction but a call. To show/hide\ncall, click on the menu Scenario -> Display calls.", 
            "title": "\u573a\u666f\u7f16\u8f91\u5668"
        }, 
        {
            "location": "/contracts-and-transactions/mix/scenario-editor/#_1", 
            "text": "\u65b9\u6848\u53ef\u4ee5\u7528\u6765\u6d4b\u8bd5\u548c\u8c03\u8bd5\u5408\u540c\u3002  A scenario is effectively a local blockchain where blocks can be mined\nwithout PoW -- otherwise testing would be quite slow ;).  A scenario consists of a sequence of transactions. Usually, a scenario\nwould start with the contract creation scenarios of the dapp. In\naddition, further transactions can be added to test and debug the dapp.\nScenarios can be modified, i.e. transactions can be removed. Note that a\nscenario needs to be rebuilt for modifications to become effective.\nFurther testing can be done using local JS calls via the JS API.  In case it's not open, access the scenario and debugger pane by pressing\nF7 or Windows > Show right or the debug button in the upper right\ncorner of the main window.", 
            "title": "\u65b9\u6848\u7f16\u8f91"
        }, 
        {
            "location": "/contracts-and-transactions/mix/scenario-editor/#_2", 
            "text": "When you launch Mix for the first time, an empty scenario, i.e. not\ncontaining any transactions, will be created. Add an account named\n\"MyAccount\" and set it's initial balance to 1 ether. Click OK. Rename\nthe scenario to \"Deploy\".", 
            "title": "\u521b\u5efa\u548c\u8bbe\u7f6e\u4e00\u4e2a\u65b0\u7684\u65b9\u6848"
        }, 
        {
            "location": "/contracts-and-transactions/mix/scenario-editor/#_3", 
            "text": "Actually, we want to do a lot of tests Edit the Genesis block parameters\nand set your initial account balance to 1000 ether. Rebuild the scenario\nfor the change to become effective.", 
            "title": "\u4fee\u6539\u5e10\u6237\u7684\u521d\u59cb\u4ee5\u592a\u5e73\u8861"
        }, 
        {
            "location": "/contracts-and-transactions/mix/scenario-editor/#_4", 
            "text": "Each time a transaction is modified or an account added, the scenario\nhas to be rebuilt for modifications to become effective. Note that if a\nscenario is rebuilt the web frontend (local storage) may also need to be\nreset (this is not done automatically be Mix).", 
            "title": "\u91cd\u5efa\u573a\u666f"
        }, 
        {
            "location": "/contracts-and-transactions/mix/scenario-editor/#_5", 
            "text": "Let's get some ether sent to Bob. Create another account named \"Bob\"\nwith zero ether balance. Create a new transaction in the scenario pane.\nClick \"Add Tx...\" and send 300 ether to Bob. Add a block.", 
            "title": "\u521b\u5efa\u4e00\u4e2a\u4e8b\u52a1"
        }, 
        {
            "location": "/contracts-and-transactions/mix/scenario-editor/#_6", 
            "text": "Create a new scenario or start from a scenario with several transactions\nthat you duplicate first  Rename the scenario  Modify scenario by specifying transactions that shall be removed  Rebuild the scenario", 
            "title": "\u6539\u53d8\u548c\u91cd\u590d\u4f7f\u7528\u573a\u666f"
        }, 
        {
            "location": "/contracts-and-transactions/mix/scenario-editor/#_7", 
            "text": "A contract call is a function invokation. This is not a transaction as a\ncontract call cannot change the state. A contract call is not part of\nthe blockchain but for practical and ux design reason, it is convenient\nto display calls at the same functional level as a transaction. The JS\nicon warn you that this is not a transaction but a call. To show/hide\ncall, click on the menu Scenario -> Display calls.", 
            "title": "\u663e\u793a\u547c\u53eb"
        }, 
        {
            "location": "/contracts-and-transactions/mix/state-viewer/", 
            "text": "\u72b6\u6001\u67e5\u770b\u5668\n\n\nThis panel is located below the block chain panel, in the scenario view.\nOnce the blockchain has been run, this panel shows the state of the\nblockchain.\n\n\nBy state we mean all accounts balance (including contract and normal\naccount), and the storage (global variable of all deployed contract).\nThe content of this panel is not static, it depends on the selected\ntransaction on the blockchain panel. The state shown here is the state\nresulting of the execution of the selected transaction.\n\n\n\n\nIn that case, 2 contracts are deployed, the selected transaction\n(deployment of testCtr) is the last one. so the state view shows the\nstorage of both TestCtr and BasicContract.", 
            "title": "\u72b6\u6001\u67e5\u770b\u5668"
        }, 
        {
            "location": "/contracts-and-transactions/mix/state-viewer/#_1", 
            "text": "This panel is located below the block chain panel, in the scenario view.\nOnce the blockchain has been run, this panel shows the state of the\nblockchain.  By state we mean all accounts balance (including contract and normal\naccount), and the storage (global variable of all deployed contract).\nThe content of this panel is not static, it depends on the selected\ntransaction on the blockchain panel. The state shown here is the state\nresulting of the execution of the selected transaction.   In that case, 2 contracts are deployed, the selected transaction\n(deployment of testCtr) is the last one. so the state view shows the\nstorage of both TestCtr and BasicContract.", 
            "title": "\u72b6\u6001\u67e5\u770b\u5668"
        }, 
        {
            "location": "/contracts-and-transactions/mix/transaction-explorer/", 
            "text": "\u4e8b\u52a1\u7ba1\u7406\u5668\n\n\nUsing the transaction pane\n\n\nThe transaction pane enables you to explore transactions receipts,\nincluding\n\n\n\n\n\n\nInput parameters\n\n\nReturn parameters\n\n\nEvent logs\n\n\n\n\n\n\nTo display the transaction explorer, click on the down triangle icon\nwhich is on the right of each transaction, this will expand transaction\ndetails:\n\n\n\n\nThen you can either copy the content of this transaction in the\nclipboard, Edit the current transaction (you will have to rerun the\nblockchain then), or debug the transaction.", 
            "title": "\u4e8b\u52a1\u7ba1\u7406\u5668"
        }, 
        {
            "location": "/contracts-and-transactions/mix/transaction-explorer/#_1", 
            "text": "Using the transaction pane  The transaction pane enables you to explore transactions receipts,\nincluding    Input parameters  Return parameters  Event logs    To display the transaction explorer, click on the down triangle icon\nwhich is on the right of each transaction, this will expand transaction\ndetails:   Then you can either copy the content of this transaction in the\nclipboard, Edit the current transaction (you will have to rerun the\nblockchain then), or debug the transaction.", 
            "title": "\u4e8b\u52a1\u7ba1\u7406\u5668"
        }, 
        {
            "location": "/contracts-and-transactions/mix/javaScript-console/", 
            "text": "JavaScript\u63a7\u5236\u53f0\n\n\nMix exposes the following objects into the global window context\n\n\nweb3 - Ethereum JavaScript API\n\n\ncontracts: A collection of contract objects. keys represents contracts\nname. values are is an objects containing the following properties:\n\n\n\n\n\n\ncontract: contract object instance (created as in\n  web3.eth.contract)\n\n\naddress: contract address from the last deployed state (see below)\n\n\ninterface: contract ABI\n\n\n\n\n\n\nCheck the JavaScript API Reference for further information.\n\n\n\u4f7f\u7528JS\u63a7\u5236\u53f0\u6dfb\u52a0\u4e8b\u52a1\u548c\u672c\u5730\u8c03\u7528\n\n\nIn case the name of the contract is \"Sample\" with a function named\n\"set\", it is possible to make a transaction to call \"set\" by writing:\n\n\ncontracts[\nSample\n].contract.set(14)\n\n\n\n\n\nIf a call can be made this will be done by writing:\n\n\ncontracts[\nSample\n].contract.get.call()\n\n\n\n\n\n| It is also possible to use all properties and functions of the web3\n  object:\n| \nhttps://github.com/ethereum/wiki/wiki/JavaScript-API", 
            "title": "JavaScript\u63a7\u5236\u53f0"
        }, 
        {
            "location": "/contracts-and-transactions/mix/javaScript-console/#javascript", 
            "text": "Mix exposes the following objects into the global window context  web3 - Ethereum JavaScript API  contracts: A collection of contract objects. keys represents contracts\nname. values are is an objects containing the following properties:    contract: contract object instance (created as in\n  web3.eth.contract)  address: contract address from the last deployed state (see below)  interface: contract ABI    Check the JavaScript API Reference for further information.", 
            "title": "JavaScript\u63a7\u5236\u53f0"
        }, 
        {
            "location": "/contracts-and-transactions/mix/javaScript-console/#js", 
            "text": "In case the name of the contract is \"Sample\" with a function named\n\"set\", it is possible to make a transaction to call \"set\" by writing:  contracts[ Sample ].contract.set(14)  If a call can be made this will be done by writing:  contracts[ Sample ].contract.get.call()  | It is also possible to use all properties and functions of the web3\n  object:\n|  https://github.com/ethereum/wiki/wiki/JavaScript-API", 
            "title": "\u4f7f\u7528JS\u63a7\u5236\u53f0\u6dfb\u52a0\u4e8b\u52a1\u548c\u672c\u5730\u8c03\u7528"
        }, 
        {
            "location": "/contracts-and-transactions/mix/transaction-debugger/", 
            "text": "\u4e8b\u52a1\u8c03\u8bd5\u5668\n\n\nMix supports both Solidity and assembly level contract code debugging.\nYou can toggle between the two modes to retrieve the relevant\ninformation you need.\n\n\nAt any execution point the following information is available:\n\n\nVM stack -- See Yellow Paper for VM instruction description\n\n\nCall stack -- Grows when contract is calling into another contract.\nDouble click a stack frame to view the machine state in that frame\n\n\nStorage -- Storage data associated with the contract\n\n\nMemory -- Machine memory allocated up to this execution point\n\n\nCall data -- Transaction or call parameters\n\n\n\u8bbf\u95ee\u8c03\u8bd5\n\n\nWhen transaction details are expanded, you can switch to the debugger\nview by clicking on the \"Debug Transaction\" button\n\n\n\u5728\u8c03\u8bd5\u6a21\u5f0f\u4e4b\u95f4\u5207\u6362\u5e76\u9010\u6b65\u6267\u884c\u4e8b\u52a1\n\n\nThis opens the Solidity debugging mode. Switch between Solidity and EVM\ndebugging mode using the Menu button (Debug -> Show VM code)\n\n\n\n\nStep through a transaction in solidity debugging mode\n\n\nStep through a transaction in EVM debugging mode", 
            "title": "\u4e8b\u52a1\u8c03\u8bd5\u5668"
        }, 
        {
            "location": "/contracts-and-transactions/mix/transaction-debugger/#_1", 
            "text": "Mix supports both Solidity and assembly level contract code debugging.\nYou can toggle between the two modes to retrieve the relevant\ninformation you need.  At any execution point the following information is available:  VM stack -- See Yellow Paper for VM instruction description  Call stack -- Grows when contract is calling into another contract.\nDouble click a stack frame to view the machine state in that frame  Storage -- Storage data associated with the contract  Memory -- Machine memory allocated up to this execution point  Call data -- Transaction or call parameters", 
            "title": "\u4e8b\u52a1\u8c03\u8bd5\u5668"
        }, 
        {
            "location": "/contracts-and-transactions/mix/transaction-debugger/#_2", 
            "text": "When transaction details are expanded, you can switch to the debugger\nview by clicking on the \"Debug Transaction\" button", 
            "title": "\u8bbf\u95ee\u8c03\u8bd5"
        }, 
        {
            "location": "/contracts-and-transactions/mix/transaction-debugger/#_3", 
            "text": "This opens the Solidity debugging mode. Switch between Solidity and EVM\ndebugging mode using the Menu button (Debug -> Show VM code)   Step through a transaction in solidity debugging mode  Step through a transaction in EVM debugging mode", 
            "title": "\u5728\u8c03\u8bd5\u6a21\u5f0f\u4e4b\u95f4\u5207\u6362\u5e76\u9010\u6b65\u6267\u884c\u4e8b\u52a1"
        }, 
        {
            "location": "/contracts-and-transactions/mix/dapp-deployment/", 
            "text": "Dapps\u90e8\u7f72\n\n\n| This feature allows users to deploy the current project as a Dapp in\n  the main blockchain.\n| This will deploy contracts and register frontend resources.\n\n\nThe deployment process includes three steps:\n\n\n\n\n\n\n| \n\u90e8\u7f72\u5408\u540c\n:\n  | This step will deploy contracts in the main blockchain.\n\n\n\n\n\n\n| \n\u6253\u5305dapp\n:\n  | This step is used to package and upload frontend resources.\n\n\n\n\n\n\n| \n\u6ce8\u518c\n:\n  | To render the Dapp, the Ethereum browser (Mist or AlethZero) needs\n    to access this package. This step will register the URL where the\n    resources are stored.\n\n\n\n\n\n\nTo Deploy your Dapp, Please follow these instructions:\n\n\n| Click on \nDeploy\n, \nDeploy to Network\n.\n| This modal dialog displays three parts (see above):\n\n\n\n\n\u90e8\u7f72\u5408\u540c\n\n\n\u9009\u62e9\u65b9\u6848\n\n\n\n\n\"Ethereum node URL\" is the location where a node is running, there must\nbe a node running in order to initiate deployment.\n\n\n\"Pick Scenario to deploy\" is a mandatory step. Mix will execute\ntransactions that are in the selected scenario (all transactions except\ntransactions that are not related to contract creation or contract\ncall). Mix will display all the transactions in the panel below with all\nassociated input parameters.\n\n\n\"Gas Used\": depending on the selected scenario, Mix will display the\ntotal gas used.\n\n\n\n\n\u90e8\u7f72\u573a\u666f\n\n\n\n\n\"Deployment account\" allow selecting the account that Mix will use to\nexecute transactions.\n\n\n\"Gas Price\" shows the default gas price of the network. You can also\nspecify a different value.\n\n\n\"Deployment cost\": depending on the value of the gas price that you want\nto use and the selected scenario. this will display the amount ether\nthat the deployment need.\n\n\n\"Deployed Contract\": before any deployment this part is empty. This will\nbe filled once the deployment is finished by all contract addresses that\nhave been created.\n\n\n\"Verifications\". This will shows the number of verifications (number of\nblocks generated on top of the last block which contains the last\ndeployed transactions). Mix keep track of all the transactions. If one\nis missing (unvalidated) it will be displayed in this panel.\n\n\n\n\n\u6253\u5305dapp\n\n\n\n\nThe action \"Generate Package\" will create a new folder named \\'www\\',\nthis folder will contain all the resources and scripts will be mapped to\nthe current deployed contract. In order to publish your dapp, you need\nto host the www folder in a webserver (to be replace soon by IPFS and\nSWARM). by default the library web3.js is not included. If you want to\nbe able to use the dapp in a standard web browser, you wiil need to\ninclude this library.", 
            "title": "Dapps\u90e8\u7f72"
        }, 
        {
            "location": "/contracts-and-transactions/mix/dapp-deployment/#dapps", 
            "text": "| This feature allows users to deploy the current project as a Dapp in\n  the main blockchain.\n| This will deploy contracts and register frontend resources.  The deployment process includes three steps:    |  \u90e8\u7f72\u5408\u540c :\n  | This step will deploy contracts in the main blockchain.    |  \u6253\u5305dapp :\n  | This step is used to package and upload frontend resources.    |  \u6ce8\u518c :\n  | To render the Dapp, the Ethereum browser (Mist or AlethZero) needs\n    to access this package. This step will register the URL where the\n    resources are stored.    To Deploy your Dapp, Please follow these instructions:  | Click on  Deploy ,  Deploy to Network .\n| This modal dialog displays three parts (see above):   \u90e8\u7f72\u5408\u540c  \u9009\u62e9\u65b9\u6848   \"Ethereum node URL\" is the location where a node is running, there must\nbe a node running in order to initiate deployment.  \"Pick Scenario to deploy\" is a mandatory step. Mix will execute\ntransactions that are in the selected scenario (all transactions except\ntransactions that are not related to contract creation or contract\ncall). Mix will display all the transactions in the panel below with all\nassociated input parameters.  \"Gas Used\": depending on the selected scenario, Mix will display the\ntotal gas used.   \u90e8\u7f72\u573a\u666f   \"Deployment account\" allow selecting the account that Mix will use to\nexecute transactions.  \"Gas Price\" shows the default gas price of the network. You can also\nspecify a different value.  \"Deployment cost\": depending on the value of the gas price that you want\nto use and the selected scenario. this will display the amount ether\nthat the deployment need.  \"Deployed Contract\": before any deployment this part is empty. This will\nbe filled once the deployment is finished by all contract addresses that\nhave been created.  \"Verifications\". This will shows the number of verifications (number of\nblocks generated on top of the last block which contains the last\ndeployed transactions). Mix keep track of all the transactions. If one\nis missing (unvalidated) it will be displayed in this panel.   \u6253\u5305dapp   The action \"Generate Package\" will create a new folder named \\'www\\',\nthis folder will contain all the resources and scripts will be mapped to\nthe current deployed contract. In order to publish your dapp, you need\nto host the www folder in a webserver (to be replace soon by IPFS and\nSWARM). by default the library web3.js is not included. If you want to\nbe able to use the dapp in a standard web browser, you wiil need to\ninclude this library.", 
            "title": "Dapps\u90e8\u7f72"
        }, 
        {
            "location": "/contracts-and-transactions/mix/code-editor/", 
            "text": "\u4ee3\u7801\u7f16\u8f91\u5668\n\n\nThis editor provides basic functionalities of a code editor.\n\n\n\n\nIn Solidity or JavaScript mode, an autocompletion plugin is\n  available (Ctrl + Space).\n\n\nIncreasing/decreasing the font size (Ctrl +, Ctrl -)\n\n\nIn Solidity mode, you can display the gas estimation (Tools ->\n  Display Gas Estimation). This will highlight all statements which\n  requires a minimum amount of gas. Color turns to red if the gas\n  required becomes important. It will also display the max execution\n  cost of a transaction (for each function).", 
            "title": "\u4ee3\u7801\u7f16\u8f91\u5668"
        }, 
        {
            "location": "/contracts-and-transactions/mix/code-editor/#_1", 
            "text": "This editor provides basic functionalities of a code editor.   In Solidity or JavaScript mode, an autocompletion plugin is\n  available (Ctrl + Space).  Increasing/decreasing the font size (Ctrl +, Ctrl -)  In Solidity mode, you can display the gas estimation (Tools ->\n  Display Gas Estimation). This will highlight all statements which\n  requires a minimum amount of gas. Color turns to red if the gas\n  required becomes important. It will also display the max execution\n  cost of a transaction (for each function).", 
            "title": "\u4ee3\u7801\u7f16\u8f91\u5668"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/", 
            "text": "Dapps\n\n\nA dapp is a service that enables direct interaction between end users and providers (e.g. connecting buyers and sellers in some marketplace, owners and storers in file storage). Ethereum dapps typically interface users via an HTML/Javascript web application using a Javascript API to communicate with the blockchain. Dapps would typically have their own suite of associated contracts on the blockchain which they use to encode business logic and allow persistent storage of their consensus-critical state. Remember that because of the redundant nature of computation on the Ethereum network, the gas costs of execution will always be higher than private execution offchain. This incentivizes dapp developers to restrict the amount of code they execute and amount of data they store on the blockchain.\n\n\nDapp \u76ee\u5f55\n\n\nDapps that use Ethereum are compiled to the following lists. They are listed in various stages of development (concept, working prototype, live/deployed). If you are developing a dapp, consider adding an entry to these listings:\n\n\n\n\nEthercasts State of the \u00d0apps\n\n\n\n\nThe offered decentralised services listed cover a wide range of areas including finance, insurance, prediction markets, social networks, distributed computation and storage, gambling, marketplace, internet of things, governance, collaboration, development and games.\n\n\n\n\nWhat apps can we eventually expect?\nhttps://www.reddit.com/r/ethereum/comments/2mnl7f/the_top_10_ether_dapps_of_2015/cm63nsf\n\n\n\n\nIn the future, dapps are likely to be listed and distributed in dappstores integrated in dapp browsers.\n\n\nDapp \u6d4f\u89c8\u5668\n\n\n\n\nMist\n - official GUI dapp browser developed by the foundation, alpha stage. Mist as Wallet dapp is in beta.\n\n\nStatus\n - Mobile Ethereum browser (alpha)\n\n\nMetaMask\n - Aaron Kumavis Davis's in-browser GUI. \nEpicenter Bitcoin interview on github\n - supported by DEVgrants\n\n\nAlethZero\n - C++ eth client GUI, (discontinued).\n\n\nSupernova\n - (discontinued).\n\n\n\n\n\u5f00\u53d1\u8005\u5de5\u5177\n\n\nDapp development requires an understanding of the Web3 Javascript API, the JSON RPC API, and the Solidity programming language.\n\n\n::: {.note}\n::: {.admonition-title}\nNote\n:::\n\n\nThere are developer tools that help you develop, test, and deploy dapps\nin a way that automatically utilizes the resources listed below.\n:::\n\n\n\n\nWeb3 JavaScript API\n - This is the main JavaScript SDK to use when you want to interact with an Ethereum node.\n\n\nJSON RPC API\n - This is the low level JSON RPC 2.0 interface to interface with a node. This API is used by the \nWeb3 JavaScript API\n.\n\n\nSolidity Docs\n -Solidity is the Ethereum developed Smart Contract language, which compiles to EVM (Ethereum Virtual Machine) opcodes.\n\n\nSolium\n -Linter to identify and fix style and security issues in Solidity.\n\n\nSolhint\n -Solidity linter that provides security, style guide and best practice rules for smart contract validation.\n\n\n[test-networks]{role=\"ref\"} - Test networks help developers develop and test Ethereum code and network interactions without spending their own ether on the main network. Test network options are listed below.\n\n\n[IDE-or-development-framework]{role=\"ref\"}. This assists you in developing, debugging, and deploying Ethereum applications.\n\n\n\n\nDapp \u5f00\u53d1\u8d44\u6e90\n\n\n\n\nSmart contracts ELI5\n\n\nhttps://blog.slock.it/a-primer-to-the-decentralized-autonomous-organization-dao-69fb125bd3cd\n\n\nA 101 noob\\'s intro to programming smart contracts\n\n\nStandardised contract APIs listing\n\n\n\n\n\u4f8b\n\n\n\n\nexample use of pricefeed - web3 script printing all account balances\n\n\nExample Ethereum contracts\n\n\n\n\nhttps://dappsforbeginners.wordpress.com/tutorials/your-first-dapp/\n\n\nhttps://github.com/ethereum/wiki/wiki/Dapp-Developer-Resources\n\n\n\u6559\u7a0b\n\n\n\n\nDapp tutorials on ethereum.org\n\n\nDapps for beginners tutorial series\n\n\nEris' Solidity Tutorial Series\n\n\nTutorials on advanced Solidity\n\n\nhttp://ethereumj.io/blog/2015/09/09/friendly-ether-bot/\n\n\nhttps://github.com/ConsenSys/ether-pudding\n\n\n\n\nMix-IDE\n\n\nMix is the official Ethereum IDE that allows developers to build and deploy contracts and decentralized applications on top of the Ethereum blockchain. It includes a Solidity source code debugger.\nsec:mix\n\n\nIDEs/\u6784\u67b6\n\n\nBelow are developer frameworks and IDEs used for writing Ethereum dapps.\n\n\n\n\nTruffle\n - Truffle is a development environment, testing framework and asset pipeline for Ethereum.\n\n\nDapple\n - Dapple is a tool for Solidity developers to help build and manage complex contract systems on Ethereum-like blockchains.\n\n\nPopulus\n - Populus is a Smart Contract development framework written in python.\n\n\nEris-PM\n - The Eris Package Manager deploys and tests smart contract systems on  private and public chains.\n\n\nEmbark\n - Embark is a \u00d0app development framework written in JavaScript.\n\n\nEtherScripter (obsolete, discontinued)\n\n\nResilience Raw Transaction Broadcaster\n\n\n\n\n\u590d\u4ec7\u63a7\u5236\u53f0\n\n\nCommand-line console for Ethereum nodes.\n\n\nEthconsole\n connects to\nan Ethereum node running in the background (tested with eth and geth)\nvia IPC and provides an interactive javascript console containing the\nweb3 object with admin additions.\n\n\nHere you could find a list of available commands \nethereum node control\ncommands\n\n\nTo use this console you would need to start a local ethereum node with\nipc communication socket enabled (file \ngeth.ipc\n in data directory). By\ndefault ipc socket should be located at you local home directory in\n.ethereum after you started a node. You could also set \n--test\n option\nto use specific node test commands.\n\n\n eth --test\n\n ethconsole ipc://path/to/geth.ipc\n\n\n\n\nIn the console you could then type\n\n\n web3.eth.\ncommand\n name\n \n(\narguments, \nfunction\n(){})\n\n\n\n\n\nHere the defenition of \n--test\n mode node commands:\n\n\n web3.test.addBlock\n(\n[RLP]\n, \nfunction\n(){})\n - Add a block from a string containing its hex RLP\n\n web3.test.rewindToBlock:\n(\n[int]\n, \nfunction\n(){})\n - Reset the blockchain to specified block number\n\n web3.test.mineBlocks:\n(\n[int]\n, \nfunction\n(){})\n - Mine a certain amount of NoProof blocks into chain\n\n web3.test.modifyTimestamp:\n(\n[int]\n, \nfunction\n(){})\n - Set current block timestamp\n\n web3.test.setChainParams:\n(\n[json]\n, \nfunction\n(){})\n - Reset the blockchain with given node configuration file\n\n\n\n\nMore information about node\n\nconfiguration\n file.\n\n\n\u57fa\u7840\u5c42\u670d\u52a1\n\n\nWhisper \u79c1\u8bed\n\n\n\n\nWhisper\u662f\u4ec0\u4e48\uff0c\u5b83\u7528\u4e8e\u4ec0\u4e48\n - stackexchange Q\nA\n\n\n\u52a0\u6587\u00b7\u4f0d\u5fb7\uff1a\u5618\uff01,\u8033\u8bed\n - DEVCON-1 talk youtube video\n\n\n\u8033\u8bed\u6982\u8ff0\u548c\u68a6\u60f3\u7684API\u4f7f\u7528\n -\n\n\nELI5\n\n\n\n\nSwarm \u7fa4\n\n\nSwarm is a distributed storage platform and content distribution\nservice, a native base layer service of the Ethereum web 3 stack. The\nprimary objective of Swarm is to provide a sufficiently decentralized\nand redundant store of Ethereum\\'s public record, in particular to store\nand distribute dapp code and data as well as block chain data. From an\neconomic point of view, it allows participants to efficiently pool their\nstorage and bandwidth resources in order to provide the aforementioned\nservices to all participants.\n\n\nFrom the end user\\'s perspective, Swarm is not that different from WWW,\nexcept that uploads are not to a specific server. The objective is to\npeer-to-peer storage and serving solution that is DDOS-resistant,\nzero-downtime, fault-tolerant and censorship-resistant as well as\nself-sustaining due to a built-in incentive system which uses peer to\npeer accounting and allows trading resources for payment. Swarm is\ndesigned to deeply integrate with the devp2p multiprotocol network layer\nof Ethereum as well as with the Ethereum blockchain for domain name\nresolution, service payments and content availability insurance.\n\n\n\u00d0\u039eVcon Swarm \u6f14\u8bb2\n\n\n\n\nViktor Tr\u00f3n, Daniel A. Nagy: Swarm\n - Ethereum \u00d0\u039eVcon-1 talk on youtube\n\n\nDaniel A. Nagy: Keeping the Public Record Safe and Accessible\n - Ethereum \u00d0\u039eVcon-0 talk on youtube\n\n\n\n\n\u4ee3\u7801\u548c\u72b6\u6001\n\n\n\n\nsource\n\n\nissues on github\n\n\ndevelopment roadmap\n\n\nethersphere on twitter\n\n\nswarm gitter room\n\n\nswarm subreddit\n\n\n\n\nStorage on and offchain\n\n\n\n\nhttps://www.reddit.com/r/ethereum/comments/3hkv2f/eli5_storage_in_the_ethereum_blockchain/\n\n\nhttps://www.reddit.com/r/ethereum/comments/3npsoz/ethereum_ipfs_and_filecoin/\n\n\nWhat is swarm and what is it used for?\n - stackexchange Q\nA\n\n\n\n\n\u4ee5\u592a\u574a\u95f9\u949f\n\n\n\n\nAuthor:\n Piper Merriam\n\n\nWebsite:\n \nalarm_main_website\n.\n\n\nDocumentation:\n \nalarm_documentation\n.\n\n\n\n\nA marketplace that facilitates scheduling transactions to occur at a\nlater time. Serves a similar role to things like \ncrontab\n in unix, or\n\nsetTimeout\n in javascript.\n\n\n\n\nDecentralized cron service in Ethereum proposal\n - by Peter Szilagyi\n\n\n\n\n\u4ee5\u592a\u574a\u8ba1\u7b97\u5e02\u573a\n\n\n\n\nAuthor:\n Piper Merriam\n\n\nWebsite:\n \ncomputation_market_main_website\n.\n\n\nDocumentation:\n \ncomputation_market_documentation\n.\n\n\n\n\nA marketplace that facilitates verifiable execution of computations off-chain.\nAllows for very expernsive computations to be used within the EVM without having to actually pay the high gas costs of executing them on-chain.\n\n\nBTCRelay\n\n\nBTCrelay\n\n\n:   - \nMore information\n(about ETH/BTC 2-way peg without modifying bitcoin code).\n    - \nBTCrelay audit\n\n\nRANDAO\n\n\nRandom number * \nhttps://www.reddit.com/r/ethereum/comments/49yld7/eli5_how_does_a_service_like_szabodice_grab_a/\n\n\nEVM\n\n\nThe Ethereum Virtual Machine (EVM) is the runtime environment for smart\ncontracts in Ethereum. It is not only sandboxed, but actually completely\nisolated, which means that code running inside the EVM has no access to\nnetwork, filesystem, or other processes. Smart contracts even have\nlimited access to other smart contracts.\n\n\nContracts live on the blockchain in an Ethereum-specific binary format\n(EVM bytecode). However, contracts are typically written in an Ethereum\nhigh level language, compiled into byte code using an EVM compiler, and\nfinally uploaded on the blockchain using an Ethereum client.", 
            "title": "dapps"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/#dapps", 
            "text": "A dapp is a service that enables direct interaction between end users and providers (e.g. connecting buyers and sellers in some marketplace, owners and storers in file storage). Ethereum dapps typically interface users via an HTML/Javascript web application using a Javascript API to communicate with the blockchain. Dapps would typically have their own suite of associated contracts on the blockchain which they use to encode business logic and allow persistent storage of their consensus-critical state. Remember that because of the redundant nature of computation on the Ethereum network, the gas costs of execution will always be higher than private execution offchain. This incentivizes dapp developers to restrict the amount of code they execute and amount of data they store on the blockchain.", 
            "title": "Dapps"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/#dapp", 
            "text": "Dapps that use Ethereum are compiled to the following lists. They are listed in various stages of development (concept, working prototype, live/deployed). If you are developing a dapp, consider adding an entry to these listings:   Ethercasts State of the \u00d0apps   The offered decentralised services listed cover a wide range of areas including finance, insurance, prediction markets, social networks, distributed computation and storage, gambling, marketplace, internet of things, governance, collaboration, development and games.   What apps can we eventually expect? https://www.reddit.com/r/ethereum/comments/2mnl7f/the_top_10_ether_dapps_of_2015/cm63nsf   In the future, dapps are likely to be listed and distributed in dappstores integrated in dapp browsers.", 
            "title": "Dapp \u76ee\u5f55"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/#dapp_1", 
            "text": "Mist  - official GUI dapp browser developed by the foundation, alpha stage. Mist as Wallet dapp is in beta.  Status  - Mobile Ethereum browser (alpha)  MetaMask  - Aaron Kumavis Davis's in-browser GUI.  Epicenter Bitcoin interview on github  - supported by DEVgrants  AlethZero  - C++ eth client GUI, (discontinued).  Supernova  - (discontinued).", 
            "title": "Dapp \u6d4f\u89c8\u5668"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/#_1", 
            "text": "Dapp development requires an understanding of the Web3 Javascript API, the JSON RPC API, and the Solidity programming language.  ::: {.note}\n::: {.admonition-title}\nNote\n:::  There are developer tools that help you develop, test, and deploy dapps\nin a way that automatically utilizes the resources listed below.\n:::   Web3 JavaScript API  - This is the main JavaScript SDK to use when you want to interact with an Ethereum node.  JSON RPC API  - This is the low level JSON RPC 2.0 interface to interface with a node. This API is used by the  Web3 JavaScript API .  Solidity Docs  -Solidity is the Ethereum developed Smart Contract language, which compiles to EVM (Ethereum Virtual Machine) opcodes.  Solium  -Linter to identify and fix style and security issues in Solidity.  Solhint  -Solidity linter that provides security, style guide and best practice rules for smart contract validation.  [test-networks]{role=\"ref\"} - Test networks help developers develop and test Ethereum code and network interactions without spending their own ether on the main network. Test network options are listed below.  [IDE-or-development-framework]{role=\"ref\"}. This assists you in developing, debugging, and deploying Ethereum applications.", 
            "title": "\u5f00\u53d1\u8005\u5de5\u5177"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/#dapp_2", 
            "text": "Smart contracts ELI5  https://blog.slock.it/a-primer-to-the-decentralized-autonomous-organization-dao-69fb125bd3cd  A 101 noob\\'s intro to programming smart contracts  Standardised contract APIs listing", 
            "title": "Dapp \u5f00\u53d1\u8d44\u6e90"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/#_2", 
            "text": "example use of pricefeed - web3 script printing all account balances  Example Ethereum contracts   https://dappsforbeginners.wordpress.com/tutorials/your-first-dapp/  https://github.com/ethereum/wiki/wiki/Dapp-Developer-Resources", 
            "title": "\u4f8b"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/#_3", 
            "text": "Dapp tutorials on ethereum.org  Dapps for beginners tutorial series  Eris' Solidity Tutorial Series  Tutorials on advanced Solidity  http://ethereumj.io/blog/2015/09/09/friendly-ether-bot/  https://github.com/ConsenSys/ether-pudding", 
            "title": "\u6559\u7a0b"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/#mix-ide", 
            "text": "Mix is the official Ethereum IDE that allows developers to build and deploy contracts and decentralized applications on top of the Ethereum blockchain. It includes a Solidity source code debugger. sec:mix", 
            "title": "Mix-IDE"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/#ides", 
            "text": "Below are developer frameworks and IDEs used for writing Ethereum dapps.   Truffle  - Truffle is a development environment, testing framework and asset pipeline for Ethereum.  Dapple  - Dapple is a tool for Solidity developers to help build and manage complex contract systems on Ethereum-like blockchains.  Populus  - Populus is a Smart Contract development framework written in python.  Eris-PM  - The Eris Package Manager deploys and tests smart contract systems on  private and public chains.  Embark  - Embark is a \u00d0app development framework written in JavaScript.  EtherScripter (obsolete, discontinued)  Resilience Raw Transaction Broadcaster", 
            "title": "IDEs/\u6784\u67b6"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/#_4", 
            "text": "Command-line console for Ethereum nodes.  Ethconsole  connects to\nan Ethereum node running in the background (tested with eth and geth)\nvia IPC and provides an interactive javascript console containing the\nweb3 object with admin additions.  Here you could find a list of available commands  ethereum node control\ncommands  To use this console you would need to start a local ethereum node with\nipc communication socket enabled (file  geth.ipc  in data directory). By\ndefault ipc socket should be located at you local home directory in\n.ethereum after you started a node. You could also set  --test  option\nto use specific node test commands.   eth --test  ethconsole ipc://path/to/geth.ipc  In the console you could then type   web3.eth. command  name   ( arguments,  function (){})   Here the defenition of  --test  mode node commands:   web3.test.addBlock ( [RLP] ,  function (){})  - Add a block from a string containing its hex RLP  web3.test.rewindToBlock: ( [int] ,  function (){})  - Reset the blockchain to specified block number  web3.test.mineBlocks: ( [int] ,  function (){})  - Mine a certain amount of NoProof blocks into chain  web3.test.modifyTimestamp: ( [int] ,  function (){})  - Set current block timestamp  web3.test.setChainParams: ( [json] ,  function (){})  - Reset the blockchain with given node configuration file  More information about node configuration  file.", 
            "title": "\u590d\u4ec7\u63a7\u5236\u53f0"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/#_5", 
            "text": "", 
            "title": "\u57fa\u7840\u5c42\u670d\u52a1"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/#whisper", 
            "text": "Whisper\u662f\u4ec0\u4e48\uff0c\u5b83\u7528\u4e8e\u4ec0\u4e48  - stackexchange Q A  \u52a0\u6587\u00b7\u4f0d\u5fb7\uff1a\u5618\uff01,\u8033\u8bed  - DEVCON-1 talk youtube video  \u8033\u8bed\u6982\u8ff0\u548c\u68a6\u60f3\u7684API\u4f7f\u7528  -  ELI5", 
            "title": "Whisper \u79c1\u8bed"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/#swarm", 
            "text": "Swarm is a distributed storage platform and content distribution\nservice, a native base layer service of the Ethereum web 3 stack. The\nprimary objective of Swarm is to provide a sufficiently decentralized\nand redundant store of Ethereum\\'s public record, in particular to store\nand distribute dapp code and data as well as block chain data. From an\neconomic point of view, it allows participants to efficiently pool their\nstorage and bandwidth resources in order to provide the aforementioned\nservices to all participants.  From the end user\\'s perspective, Swarm is not that different from WWW,\nexcept that uploads are not to a specific server. The objective is to\npeer-to-peer storage and serving solution that is DDOS-resistant,\nzero-downtime, fault-tolerant and censorship-resistant as well as\nself-sustaining due to a built-in incentive system which uses peer to\npeer accounting and allows trading resources for payment. Swarm is\ndesigned to deeply integrate with the devp2p multiprotocol network layer\nof Ethereum as well as with the Ethereum blockchain for domain name\nresolution, service payments and content availability insurance.", 
            "title": "Swarm \u7fa4"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/#vcon-swarm", 
            "text": "Viktor Tr\u00f3n, Daniel A. Nagy: Swarm  - Ethereum \u00d0\u039eVcon-1 talk on youtube  Daniel A. Nagy: Keeping the Public Record Safe and Accessible  - Ethereum \u00d0\u039eVcon-0 talk on youtube", 
            "title": "\u00d0\u039eVcon Swarm \u6f14\u8bb2"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/#_6", 
            "text": "source  issues on github  development roadmap  ethersphere on twitter  swarm gitter room  swarm subreddit   Storage on and offchain   https://www.reddit.com/r/ethereum/comments/3hkv2f/eli5_storage_in_the_ethereum_blockchain/  https://www.reddit.com/r/ethereum/comments/3npsoz/ethereum_ipfs_and_filecoin/  What is swarm and what is it used for?  - stackexchange Q A", 
            "title": "\u4ee3\u7801\u548c\u72b6\u6001"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/#_7", 
            "text": "Author:  Piper Merriam  Website:   alarm_main_website .  Documentation:   alarm_documentation .   A marketplace that facilitates scheduling transactions to occur at a\nlater time. Serves a similar role to things like  crontab  in unix, or setTimeout  in javascript.   Decentralized cron service in Ethereum proposal  - by Peter Szilagyi", 
            "title": "\u4ee5\u592a\u574a\u95f9\u949f"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/#_8", 
            "text": "Author:  Piper Merriam  Website:   computation_market_main_website .  Documentation:   computation_market_documentation .   A marketplace that facilitates verifiable execution of computations off-chain.\nAllows for very expernsive computations to be used within the EVM without having to actually pay the high gas costs of executing them on-chain.", 
            "title": "\u4ee5\u592a\u574a\u8ba1\u7b97\u5e02\u573a"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/#btcrelay", 
            "text": "BTCrelay  :   -  More information (about ETH/BTC 2-way peg without modifying bitcoin code).\n    -  BTCrelay audit", 
            "title": "BTCRelay"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/#randao", 
            "text": "Random number *  https://www.reddit.com/r/ethereum/comments/49yld7/eli5_how_does_a_service_like_szabodice_grab_a/", 
            "title": "RANDAO"
        }, 
        {
            "location": "/contracts-and-transactions/developer-tools/#evm", 
            "text": "The Ethereum Virtual Machine (EVM) is the runtime environment for smart\ncontracts in Ethereum. It is not only sandboxed, but actually completely\nisolated, which means that code running inside the EVM has no access to\nnetwork, filesystem, or other processes. Smart contracts even have\nlimited access to other smart contracts.  Contracts live on the blockchain in an Ethereum-specific binary format\n(EVM bytecode). However, contracts are typically written in an Ethereum\nhigh level language, compiled into byte code using an EVM compiler, and\nfinally uploaded on the blockchain using an Ethereum client.", 
            "title": "EVM"
        }, 
        {
            "location": "/contracts-and-transactions/ethereum-tests/", 
            "text": "\u4ee5\u592a\u574a\u6d4b\u8bd5\n\n\n\u4ee5\u592a\u574a\u6d4b\u8bd5\u6587\u6863\u5df2\u88ab\u79fb\u81f3\nethereum-tests\n.", 
            "title": "\u6d4b\u8bd5"
        }, 
        {
            "location": "/contracts-and-transactions/ethereum-tests/#_1", 
            "text": "\u4ee5\u592a\u574a\u6d4b\u8bd5\u6587\u6863\u5df2\u88ab\u79fb\u81f3 ethereum-tests .", 
            "title": "\u4ee5\u592a\u574a\u6d4b\u8bd5"
        }, 
        {
            "location": "/contracts-and-transactions/web3-base-layer-services/", 
            "text": "Web3 Base Layer Services\n\n\nIn addition to the Ethereum blockchain, more components are being\ndeveloped that decentralise other important aspects of web applications.\n\n\n\n\nSwarm - Decentralised data storage and distribution\n\n\nSwarm is a peer to peer data sharing network in which files are\naddressed by the hash of their content. Similar to Bittorrent, it is\npossible to fetch the data from many nodes at once and as long as a\nsingle node hosts a piece of data, it will remain accessible everywhere.\nThis approach makes it possible to distribute data without having to\nhost any kind of server - data accessibility is location independent.\n\n\nOther nodes in the network can be incentivised to replicate and store\nthe data themselves, obviating the need for hosting services when the\noriginal nodes are not connected to the network.\n\n\nWhisper - Decentralised messaging\n\n\nA protocol for private, secure communication directly between nodes.\n\n\n\n\nFurthermore, standard contracts are being created to make the\ndevelopment and usage of distributed applications easier:\n\n\nName registry\n\n\nBecause dapps can be stored anywhere, including the Swarm network, the\nname registry maps names to their content or location. This is a\ndecentralised alternative to the Domain Name System (DNS).\n\n\nSee \nhttps://github.com/ethereum/EIPs/issues/26\n\n\nContract registry\n\n\nTo publish the source code of a specific contract, its address has to be\nmapped to it. The contract registry stores this mapping. Users can then\nlook up this mapping and verify the contract byte code.\n\n\nSee * global registrar code * namereg API", 
            "title": "WEB3\u57fa\u7840\u5c42\u670d\u52a1"
        }, 
        {
            "location": "/contracts-and-transactions/web3-base-layer-services/#web3-base-layer-services", 
            "text": "In addition to the Ethereum blockchain, more components are being\ndeveloped that decentralise other important aspects of web applications.", 
            "title": "Web3 Base Layer Services"
        }, 
        {
            "location": "/contracts-and-transactions/web3-base-layer-services/#swarm-decentralised-data-storage-and-distribution", 
            "text": "Swarm is a peer to peer data sharing network in which files are\naddressed by the hash of their content. Similar to Bittorrent, it is\npossible to fetch the data from many nodes at once and as long as a\nsingle node hosts a piece of data, it will remain accessible everywhere.\nThis approach makes it possible to distribute data without having to\nhost any kind of server - data accessibility is location independent.  Other nodes in the network can be incentivised to replicate and store\nthe data themselves, obviating the need for hosting services when the\noriginal nodes are not connected to the network.", 
            "title": "Swarm - Decentralised data storage and distribution"
        }, 
        {
            "location": "/contracts-and-transactions/web3-base-layer-services/#whisper-decentralised-messaging", 
            "text": "A protocol for private, secure communication directly between nodes.", 
            "title": "Whisper - Decentralised messaging"
        }, 
        {
            "location": "/contracts-and-transactions/web3-base-layer-services/#name-registry", 
            "text": "Because dapps can be stored anywhere, including the Swarm network, the\nname registry maps names to their content or location. This is a\ndecentralised alternative to the Domain Name System (DNS).  See  https://github.com/ethereum/EIPs/issues/26", 
            "title": "Name registry"
        }, 
        {
            "location": "/contracts-and-transactions/web3-base-layer-services/#contract-registry", 
            "text": "To publish the source code of a specific contract, its address has to be\nmapped to it. The contract registry stores this mapping. Users can then\nlook up this mapping and verify the contract byte code.  See * global registrar code * namereg API", 
            "title": "Contract registry"
        }, 
        {
            "location": "/faq/", 
            "text": "\u5e38\u89c1\u95ee\u9898\n\n\n\u4ec0\u4e48\u662f\u4ee5\u592a\u574a\uff1f\n\u4ee5\u592a\u574a\u662f\u4e00\u4e2a\u5206\u6563\u7684\u667a\u80fd\u5408\u7ea6\u5e73\u53f0\uff0c\u7531\u4e00\u4e2a\u540d\u4e3aEther\u7684\u52a0\u5bc6\u8d27\u5e01\u63d0\u4f9b\u652f\u6301\u3002 \u4e86\u89e3\u66f4\u591a\u53ef\u4ee5\u9605\u8bfb\"\n\u4ec0\u4e48\u662f\u4ee5\u592a\u574a\n\"\u9875\u9762\u3002\n\u6211\u542c\u8bf4\u8fc7\u4ee5\u592a\u574a\uff0c \u4f46\u662fGeth\uff0cMist\uff0cEthminer\uff0cMix\u662f\u4ec0\u4e48\uff1f\nGeth\n: \u8fd9\u662f\u4e00\u4e2a\u4ee5\u592a\u574a\u8282\u70b9\u7684\u5b9e\u73b0\uff0c\u5e76\u4e14\u662f\u4e0e\u4ee5\u592a\u574a\u533a\u5757\u94fe\u8fdb\u884c\u4e92\u52a8\u7684\u57fa\u7840\u3002\n    \u901a\u8fc7\u672c\u5730\u8fd0\u884c\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u4e0e\u4ee5\u592a\u574a\u533a\u5757\u94fe\u8fdb\u884c\u4ea4\u4e92\u3002\n    \u9605\u8bfb \ngo-ethereum\u5b89\u88c5\u8bf4\u660e\n.\nMist\n: \u8fd9\u76f8\u5f53\u4e8e\u4e00\u4e2a\u7f51\u9875\u6d4f\u89c8\u5668\uff0c \u4f46\u662f\u5bf9\u4e8e\u4ee5\u592a\u574a\u5e73\u53f0\u3002\n    \u5b83\u5145\u5f53\u4e00\u4e2aGUI\u6765\u663e\u793a\u60a8\u4e0e\u4e4b\u4ea4\u4e92\u7684\u8d26\u6237\u548c\u5408\u7ea6\u3002\n    \u5b83\u8fd8\u5141\u8bb8\u60a8\u5728\u56fe\u5f62\u7528\u6237\u754c\u9762\u4e2d\u521b\u5efa\u5408\u7ea6\u5e76\u4e0e\u5176\u8fdb\u884c\u4ea4\u4e92\uff0c\u800c\u65e0\u9700\u89e6\u6478\u547d\u4ee4\u884c\u3002\n    \u5982\u679c\u60a8\u4e0d\u662f\u5f00\u53d1\u4eba\u5458\uff0c\u53ea\u60f3\u5b58\u50a8\u4ee5\u592a\u548c\u4e0e\u4ee5\u592a\u574a\u5408\u7ea6\u8fdb\u884c\u4ea4\u4e92\uff0c\u90a3\u4e48Mist\u5c31\u662f\u8981\u4f7f\u7528\u7684\u7a0b\u5e8f\u3002\n    \u4e0b\u8f7d\u53ef\u4ee5\u5728\nMist\u53d1\u5e03\u9875\u9762\n\u4e0a\u627e\u5230.\nEthminer\n: \u4e00\u4e2a\u72ec\u7acb\u7684\u6316\u77ff\u673a\u3002 \u8fd9\u53ef\u4ee5\u7528\u6765\u6316\u6398\u6216\u57fa\u51c6\u91c7\u77ff\u8bbe\u5907\u3002 \u5b83\u4e0eeth\uff0cgeth\u548cpyethereum\u517c\u5bb9\u3002 \u67e5\u770b[\u91c7\u77ff]\u9875\u9762\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002\nMix\n: DApp\u521b\u4f5c\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\u3002\u5728Ethereum\u5e73\u53f0\u4e0a\u5feb\u901f\u6784\u5efa\u548c\u8c03\u8bd5\u5206\u6563\u5f0f\u5e94\u7528\u7a0b\u5e8f\u3002\u66f4\u591a\u7684\u4fe1\u606f\u53ef\u4ee5\u5728\n\u6df7\u5408GitHub\u9875\u9762\n.\n\u5982\u4f55\u5c06\u5927\u6587\u4ef6\u5b58\u50a8\u5728\u533a\u5757\u94fe\u4e2d\uff1f\n\u4e00\u822c\u6765\u8bf4\uff0c\u7531\u4e8e\u5b58\u50a8\u6210\u672c\u9ad8\u6602\uff0c\u60a8\u4e0d\u5e0c\u671b\u5728\u4ee5\u592a\u574a\u533a\u5757\u94fe\u4e2d\u5b58\u50a8\u5927\u578b\u6587\u4ef6\u6216\u6570\u636e\u7247\u6bb5\u3002 \u4f60\u4f1a\u9700\u8981\u4f7f\u7528\u7b2c\u4e09\u65b9\u5b58\u50a8\u89e3\u51b3\u65b9\u6848\uff0c\u5982Swarm\u6216IPFS\u3002 Swarm\u662f\u7528\u4e8e\u5206\u5e03\u5f0f\u6587\u4ef6\u5b58\u50a8\u7684\u4ee5\u592a\u574a\u7279\u5b9a\u9879\u76ee\u3002 IPFS\u662f\u4e00\u4e2a\u4e0e\u4ee5\u592a\u574a\u5173\u7cfb\u5bc6\u5207\u7684\u975e\u4ee5\u592a\u574a\u9879\u76ee; \u672a\u6765\u5b83\u4f1a\u88ab\u4f7f\u7528\u72ec\u7acb\u5e76\u53ef\u80fd\u88ab\u7528\u4f5c\u5728Swarm\u4e2d\u7684\u4e00\u4e2a\u9644\u52a0\u5c42\u3002 \u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1[\u4ee5\u592a\u574aStackExchange\u4e3b\u9898]   (http://ethereum.stackexchange.com/questions/1000/what-are-some-proposed-ways-of-storing-data-in-ethereum/1001#1001)\u3002\n\u4ee5\u592a\u574a\u662f\u4ee5\u6bd4\u7279\u5e01\u4e3a\u57fa\u7840\u7684\u5417\uff1f\n\u53ea\u662f\u5728\u5b83\u4f7f\u7528\u533a\u5757\u94fe\u7684\u610f\u4e49\u4e0a\u8bf4, \u6bd4\u7279\u5e01\u662f\u5f00\u521b\u6027\u7684.\u4ee5\u592a\u574a\u6709\u4e00\u4e2a\u72ec\u7acb\u7684\u533a\u5757\u94fe\uff0c\u4e0e\u6bd4\u7279\u5e01\u533a\u5757\u94fe\u6709\u51e0\u4e2a\u91cd\u5927\u7684\u6280\u672f\u5dee\u5f02.\u6709\u5173\u8be6\u7ec6\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605\n\u4ee5\u592a\u574aStackExchange\u7b54\u6848\n.\n\u4ee5\u592a\u574a\u7684\u672a\u6765\u662f\u4ec0\u4e48\uff1f\n\u4ee5\u592a\u574a\u5f00\u53d1\u5546\u8ba1\u5212\u5728\u672a\u6765\u4ece\u5de5\u4f5c\u8bc1\u660e\u5171\u8bc6\u6a21\u578b\u8f6c\u6362\u4e3a\u8bc1\u660e\u5171\u8bc6\u6a21\u578b\u3002\n\u4ed6\u4eec\u8fd8\u5728\u7814\u7a76\u53ef\u4f38\u7f29\u6027\u89e3\u51b3\u65b9\u6848\u4ee5\u53ca\u5982\u4f55\u5728\u533a\u5757\u94fe\u4e0a\u5b58\u50a8\u79d8\u5bc6\u3002\n\u8d26\u6237\u548c\u201c\u94b1\u5305\u5408\u7ea6\u201d\u6709\u4ec0\u4e48\u533a\u522b?\n\u4e00\u4e2a\u5e10\u6237\u662f\u60a8\u7684\u516c\u94a5/\u79c1\u94a5\u5bf9\u6587\u4ef6\uff0c\u4f5c\u4e3a\u60a8\u5728\u533a\u5757\u94fe\u4e0a\u7684\u8eab\u4efd\u3002\u8bf7\u53c2\u9605\u672f\u8bed\u8868\u4e2d\u7684\u201c\u5e10\u6237\u201d\u3002\n\u201c\u94b1\u5305\u5408\u7ea6\u201d\u662f\u4e00\u4e2a\u4ee5\u592a\u574a\u5408\u7ea6\uff0c\u901a\u8fc7\u591a\u91cd\u7b7e\u540d\u548c\u7a0b\u5e8f\u5316\u7684\u5b58\u53d6\u6b3e\u9650\u5236\u7b49\u529f\u80fd\u6765\u4fdd\u62a4\u60a8\u7684\u4ee5\u592a\u548c\u8eab\u4efd\u3002\n\u5728Mist Ethereum \u94b1\u5305 GUI \u5ba2\u6237\u7aef\u4e2d\u53ef\u4ee5\u8f7b\u677e\u521b\u5efa\u94b1\u5305\u5408\u7ea6\u3002\n\u5bc6\u94a5\u6587\u4ef6\u662f\u5426\u53ea\u80fd\u4ece\u60a8\u4e0b\u8f7d\u5ba2\u6237\u7aef\u7684\u8ba1\u7b97\u673a\u4e0a\u8bbf\u95ee\uff1f\n\u4e0d\uff0c\u60a8\u53ef\u4ee5\u5bfc\u51fa\u6216\u79fb\u52a8\u5bc6\u94a5\u6587\u4ef6\uff0c\u4f46\u8bf7\u59cb\u7ec8\u8bb0\u4f4f\u5907\u4efd\u60a8\u7684\u5bc6\u94a5\u6587\u4ef6\uff0c\u5e76\u6ce8\u610f\u60a8\u5c06\u5bc6\u94a5\u6587\u4ef6\u5b58\u50a8\u5728\u54ea\u53f0\u8ba1\u7b97\u673a\u4e0a\u3002\n\u4e0b\u8f7d\u533a\u5757\u94fe\u9700\u8981\u591a\u957f\u65f6\u95f4\uff1f\n\u4ee5\u592a\u574a\u533a\u5757\u94fe\u6301\u7eed\u589e\u957f\uff0c\u622a\u81f32016\u5e743\u6708\uff0c\u63a5\u8fd110GB\u3002\n\u4e0b\u8f7d\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u53d6\u51b3\u4e8e\u60a8\u53ef\u4ee5\u8fde\u63a5\u5230\u7684\u5bf9\u7b49\u7684\u6570\u91cf\uff0c\u60a8\u7684Internet\u8fde\u63a5\u901f\u5ea6\u4ee5\u53ca\u5176\u4ed6\u56e0\u7d20\u3002\n\u67e5\u770b[download-the-blockchain-faster]\u90e8\u5206\uff0c\u4e86\u89e3\u6709\u5173\u5feb\u901f\u540c\u6b65\u533a\u5757\u94fe\u7684\u63d0\u793a\u3002\n\u5982\u4f55\u83b7\u53d6\u8fdb\u51fa\u5730\u5740\u7684\u4ea4\u6613\u6e05\u5355\uff1f\n\u60a8\u5fc5\u987b\u624b\u52a8\u4ece\u533a\u5757\u94fe\u4e2d\u53d6\u51fa\u4ea4\u6613\u624d\u80fd\u5b9e\u73b0\u6b64\u76ee\u7684\u3002\n\u6216\u8005\uff0c\u4f60\u53ef\u4ee5\u4f9d\u8d56\u7b2c\u4e09\u65b9\u7684\u63a2\u7d22\u8005\u7684API\uff0c\u5982\nEtherchain\n.\n\u4f46\u662f\uff0c\u5bf9\u4e8e\u5408\u7ea6\u6267\u884c\u4ea4\u6613\uff0c\u60a8\u53ef\u4ee5\u8fc7\u6ee4\u5408\u7ea6\u65e5\u5fd7\u4ee5\u5b9e\u73b0\u6b64\u76ee\u7684\u3002\n\u5408\u7ea6\u53ef\u4ee5\u652f\u4ed8\u6267\u884c\u7684\u8d39\u7528\u5417?\uff1f\n\u4e0d\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002 \u7528\u4e8e\u6267\u884c\u7684\u71c3\u6599\u5fc5\u987b\u7531\u63d0\u4ea4\u6267\u884c\u8bf7\u6c42\u7684\u5730\u5740\u63d0\u4f9b\u3002\n\u5408\u7ea6\u53ef\u4ee5\u8c03\u7528\u53e6\u4e00\u4efd\u5408\u7ea6\u5417\uff1f\n\u662f\u7684\uff0c\u8fd9\u662f\u53ef\u80fd\u7684\uff0c\u9605\u8bfb\n\u5173\u4e8e\u5408\u7ea6\u4e4b\u95f4\u7684\u4ea4\u4e92\n.\n\u4ea4\u6613\u53ef\u4ee5\u79bb\u7ebf\u7b7e\u7f72\uff0c\u7136\u540e\u5728\u53e6\u4e00\u53f0\u5728\u7ebf\u8bbe\u5907\u4e0a\u63d0\u4ea4\u5417\uff1f\n\u662f\u7684\uff0c\u4f60\u53ef\u4ee5\u53c2\u8003\u4ece\n\u51b0\u7bb1\n\u7684\u89e3\u51b3\u65b9\u6848.\n\u5982\u4f55\u83b7\u5f97\u6d4b\u8bd5\u7f51\u7edc\u4ee5\u592a\u7f51\uff1f\n\u89c1[\u6d4b\u8bd5\u7f51\u7edc]\u3002\n\u4ea4\u6613\u662f\u5426\u53ef\u4ee5\u7531\u7b2c\u4e09\u65b9\u53d1\u9001\uff1f \u5373\u4ea4\u6613\u5e7f\u64ad\u53ef\u4ee5\u5916\u5305\n\u6280\u672f\u4e0a\u662f\u7684\uff0c\u4f46\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u9650\u5236\uff0c\u800c\u4e0d\u662f\u6bd4\u7279\u5e01\u7b7e\u7f72\u7684\u4ea4\u6613: \u5728ethereum\u4ea4\u6613\u6709nonce\n(\u66f4\u786e\u5207\u5730\u8bf4\uff0c\u6bcf\u4e2a\u8d26\u6237\u5728\u53d1\u9001\u4ea4\u6613\u65f6\u6839\u636e\u603b\u5171\u53d1\u9001\u4e86\u591a\u5c11\u4ea4\u6613\u800c\u589e\u52a0\u8ba1\u6570\u5668\u3002\u5982\u679c\u67093\u7b14\u4ea4\u6613\u5df2\u7ecf\u4ece\u8d26\u6237\u53d1\u9001\uff0c\u90a3\u4e48\u8d26\u6237\u73b0\u65f6\u503c\u4e3a3).\n\u4ee5\u592a\u574a\u5408\u7ea6\u662f\u5426\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9API\u6765\u63d0\u53d6\u6570\u636e\uff1f\n\u4e0d\uff0c\u4ee5\u592a\u574a\u5408\u7ea6\u4e0d\u80fd\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4ece\u5916\u90e8\u4fe1\u606f\u6e90\u83b7\u53d6\u6570\u636e\u3002\n\u7136\u800c\uff0c\u6709\u53ef\u80fd\u901a\u8fc7\u4ea4\u6613\u5c06\u6765\u81ea\u5916\u90e8\u7ad9\u70b9\uff08\u4f8b\u5982\u5929\u6c14\u7ad9\u70b9\uff0c\u80a1\u7968\u4ef7\u683c\uff09\u7684\u6570\u636e\u63a8\u9001\u5230\u4ee5\u592a\u574a\u5408\u7ea6\u3002\n\u6709\u4e00\u4e9b\u201c\u4ee5\u592a\u7f51\u201d\u670d\u52a1\u4e0e\u4ee5\u592a\u7f51\u7f51\u7edc\u517c\u5bb9\uff0c\u53ef\u4ee5\u5c06\u6570\u636e\u63a8\u9001/\u63a8\u9001\u5230\u4ee5\u592a\u574a\u7f51\u7edc\u6536\u8d39\u3002\n\u901a\u8fc7\u4ee5\u592a\u574a\u7f51\u7edc\u53d1\u9001\u7684\u6570\u636e\u548c\u5408\u7ea6\u7684\u5185\u5bb9\u662f\u5426\u52a0\u5bc6\uff1f\n\u4ee5\u592a\u574a\u7f51\u7edc\u4e0a\u7684\u6570\u636e\u548c\u5408\u7ea6\u90fd\u662f\u7f16\u7801\u7684\uff0c\u4f46\u6ca1\u6709\u52a0\u5bc6\u3002\n\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u5ba1\u8ba1\u5408\u7ea6\u7684\u884c\u4e3a\u548c\u53d1\u9001\u7ed9\u4ed6\u4eec\u7684\u6570\u636e\u3002\n\u4f46\u662f\uff0c\u5728\u5c06\u6570\u636e\u5e7f\u64ad\u5230\u7f51\u7edc\u4e4b\u524d\uff0c\u60a8\u59cb\u7ec8\u53ef\u4ee5\u81ea\u7531\u5730\u5bf9\u6570\u636e\u8fdb\u884c\u52a0\u5bc6\u3002\n\u6211\u80fd\u5728\u4ee5\u592a\u7f51\u7edc\u4e0a\u50a8\u5b58\u79d8\u5bc6\u6216\u5bc6\u7801\u5417?\uff1f\n\u4ee5\u592a\u574a\u7684\u6240\u6709\u6570\u636e\u90fd\u662f\u516c\u5f00\u7684\u3002\n\u4ee5\u592a\u574a\u5408\u7ea6\u4e2d\u4e0d\u53ef\u80fd\u5b58\u50a8\u79d8\u5bc6\u6216\u5bc6\u7801\u800c\u4e0d\u88ab\u6240\u6709\u4eba\u770b\u5230\u3002\n\u6709\u4e00\u4e9b\u5de5\u4f5c\u6b63\u5728\u901a\u8fc7\u4ee3\u7801\u6df7\u6dc6\u548c\u5176\u4ed6\u6280\u672f\u6765\u5b9e\u73b0\u3002\n\u53ef\u4ee5\u9605\u8bfbVitalik Buterin\u5199\u7684\u4e00\u7bc7\u597d\u6587\u201c\n\u533a\u5757\u94fe\u4e0a\u7684\u9690\u79c1\u6743\n\u201d\u3002\n\u4ee5\u592a\u574a\u5982\u4f55\u6253\u51fb\u91c7\u77ff\u6c60\u96c6\u4e2d\uff1f\n\u57fa\u4e8e\u4ee5\u592a\u574aPoW\u7684\u5171\u8bc6\u7b97\u6cd5\u6709\u4e24\u4e2a\u4e3b\u8981\u7684\u65b9\u6cd5\u6765\u5bf9\u6297\u96c6\u4e2d\u6316\u6398 (\n\u6e90\n).\n\u9996\u5148\u662f\u901a\u8fc7\u51cf\u5c11\u7531\u4e8e\u5b64\u7acb\u77ff\u4e95\u9020\u6210\u7684\u635f\u5931\uff0c\u8fd9\u662f\u72ec\u7acb\u77ff\u5de5\u66f4\u53ef\u80fd\u7ecf\u5386\u7684\u3002\n\u4ee5\u592a\u574a\u91c7\u77ff\u7b97\u6cd5\u7684\u8fd9\u4e00\u90e8\u5206, \u4e00\u79cd\u88ab\u79f0\u4e3aGHOST\u7684\u6280\u672f,\n    \u53ea\u5305\u62ec\u6700\u8fd1\u7684\u5b64\u7acb\u5757\u7684\u6807\u9898\uff0c\u4f5c\u4e3a\u5bf9\u5757\u751f\u4ea7\u8005\u548c\uff08\u5b64\u7acb\u7684\uff09\u5757\u7684\u5305\u62ec\u8005\u7684\u51cf\u5c11\u7684\u56de\u62a5\u7684\u56de\u62a5\u3002\n    \u8fd9\u4e9b\u5305\u62ec\u6765\u81ea\u201c\u7956\u7236\u6bcd\u201d\u6216\u66f4\u65e9\u7684\u5757\u7684\u5b64\u513f\u7ecf\u5e38\u88ab\u79f0\u4e3a\u201c\u53d4\u53d4\u201d\u5757\uff0c\u56e0\u4e3a\u6027\u522b\u4e2d\u6027\u672f\u8bed\u201commer\u201d\u6ca1\u6709\u88ab\u5e7f\u6cdb\u77e5\u9053\u6216\u7406\u89e3\u3002\n\u4ee5\u592a\u574aPoW\u5171\u8bc6\u7b97\u6cd5\u4e0e\u91c7\u77ff\u4e2d\u5fc3\u5316\u7684\u5bf9\u6297\u7684\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528\u6297ASIC\u529f\u80fd\u7684\u529f\u52b3\u8bc1\u660e\uff08Proof of Work\uff09\u529f\u80fd\u3002\n\u901a\u8fc7\u9632\u6b62\u91c7\u77ff\u88ab\u4e13\u95e8\u8bbe\u8ba1\u548c\u751f\u4ea7\u7684\u786c\u4ef6\u6240\u652f\u914d\uff0c\u72ec\u7acb\u7684\u77ff\u5de5\u4eec\u4fdd\u6301\u7ade\u4e89\u529b\uff0c\n    \u751a\u81f3\u5728\u5229\u6da6\u548c/\u6216\u786c\u4ef6\u6295\u8d44\u6c34\u5e73\u4e0a\u5360\u6709\u4f18\u52bf, \u56e0\u4e3a\u4ed6\u4eec\u53ef\u4ee5\u5229\u7528\u73b0\u6210\u7684\u5546\u54c1\u786c\u4ef6 (\u5373\u6d88\u8d39\u8005\u56fe\u5f62\u5361).\n\u4ee5\u592a\u574a\u5c06\u5982\u4f55\u5904\u7406\u4e0d\u65ad\u589e\u957f\u7684\u533a\u5757\u94fe\u5927\u5c0f\uff1f\n\u56f4\u7ed5\u533a\u5757\u94fe\u53ef\u6269\u5c55\u6027\u8fdb\u884c\u4e86\u8bb8\u591a\u8ba8\u8bba\u3002 \u8fd9\u4e2a\u95ee\u9898\u7684\u90e8\u5206\u5730\u56de\u7b54\u5728\n\u8fd9\u4e2a\u4ee5\u592a\u574aStackExchange\n\u548c\n\u8fd9\u4e2a\u6765\u81eaVitalik Buterin\u7684\u535a\u5ba2\u6587\u7ae0\n.\n\u4ee5\u592a\u574a\u5c06\u5982\u4f55\u786e\u4fdd\u7f51\u7edc\u6bcf\u79d2\u80fd\u591f\u8fdb\u884c10,000\u6b21\u4ee5\u4e0a\u7684\u4ea4\u6613\uff1f\n\u4ee5\u592a\u574a\u6b63\u5728\u8ba1\u5212\u5728\u5176\u53d1\u5c55\u8def\u7ebf\u56fe\u7684\u5b81\u9759\u9636\u6bb5\u5b9e\u65bd\u8bc1\u636e\u5171\u8bc6\u534f\u8bae\u53d8\u66f4\u3002 \u6709\u5173\u53ef\u80fd\u7684\u4ee5\u592a\u574aPoS\u5019\u9009\u4eba\u7684\u66f4\u591a\u4fe1\u606f\u4ee5\u53ca\u5982\u4f55\u589e\u52a0\u6bcf\u79d2\u4ea4\u6613\u6b21\u6570\u53ef\u4ee5\n\u5728\u8fd9\u91cc\u627e\u5230\n.\n\u5408\u7ea6\u5728\u54ea\u91cc\nTODO\n\u4f60\u7684\u95ee\u9898\u8fd8\u6ca1\u6709\u56de\u7b54\uff1f\n\u8bf7\u95ee\u793e\u533a\n\u4ee5\u592a\u574aStackExchange\n.", 
            "title": "\u5e38\u89c1\u95ee\u9898"
        }, 
        {
            "location": "/faq/#_1", 
            "text": "\u4ec0\u4e48\u662f\u4ee5\u592a\u574a\uff1f \u4ee5\u592a\u574a\u662f\u4e00\u4e2a\u5206\u6563\u7684\u667a\u80fd\u5408\u7ea6\u5e73\u53f0\uff0c\u7531\u4e00\u4e2a\u540d\u4e3aEther\u7684\u52a0\u5bc6\u8d27\u5e01\u63d0\u4f9b\u652f\u6301\u3002 \u4e86\u89e3\u66f4\u591a\u53ef\u4ee5\u9605\u8bfb\" \u4ec0\u4e48\u662f\u4ee5\u592a\u574a \"\u9875\u9762\u3002 \u6211\u542c\u8bf4\u8fc7\u4ee5\u592a\u574a\uff0c \u4f46\u662fGeth\uff0cMist\uff0cEthminer\uff0cMix\u662f\u4ec0\u4e48\uff1f Geth : \u8fd9\u662f\u4e00\u4e2a\u4ee5\u592a\u574a\u8282\u70b9\u7684\u5b9e\u73b0\uff0c\u5e76\u4e14\u662f\u4e0e\u4ee5\u592a\u574a\u533a\u5757\u94fe\u8fdb\u884c\u4e92\u52a8\u7684\u57fa\u7840\u3002\n    \u901a\u8fc7\u672c\u5730\u8fd0\u884c\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u4e0e\u4ee5\u592a\u574a\u533a\u5757\u94fe\u8fdb\u884c\u4ea4\u4e92\u3002\n    \u9605\u8bfb  go-ethereum\u5b89\u88c5\u8bf4\u660e . Mist : \u8fd9\u76f8\u5f53\u4e8e\u4e00\u4e2a\u7f51\u9875\u6d4f\u89c8\u5668\uff0c \u4f46\u662f\u5bf9\u4e8e\u4ee5\u592a\u574a\u5e73\u53f0\u3002\n    \u5b83\u5145\u5f53\u4e00\u4e2aGUI\u6765\u663e\u793a\u60a8\u4e0e\u4e4b\u4ea4\u4e92\u7684\u8d26\u6237\u548c\u5408\u7ea6\u3002\n    \u5b83\u8fd8\u5141\u8bb8\u60a8\u5728\u56fe\u5f62\u7528\u6237\u754c\u9762\u4e2d\u521b\u5efa\u5408\u7ea6\u5e76\u4e0e\u5176\u8fdb\u884c\u4ea4\u4e92\uff0c\u800c\u65e0\u9700\u89e6\u6478\u547d\u4ee4\u884c\u3002\n    \u5982\u679c\u60a8\u4e0d\u662f\u5f00\u53d1\u4eba\u5458\uff0c\u53ea\u60f3\u5b58\u50a8\u4ee5\u592a\u548c\u4e0e\u4ee5\u592a\u574a\u5408\u7ea6\u8fdb\u884c\u4ea4\u4e92\uff0c\u90a3\u4e48Mist\u5c31\u662f\u8981\u4f7f\u7528\u7684\u7a0b\u5e8f\u3002\n    \u4e0b\u8f7d\u53ef\u4ee5\u5728 Mist\u53d1\u5e03\u9875\u9762 \u4e0a\u627e\u5230. Ethminer : \u4e00\u4e2a\u72ec\u7acb\u7684\u6316\u77ff\u673a\u3002 \u8fd9\u53ef\u4ee5\u7528\u6765\u6316\u6398\u6216\u57fa\u51c6\u91c7\u77ff\u8bbe\u5907\u3002 \u5b83\u4e0eeth\uff0cgeth\u548cpyethereum\u517c\u5bb9\u3002 \u67e5\u770b[\u91c7\u77ff]\u9875\u9762\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002 Mix : DApp\u521b\u4f5c\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\u3002\u5728Ethereum\u5e73\u53f0\u4e0a\u5feb\u901f\u6784\u5efa\u548c\u8c03\u8bd5\u5206\u6563\u5f0f\u5e94\u7528\u7a0b\u5e8f\u3002\u66f4\u591a\u7684\u4fe1\u606f\u53ef\u4ee5\u5728 \u6df7\u5408GitHub\u9875\u9762 . \u5982\u4f55\u5c06\u5927\u6587\u4ef6\u5b58\u50a8\u5728\u533a\u5757\u94fe\u4e2d\uff1f \u4e00\u822c\u6765\u8bf4\uff0c\u7531\u4e8e\u5b58\u50a8\u6210\u672c\u9ad8\u6602\uff0c\u60a8\u4e0d\u5e0c\u671b\u5728\u4ee5\u592a\u574a\u533a\u5757\u94fe\u4e2d\u5b58\u50a8\u5927\u578b\u6587\u4ef6\u6216\u6570\u636e\u7247\u6bb5\u3002 \u4f60\u4f1a\u9700\u8981\u4f7f\u7528\u7b2c\u4e09\u65b9\u5b58\u50a8\u89e3\u51b3\u65b9\u6848\uff0c\u5982Swarm\u6216IPFS\u3002 Swarm\u662f\u7528\u4e8e\u5206\u5e03\u5f0f\u6587\u4ef6\u5b58\u50a8\u7684\u4ee5\u592a\u574a\u7279\u5b9a\u9879\u76ee\u3002 IPFS\u662f\u4e00\u4e2a\u4e0e\u4ee5\u592a\u574a\u5173\u7cfb\u5bc6\u5207\u7684\u975e\u4ee5\u592a\u574a\u9879\u76ee; \u672a\u6765\u5b83\u4f1a\u88ab\u4f7f\u7528\u72ec\u7acb\u5e76\u53ef\u80fd\u88ab\u7528\u4f5c\u5728Swarm\u4e2d\u7684\u4e00\u4e2a\u9644\u52a0\u5c42\u3002 \u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1[\u4ee5\u592a\u574aStackExchange\u4e3b\u9898]   (http://ethereum.stackexchange.com/questions/1000/what-are-some-proposed-ways-of-storing-data-in-ethereum/1001#1001)\u3002 \u4ee5\u592a\u574a\u662f\u4ee5\u6bd4\u7279\u5e01\u4e3a\u57fa\u7840\u7684\u5417\uff1f \u53ea\u662f\u5728\u5b83\u4f7f\u7528\u533a\u5757\u94fe\u7684\u610f\u4e49\u4e0a\u8bf4, \u6bd4\u7279\u5e01\u662f\u5f00\u521b\u6027\u7684.\u4ee5\u592a\u574a\u6709\u4e00\u4e2a\u72ec\u7acb\u7684\u533a\u5757\u94fe\uff0c\u4e0e\u6bd4\u7279\u5e01\u533a\u5757\u94fe\u6709\u51e0\u4e2a\u91cd\u5927\u7684\u6280\u672f\u5dee\u5f02.\u6709\u5173\u8be6\u7ec6\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605 \u4ee5\u592a\u574aStackExchange\u7b54\u6848 . \u4ee5\u592a\u574a\u7684\u672a\u6765\u662f\u4ec0\u4e48\uff1f \u4ee5\u592a\u574a\u5f00\u53d1\u5546\u8ba1\u5212\u5728\u672a\u6765\u4ece\u5de5\u4f5c\u8bc1\u660e\u5171\u8bc6\u6a21\u578b\u8f6c\u6362\u4e3a\u8bc1\u660e\u5171\u8bc6\u6a21\u578b\u3002\n\u4ed6\u4eec\u8fd8\u5728\u7814\u7a76\u53ef\u4f38\u7f29\u6027\u89e3\u51b3\u65b9\u6848\u4ee5\u53ca\u5982\u4f55\u5728\u533a\u5757\u94fe\u4e0a\u5b58\u50a8\u79d8\u5bc6\u3002 \u8d26\u6237\u548c\u201c\u94b1\u5305\u5408\u7ea6\u201d\u6709\u4ec0\u4e48\u533a\u522b? \u4e00\u4e2a\u5e10\u6237\u662f\u60a8\u7684\u516c\u94a5/\u79c1\u94a5\u5bf9\u6587\u4ef6\uff0c\u4f5c\u4e3a\u60a8\u5728\u533a\u5757\u94fe\u4e0a\u7684\u8eab\u4efd\u3002\u8bf7\u53c2\u9605\u672f\u8bed\u8868\u4e2d\u7684\u201c\u5e10\u6237\u201d\u3002\n\u201c\u94b1\u5305\u5408\u7ea6\u201d\u662f\u4e00\u4e2a\u4ee5\u592a\u574a\u5408\u7ea6\uff0c\u901a\u8fc7\u591a\u91cd\u7b7e\u540d\u548c\u7a0b\u5e8f\u5316\u7684\u5b58\u53d6\u6b3e\u9650\u5236\u7b49\u529f\u80fd\u6765\u4fdd\u62a4\u60a8\u7684\u4ee5\u592a\u548c\u8eab\u4efd\u3002\n\u5728Mist Ethereum \u94b1\u5305 GUI \u5ba2\u6237\u7aef\u4e2d\u53ef\u4ee5\u8f7b\u677e\u521b\u5efa\u94b1\u5305\u5408\u7ea6\u3002 \u5bc6\u94a5\u6587\u4ef6\u662f\u5426\u53ea\u80fd\u4ece\u60a8\u4e0b\u8f7d\u5ba2\u6237\u7aef\u7684\u8ba1\u7b97\u673a\u4e0a\u8bbf\u95ee\uff1f \u4e0d\uff0c\u60a8\u53ef\u4ee5\u5bfc\u51fa\u6216\u79fb\u52a8\u5bc6\u94a5\u6587\u4ef6\uff0c\u4f46\u8bf7\u59cb\u7ec8\u8bb0\u4f4f\u5907\u4efd\u60a8\u7684\u5bc6\u94a5\u6587\u4ef6\uff0c\u5e76\u6ce8\u610f\u60a8\u5c06\u5bc6\u94a5\u6587\u4ef6\u5b58\u50a8\u5728\u54ea\u53f0\u8ba1\u7b97\u673a\u4e0a\u3002 \u4e0b\u8f7d\u533a\u5757\u94fe\u9700\u8981\u591a\u957f\u65f6\u95f4\uff1f \u4ee5\u592a\u574a\u533a\u5757\u94fe\u6301\u7eed\u589e\u957f\uff0c\u622a\u81f32016\u5e743\u6708\uff0c\u63a5\u8fd110GB\u3002\n\u4e0b\u8f7d\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u53d6\u51b3\u4e8e\u60a8\u53ef\u4ee5\u8fde\u63a5\u5230\u7684\u5bf9\u7b49\u7684\u6570\u91cf\uff0c\u60a8\u7684Internet\u8fde\u63a5\u901f\u5ea6\u4ee5\u53ca\u5176\u4ed6\u56e0\u7d20\u3002\n\u67e5\u770b[download-the-blockchain-faster]\u90e8\u5206\uff0c\u4e86\u89e3\u6709\u5173\u5feb\u901f\u540c\u6b65\u533a\u5757\u94fe\u7684\u63d0\u793a\u3002 \u5982\u4f55\u83b7\u53d6\u8fdb\u51fa\u5730\u5740\u7684\u4ea4\u6613\u6e05\u5355\uff1f \u60a8\u5fc5\u987b\u624b\u52a8\u4ece\u533a\u5757\u94fe\u4e2d\u53d6\u51fa\u4ea4\u6613\u624d\u80fd\u5b9e\u73b0\u6b64\u76ee\u7684\u3002\n\u6216\u8005\uff0c\u4f60\u53ef\u4ee5\u4f9d\u8d56\u7b2c\u4e09\u65b9\u7684\u63a2\u7d22\u8005\u7684API\uff0c\u5982 Etherchain .\n\u4f46\u662f\uff0c\u5bf9\u4e8e\u5408\u7ea6\u6267\u884c\u4ea4\u6613\uff0c\u60a8\u53ef\u4ee5\u8fc7\u6ee4\u5408\u7ea6\u65e5\u5fd7\u4ee5\u5b9e\u73b0\u6b64\u76ee\u7684\u3002 \u5408\u7ea6\u53ef\u4ee5\u652f\u4ed8\u6267\u884c\u7684\u8d39\u7528\u5417?\uff1f \u4e0d\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002 \u7528\u4e8e\u6267\u884c\u7684\u71c3\u6599\u5fc5\u987b\u7531\u63d0\u4ea4\u6267\u884c\u8bf7\u6c42\u7684\u5730\u5740\u63d0\u4f9b\u3002 \u5408\u7ea6\u53ef\u4ee5\u8c03\u7528\u53e6\u4e00\u4efd\u5408\u7ea6\u5417\uff1f \u662f\u7684\uff0c\u8fd9\u662f\u53ef\u80fd\u7684\uff0c\u9605\u8bfb \u5173\u4e8e\u5408\u7ea6\u4e4b\u95f4\u7684\u4ea4\u4e92 . \u4ea4\u6613\u53ef\u4ee5\u79bb\u7ebf\u7b7e\u7f72\uff0c\u7136\u540e\u5728\u53e6\u4e00\u53f0\u5728\u7ebf\u8bbe\u5907\u4e0a\u63d0\u4ea4\u5417\uff1f \u662f\u7684\uff0c\u4f60\u53ef\u4ee5\u53c2\u8003\u4ece \u51b0\u7bb1 \u7684\u89e3\u51b3\u65b9\u6848. \u5982\u4f55\u83b7\u5f97\u6d4b\u8bd5\u7f51\u7edc\u4ee5\u592a\u7f51\uff1f \u89c1[\u6d4b\u8bd5\u7f51\u7edc]\u3002 \u4ea4\u6613\u662f\u5426\u53ef\u4ee5\u7531\u7b2c\u4e09\u65b9\u53d1\u9001\uff1f \u5373\u4ea4\u6613\u5e7f\u64ad\u53ef\u4ee5\u5916\u5305 \u6280\u672f\u4e0a\u662f\u7684\uff0c\u4f46\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u9650\u5236\uff0c\u800c\u4e0d\u662f\u6bd4\u7279\u5e01\u7b7e\u7f72\u7684\u4ea4\u6613: \u5728ethereum\u4ea4\u6613\u6709nonce\n(\u66f4\u786e\u5207\u5730\u8bf4\uff0c\u6bcf\u4e2a\u8d26\u6237\u5728\u53d1\u9001\u4ea4\u6613\u65f6\u6839\u636e\u603b\u5171\u53d1\u9001\u4e86\u591a\u5c11\u4ea4\u6613\u800c\u589e\u52a0\u8ba1\u6570\u5668\u3002\u5982\u679c\u67093\u7b14\u4ea4\u6613\u5df2\u7ecf\u4ece\u8d26\u6237\u53d1\u9001\uff0c\u90a3\u4e48\u8d26\u6237\u73b0\u65f6\u503c\u4e3a3). \u4ee5\u592a\u574a\u5408\u7ea6\u662f\u5426\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9API\u6765\u63d0\u53d6\u6570\u636e\uff1f \u4e0d\uff0c\u4ee5\u592a\u574a\u5408\u7ea6\u4e0d\u80fd\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4ece\u5916\u90e8\u4fe1\u606f\u6e90\u83b7\u53d6\u6570\u636e\u3002\n\u7136\u800c\uff0c\u6709\u53ef\u80fd\u901a\u8fc7\u4ea4\u6613\u5c06\u6765\u81ea\u5916\u90e8\u7ad9\u70b9\uff08\u4f8b\u5982\u5929\u6c14\u7ad9\u70b9\uff0c\u80a1\u7968\u4ef7\u683c\uff09\u7684\u6570\u636e\u63a8\u9001\u5230\u4ee5\u592a\u574a\u5408\u7ea6\u3002\n\u6709\u4e00\u4e9b\u201c\u4ee5\u592a\u7f51\u201d\u670d\u52a1\u4e0e\u4ee5\u592a\u7f51\u7f51\u7edc\u517c\u5bb9\uff0c\u53ef\u4ee5\u5c06\u6570\u636e\u63a8\u9001/\u63a8\u9001\u5230\u4ee5\u592a\u574a\u7f51\u7edc\u6536\u8d39\u3002 \u901a\u8fc7\u4ee5\u592a\u574a\u7f51\u7edc\u53d1\u9001\u7684\u6570\u636e\u548c\u5408\u7ea6\u7684\u5185\u5bb9\u662f\u5426\u52a0\u5bc6\uff1f \u4ee5\u592a\u574a\u7f51\u7edc\u4e0a\u7684\u6570\u636e\u548c\u5408\u7ea6\u90fd\u662f\u7f16\u7801\u7684\uff0c\u4f46\u6ca1\u6709\u52a0\u5bc6\u3002\n\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u5ba1\u8ba1\u5408\u7ea6\u7684\u884c\u4e3a\u548c\u53d1\u9001\u7ed9\u4ed6\u4eec\u7684\u6570\u636e\u3002\n\u4f46\u662f\uff0c\u5728\u5c06\u6570\u636e\u5e7f\u64ad\u5230\u7f51\u7edc\u4e4b\u524d\uff0c\u60a8\u59cb\u7ec8\u53ef\u4ee5\u81ea\u7531\u5730\u5bf9\u6570\u636e\u8fdb\u884c\u52a0\u5bc6\u3002 \u6211\u80fd\u5728\u4ee5\u592a\u7f51\u7edc\u4e0a\u50a8\u5b58\u79d8\u5bc6\u6216\u5bc6\u7801\u5417?\uff1f \u4ee5\u592a\u574a\u7684\u6240\u6709\u6570\u636e\u90fd\u662f\u516c\u5f00\u7684\u3002\n\u4ee5\u592a\u574a\u5408\u7ea6\u4e2d\u4e0d\u53ef\u80fd\u5b58\u50a8\u79d8\u5bc6\u6216\u5bc6\u7801\u800c\u4e0d\u88ab\u6240\u6709\u4eba\u770b\u5230\u3002\n\u6709\u4e00\u4e9b\u5de5\u4f5c\u6b63\u5728\u901a\u8fc7\u4ee3\u7801\u6df7\u6dc6\u548c\u5176\u4ed6\u6280\u672f\u6765\u5b9e\u73b0\u3002\n\u53ef\u4ee5\u9605\u8bfbVitalik Buterin\u5199\u7684\u4e00\u7bc7\u597d\u6587\u201c \u533a\u5757\u94fe\u4e0a\u7684\u9690\u79c1\u6743 \u201d\u3002 \u4ee5\u592a\u574a\u5982\u4f55\u6253\u51fb\u91c7\u77ff\u6c60\u96c6\u4e2d\uff1f \u57fa\u4e8e\u4ee5\u592a\u574aPoW\u7684\u5171\u8bc6\u7b97\u6cd5\u6709\u4e24\u4e2a\u4e3b\u8981\u7684\u65b9\u6cd5\u6765\u5bf9\u6297\u96c6\u4e2d\u6316\u6398 ( \u6e90 ). \u9996\u5148\u662f\u901a\u8fc7\u51cf\u5c11\u7531\u4e8e\u5b64\u7acb\u77ff\u4e95\u9020\u6210\u7684\u635f\u5931\uff0c\u8fd9\u662f\u72ec\u7acb\u77ff\u5de5\u66f4\u53ef\u80fd\u7ecf\u5386\u7684\u3002 \u4ee5\u592a\u574a\u91c7\u77ff\u7b97\u6cd5\u7684\u8fd9\u4e00\u90e8\u5206, \u4e00\u79cd\u88ab\u79f0\u4e3aGHOST\u7684\u6280\u672f,\n    \u53ea\u5305\u62ec\u6700\u8fd1\u7684\u5b64\u7acb\u5757\u7684\u6807\u9898\uff0c\u4f5c\u4e3a\u5bf9\u5757\u751f\u4ea7\u8005\u548c\uff08\u5b64\u7acb\u7684\uff09\u5757\u7684\u5305\u62ec\u8005\u7684\u51cf\u5c11\u7684\u56de\u62a5\u7684\u56de\u62a5\u3002\n    \u8fd9\u4e9b\u5305\u62ec\u6765\u81ea\u201c\u7956\u7236\u6bcd\u201d\u6216\u66f4\u65e9\u7684\u5757\u7684\u5b64\u513f\u7ecf\u5e38\u88ab\u79f0\u4e3a\u201c\u53d4\u53d4\u201d\u5757\uff0c\u56e0\u4e3a\u6027\u522b\u4e2d\u6027\u672f\u8bed\u201commer\u201d\u6ca1\u6709\u88ab\u5e7f\u6cdb\u77e5\u9053\u6216\u7406\u89e3\u3002 \u4ee5\u592a\u574aPoW\u5171\u8bc6\u7b97\u6cd5\u4e0e\u91c7\u77ff\u4e2d\u5fc3\u5316\u7684\u5bf9\u6297\u7684\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528\u6297ASIC\u529f\u80fd\u7684\u529f\u52b3\u8bc1\u660e\uff08Proof of Work\uff09\u529f\u80fd\u3002 \u901a\u8fc7\u9632\u6b62\u91c7\u77ff\u88ab\u4e13\u95e8\u8bbe\u8ba1\u548c\u751f\u4ea7\u7684\u786c\u4ef6\u6240\u652f\u914d\uff0c\u72ec\u7acb\u7684\u77ff\u5de5\u4eec\u4fdd\u6301\u7ade\u4e89\u529b\uff0c\n    \u751a\u81f3\u5728\u5229\u6da6\u548c/\u6216\u786c\u4ef6\u6295\u8d44\u6c34\u5e73\u4e0a\u5360\u6709\u4f18\u52bf, \u56e0\u4e3a\u4ed6\u4eec\u53ef\u4ee5\u5229\u7528\u73b0\u6210\u7684\u5546\u54c1\u786c\u4ef6 (\u5373\u6d88\u8d39\u8005\u56fe\u5f62\u5361). \u4ee5\u592a\u574a\u5c06\u5982\u4f55\u5904\u7406\u4e0d\u65ad\u589e\u957f\u7684\u533a\u5757\u94fe\u5927\u5c0f\uff1f \u56f4\u7ed5\u533a\u5757\u94fe\u53ef\u6269\u5c55\u6027\u8fdb\u884c\u4e86\u8bb8\u591a\u8ba8\u8bba\u3002 \u8fd9\u4e2a\u95ee\u9898\u7684\u90e8\u5206\u5730\u56de\u7b54\u5728 \u8fd9\u4e2a\u4ee5\u592a\u574aStackExchange \u548c \u8fd9\u4e2a\u6765\u81eaVitalik Buterin\u7684\u535a\u5ba2\u6587\u7ae0 . \u4ee5\u592a\u574a\u5c06\u5982\u4f55\u786e\u4fdd\u7f51\u7edc\u6bcf\u79d2\u80fd\u591f\u8fdb\u884c10,000\u6b21\u4ee5\u4e0a\u7684\u4ea4\u6613\uff1f \u4ee5\u592a\u574a\u6b63\u5728\u8ba1\u5212\u5728\u5176\u53d1\u5c55\u8def\u7ebf\u56fe\u7684\u5b81\u9759\u9636\u6bb5\u5b9e\u65bd\u8bc1\u636e\u5171\u8bc6\u534f\u8bae\u53d8\u66f4\u3002 \u6709\u5173\u53ef\u80fd\u7684\u4ee5\u592a\u574aPoS\u5019\u9009\u4eba\u7684\u66f4\u591a\u4fe1\u606f\u4ee5\u53ca\u5982\u4f55\u589e\u52a0\u6bcf\u79d2\u4ea4\u6613\u6b21\u6570\u53ef\u4ee5 \u5728\u8fd9\u91cc\u627e\u5230 . \u5408\u7ea6\u5728\u54ea\u91cc TODO \u4f60\u7684\u95ee\u9898\u8fd8\u6ca1\u6709\u56de\u7b54\uff1f \u8bf7\u95ee\u793e\u533a \u4ee5\u592a\u574aStackExchange .", 
            "title": "\u5e38\u89c1\u95ee\u9898"
        }, 
        {
            "location": "/glossary/", 
            "text": "\u8bcd\u6c47\u8868\n\n\nDAO - \u5206\u5e03\u5f0f\u81ea\u6cbb\u7ec4\u7ec7\n\u5206\u5e03\u5f0f\u81ea\u6cbb\u7ec4\u7ec7DAO\u662f\u533a\u5757\u94fe\u4e0a\u7684\u5408\u7ea6\u7c7b\u578b (\u6216\u4e00\u5957\u5408\u540c) \u8fd9\u662f\u5e94\u8be5\u7f16\u7e82\u7684, \u6267\u884c\u6216\u81ea\u52a8\u5316\u7ec4\u7ec7\u7684\u8fd0\u4f5c\uff0c\u5305\u62ec\u6cbb\u7406\uff0c\u7b79\u6b3e\uff0c\u8fd0\u8425\uff0c\u652f\u51fa\u548c\u6269\u5f20\u3002\nidentity\nA set of cryptographically verifiable interactions that have the\nproperty that they were all created by the same person.\ndigital identity\nThe set of cryptographically verifiable transactions signed by the\nsame public key define the digital identity\\'s behavior. In many\nreal world scenarios (voting) it is desireable that digital\nidentities coincide with real world identities. Ensuring this\nwithout violence is an unsolved problem.\nunique identity\nA set of cryptographically verifiable interactions that have the\nproperty that they were all created by the same person, with the\nadded constraint that one person cannot have multiple unique\nidentities.\nreputation\nThe property of an identity that other entities believe that\nidentity to be either (1) competent at some specific task, or (2)\ntrustworthy in some context, i.e., not likely to betray others even\nif short-term profitable.\nescrow\nIf two mutually-untrusting entities are engaged in commerce, they\nmay wish to pass funds through a mutually trusted third party and\ninstruct that party to send the funds to the payee only when\nevidence of product delivery has been shown. This reduces the risk\nof the payer or payee committing fraud. Both this construction and\nthe third party is called escrow.\ndeposit\nDigital property placed into a contract involving another party such\nthat if certain conditions are not satisfied that property is\nautomatically forfeited and either credited to a counterparty as\ninsurance against the conditions, or destroyed (= burnt = equally\ndistributed) or donated to some charitable funds.\nweb of trust\nThe idea that if A highly rates B, and B highly rates C, then A is\nlikely to trust C. Complicated and powerful mechanisms for\ndetermining the reliability of specific individuals in specific\nconcepts can theoretically be gathered from this principle.\nincentive compatibility\nA protocol is incentive-compatible if everyone is better off\n\\\"following the rules\\\" than attempting to cheat, at least unless a\nvery large number of people agree to cheat together at the same time\n(collusion).\ncollusion\nIn an incentivized protocol scenario, when a number of participants\nplay together\n (conspire) to game the rules to their own benefit.\ntoken system\nA fungible virtual good that can be traded. More formally, a token\nsystem is a database mapping addresses to numbers with the property\nthat the primary allowed operation is a transfer of N tokens from A\nto B, with the conditions that N is non-negative, N is not greater\nthan A\\'s current balance, and a document authorizing the transfer\nis digitally signed by A. Secondary \\\"issuance\\\" and \\\"consumption\\\"\noperations may also exist, transaction fees may also be collected,\nand simultaneous multi-transfers with many parties may be possible.\nTypical use cases include currencies, cryptographic tokens inside of\nnetworks, company shares and digital gift cards.\nblock\nA block is a package of data that contains zero or more\ntransactions, the hash of the previous block (\\\"parent\\\"), and\noptionally other data. The total set of blocks, with every block\nexcept for the initial \\\"genesis block\\\" containing the hash of its\nparent, is called the blockchain and contains the entire transaction\nhistory of a network. Note that some blockchain-based\ncryptocurrencies use the word \\\"ledger\\\" instead of blockchain; the\ntwo are roughly equivalent, although in systems that use the term\n\\\"ledger\\\" each block generally contains a full copy of the current\nstate (e.g. currency balances, partially fulfilled contracts,\nregistrations) of every account allowing users to discard outdated\nhistorical data.\naddress\nAn Ethereum address represents an account. For\n[EOA](EOAExternally%20Owned%20Account.%20An%20account%20controlled%20by%20a%20private%20key.%20If%20you%20own%20the%20private%20key%20associated%20with%20the%20EOA%20you%20have%20the%20ability%20to%20send%20ether%20and%20messages%20from%20it.%20Contract%20accounts%20also%20have%20an%20address,%20see%20:ref:%60Accounts%60.%20EOAs%20and%20contract%20accounts%20may%20be%20combined%20into%20a%20single%20account%20type%20during%20Serenity.),\nthe address is derived as the last 20 bytes of the public key\ncontrolling the account, e.g.,\ncd2a3d9f938e13cd947ec05abc7fe734df8dd826. This is a\n[hexadecimal](hexadecimalCommon%20representation%20format%20for%20byte%20sequencing.%20Its%20advantage%20is%20that%20values%20are%20represented%20in%20a%20compact%20format%20using%20two%20characters%20per%20byte%20(the%20characters%20%60%60%5B0-9%5D%5Ba-f%5D%60%60).)\nformat (base 16 notation), which is often indicated explicitly by\nappending 0x to the address. Web3.js and console functions accept\naddresses with or without this prefix but for transparency we\nencourage their use. Since each byte of the address is represented\nby 2 hex characters, a prefixed address is 42 characters long.\nSeveral apps and APIs are also meant to implement the new\n[checksum-enabled address\nscheme](\nhttps://github.com/ethereum/EIPs/issues/55\n) introduced in\nthe Mist Ethereum wallet as of version 0.5.0.\nether\nEther is the name of the currency used within Ethereum. It is used\nto pay for computations within the EVM. Ambiguously, ether is also\nthe name of a unit in the system;\ntransaction\nThe signed data package that stores a message to be sent from an\nexternally owned account. Simply put, a transaction describes a\ntransfer of information from an EOA to another EOA or a contract\naccount.\nmessage\nA data transfer mechanism contracts use to communicate with other\ncontracts. Messages can also be described as virtual objects that\nare never serialized and exist only in the Ethereum execution\nenvironment.\nWeb3\nThe exact definition of the Web3 paradigm is still taking form, but\nit generally refers to the phenomenon of increased connectedness\nbetween all kinds of devices, decentralization of services and\napplications, semantic storage of information online and application\nof artificial intelligence to the web.\nDAO\nSee Decentralized Autonomous Organization.\nepoch\nEpoch is the interval between each regeneration of the DAG used as\nseed by the PoW algorithm Ethash. The epoch in specified as 30000\nblocks.\nelliptic curve (cryptography)\nRefers to an approach to public-key cryptography based on the\nalgebraic structure of elliptic curves over finite fields. See\n[elliptic curve\ncryptography](\nhttps://en.wikipedia.org/wiki/Elliptic_curve_cryptography\n).\nwallet\nA wallet, in the most generic sense, refers to anything that can\nstore ether or any other crypto token. In the crypto space in\ngeneral, the term wallet is used to mean anything from a single\nprivate/public key pair (like a single paper wallet) all the way to\napplications that manage multiple key pairs, like the Mist Ethereum\nwallet.\ncontract\nA persistent piece of code on the Ethereum blockchain that\nencompasses a set of data and executable functions. These functions\nexecute when Ethereum transactions are made to them with certain\ninput parameters. Based on the input parameters, the functions will\nexecute and interact with data within and outside of the contract.\nsuicide\nSee self-destruct. selfdestruct acts as an alias to the deprecated\nsuicide terminology in accordance with [EIP 6 - Renaming SUICIDE\nOPCODE](\nhttps://github.com/ethereum/EIPs/blob/master/EIPS/eip-6.md\n).\nselfdestruct\nA global variable in the Solidity language that allows you to\n[\\\"destroy the current contract, sending its funds to the given\naddress\\\"](\nhttps://solidity.readthedocs.org/en/latest/miscellaneous.html#global-variables\n).\nselfdestruct acts as an alias to the deprecated suicide terminology\nin accordance with [EIP 6 - Renaming SUICIDE\nOPCODE](\nhttps://github.com/ethereum/EIPs/blob/master/EIPS/eip-6.md\n).\nIt frees up space on the blockchain and prevents future execution of\nthe contract. The contract\\'s address will still persist, but ether\nsent to it will be lost forever. The possibility to kill a contract\nhas to be implemented by the contract creator him/herself using the\nSolidity selfdestruct function.\ntransaction fee\nAlso known as gas cost, it is the amount of ether that the miners\nwill charge for the execution of your transaction.\nmining\nThe process of verifying transactions and contract execution on the\nEthereum blockchain in exchange for a reward in ether with the\nmining of every block.\nmining pool\nThe pooling of resources by miners, who share their processing power\nover a network, to split the reward equally, according to the amount\nof work they contributed to solving a block.\nmining reward\nThe amount of cryptographic tokens (in this case ether) that is\ngiven to the miner who mined a new block.\nstate\nRefers to a snapshot of all balances and data at a particular point\nin time on the blockchain, normally referring to the condition at a\nparticular block.\nblockchain\nAn ever-extending series of data blocks that grows as new\ntransactions are confirmed as part of a new block. Each new block is\nchained to the existing blockchain by a cryptographic proof-of-work.\npeer\nOther computers on the network also running an Ethereum node (Geth)\nwith an exact copy of the blockchain that you have.\nsigning\nProducing a piece of data from the data to be signed using your\nprivate key, to prove that the data originates from you.\ndiscovery (peer)\nThe process of \\'gossiping\\' with other nodes in the network to find\nout the state of other nodes on the network.\ngas price oracle\nA helper function of the Geth client that tries to find an\nappropriate default gas price when sending transactions.\nlight client\nA client program that allows users in low-capacity environments to\nstill be able to execute and check the execution of transactions\nwithout needing to run a full Ethereum node (Geth).\netherbase\nIt is the default name of the account on your node that acts as your\nprimary account. If you do mining, mining rewards will be credited\nto this account.\ncoinbase\nCoinbase is analogous to etherbase, but is a more generic term for\nall cryptocurrency platforms.\nbalance\nThe amount of cryptocurrency (in this case) belonging to an account.\nsolidity\nSolidity is a high-level language whose syntax is similar to that of\nJavaScript and it is designed to compile to code for the Ethereum\nVirtual Machine.\nserpent\nSerpent is a high-level language whose syntax is similar to that of\nPython and it is designed to compile to code for the Ethereum\nVirtual Machine.\nEVM\nEthereum Virtual Machine, the decentralized computing platform which\nforms the core of the Ethereum platform.\nvirtual machine\nIn computing, it refers to an emulation of a particular computer\n    system.\npeer to peer network\nA network of computers that are collectively able to perform\nfunctionalities normally only possible with centralized,\nserver-based services.\ndecentralization\nThe concept of moving the control and execution of computational\nprocesses away from a central entity.\ndistributed hash table\nA distributed hash table (DHT) is a class of a decentralized\ndistributed system that provides a lookup service similar to a hash\ntable    (key, value) pairs are stored in a DHT, and any participating\nnode can efficiently retrieve the value associated with a given key.\nNAT\nNetwork address translation (NAT) is a methodology of remapping one\nIP address space into another by modifying network address\ninformation in Internet Protocol (IP) datagram packet headers while\nthey are in transit across a traffic routing device.\nnonce\nNumber Used Once or Number Once. A nonce, in information technology,\nis a number generated for a specific use, such as session\nauthentication. Typically, a nonce is some value that varies with\ntime, although a very large random number is sometimes used. In\ngeneral usage, nonce means \\\"for the immediate occasion\\\" or \\\"for\nnow.\\\" In the case of Blockchain Proof of Work scenarios, the hash\nvalue, found by a Miner, matching the network\\'s Difficulty thus\nproving the Block Validity is called Nonce as well.\nproof-of-work\nOften seen in its abbreviated form \\\"PoW\\\", it refers to a\nmathematical value that can act as the proof of having solved a\nresource and time consuming computational problem.\nproof-of-stake\nAn alternative method of mining blocks that require miners to\ndemonstrate their possession of a certain amount of the currency of\nthe network in question. This works on the principle that miners\nwill be disincentivized to try to undermine a network in which they\nhave a stake. PoS is less wasteful than PoW, but is still often used\ntogether with it to provide added security to the network.\nCASPER\nCasper is a security-deposit based economic consensus protocol. This\nmeans that nodes, so called \\\"bonded validators\\\", have to place a\nsecurity deposit (an action we call \\\"bonding\\\") in order to serve\nthe consensus by producing blocks. If a validator produces anything\nthat Casper considers \\\"invalid\\\", the deposit is forfeited along\nwith the privilege of participating in the consensus process.\nconsensus\nThe agreement among all nodes in the network about the state of the\nEthereum network.\nhomestead\nHomestead is the second major version release of the Ethereum\nplatform. Homestead includes several protocol changes and a\nnetworking change that makes possible further network upgrades:\n[EIP-2 Main homestead hardfork\nchanges](\nhttps://github.com/ethereum/EIPs/blob/master/EIPS/eip-2.mediawiki\n);\n[EIP-7 Hardfork EVM update\n(DELEGATECALL)](\nhttps://github.com/ethereum/EIPs/blob/master/EIPS/eip-7.md\n);\n[EIP-8 devp2p forward\ncompatibility](\nhttps://github.com/ethereum/EIPs/blob/master/EIPS/eip-8.md\n).\nHomestead will launch when block 1,150,000 is reached on the\nMainnet. On the Testnet, Homestead will launch at block 494,000.\nmetropolis\nThe third stage of Ethereum\\'s release. This is the stage when the\nuser interfaces come out (e.g. Mist), including a dapp store, and\nnon-technical users should feel comfortable joining at this point.\nserenity\nThe fourth stage of Ethereum\\'s release. This is when things are\ngoing to get fancy    the network is going to change its mining\nprocess from Proof-of-Work to Proof-of-Stake.\nfrontier\nEthereum was planned to be released in four major steps with\nFrontier being the name for the first phase. The Frontier release\nwent live on July 30th, 2015. The command line Frontier phase was\nmainly meant to get mining operations going with the full reward of\n5 ether per block and also to promote the emergence of ether\nexchanges. Frontier surpassed earlier modest expectations and has\nnurtured tremendous growth of the ecosystem.\nolympic\nThe Frontier pre-release, which launched on May 9th 2015. It was\nmeant for developers to help test the limits of the Ethereum\nblockchain.\nmorden\nMorden is the first Ethereum alternative testnet. It is expected to\ncontinue throughout the Frontier and Homestead era.\ntestnet\nA mirror network of the production Ethereum network that is meant\nfor testing. See Morden.\nprivate chain\nA fully private blockchain is a blockchain where write permissions\nare kept centralized to one organization.\nconsortium chain\nA blockchain where the consensus process is controlled by a\npre-selected set of nodes.\nmicropayment\nA micropayment is a financial transaction involving a very small sum\nof money (\\\n1 USD) and usually one that occurs online.\nsharding\nThe splitting of the space of possible accounts (contracts are\naccounts too) into subspaces, for example, based on first digits of\ntheir numerical addresses. This allows for contract executions to be\nexecuted within \\'shards\\' instead of network wide, allowing for\nfaster transactions and greater scalability.\nhash\nA cryptographic function which takes an input (or \\'message\\') and\nreturns a fixed-size alphanumeric string, which is called the hash\nvalue (sometimes called a message digest, a digital fingerprint, a\ndigest or a checksum). A hash function (or hash algorithm) is a\nprocess by which a document (i.e. a piece of data or file) is\nprocessed into a small piece of data (usually 32 bytes) which looks\ncompletely random, and from which no meaningful data can be\nrecovered about the document, but which has the important property\nthat the result of hashing one particular document is always the\nsame. Additionally, it is crucially important that it is\ncomputationally infeasible to find two documents that have the same\nhash. Generally, changing even one letter in a document will\ncompletely randomize the hash; for example, the SHA3 hash of\n\\\"Saturday\\\" is\nc38bbc8e93c09f6ed3fe39b5135da91ad1a99d397ef16948606cdcbd14929f9d,\nwhereas the SHA3 hash of \\\"Caturday\\\" is\nb4013c0eed56d5a0b448b02ec1d10dd18c1b3832068fbbdc65b98fa9b14b6dbf.\nHashes are usually used as a way of creating a globally agreed-upon\nidentifier for a particular document that cannot be forged.\ncrypto-fuel\nSimilar to \\'gas\\', referring to the amount of cryptocurrency\nrequired to power a transaction.\ncryptoeconomics\nThe economics of cryptocurrencies.\nprotocol\nA standard used to define a method of exchanging data over a\ncomputer network.\nblock validation\nThe checking of the coherence of the cryptographic signature of the\nblock with the history stored in the entire blockchain.\nblocktime\nThe average time interval between the mining of two blocks.\nnetwork hashrate\nThe number of hash calculations the network can make per second\ncollectively.\nhashrate\nThe number of hash calculations made per second.\nserialization\nThe process of converting a data structure into a sequence of bytes.\nEthereum internally uses an encoding format called recursive-length\nprefix encoding (RLP), described in the [RLP section of the\nwiki](\nhttps://github.com/ethereum/wiki/wiki/RLP\n).\ndouble spend\nA deliberate blockchain fork, where a user with a large amount of\nmining power sends a transaction to purchase some produce, then\nafter receiving the product creates another transaction sending the\nsame coins to themselves. The attacker then creates a block, at the\nsame level as the block containing the original transaction but\ncontaining the second transaction instead, and starts mining on the\nfork. If the attacker has more than 50% of all mining power, the\ndouble spend is guaranteed to succeed eventually at any block depth.\nBelow 50%, there is some probability of success, but it is usually\nonly substantial at a depth up to about 2-5; for this reason, most\ncryptocurrency exchanges, gambling sites and financial services wait\nuntil six blocks have been produced (\\\"six confirmations\\\") before\naccepting a payment.\nSPV client\nA client that downloads only a small part of the blockchain,\nallowing users of low-power or low-storage hardware like smartphones\nand laptops to maintain almost the same guarantee of security by\nsometimes selectively downloading small parts of the state without\nneeding to spend megabytes of bandwidth and gigabytes of storage on\nfull blockchain validation and maintenance. See light client.\nuncle\nUncles are blockchain blocks found by a miner, when a different\nminer has already found another block for the corresponding place in\nthe blockchain. They are called \\\"stale blocks\\\". The parent of an\nUncle is an ancestor of the inserting block, located at the tip of\nthe blockchain. In contrast to the Bitcoin network, Ethereum rewards\nstale blocks as well in order to avoid to penalize miners with a bad\nconnection to the network. This is less critical in the Bitcoin\nnetwork, because the Block Time there is much higher (\\~10 minutes)\nthan on the Ethereum network (aimed to \\~15 seconds).\nGHOST\nGreedy Heaviest-Observed Sub-Tree is an alternative chain-selection\nmethod that is designed to incentivize stale blocks (uncles) as\nwell, thus reducing the incentive for pool mining. In GHOST, even\nthe confirmation given by stale blocks to previous blocks are\nconsidered valid, and the miners of the stale blocks are also\nrewarded with a mining reward.\nmerkle patricia tree\nMerkle Patricia trees provide a cryptographically authenticated data\nstructure that can be used to store all (key, value) bindings. They\nare fully deterministic, meaning that a Patricia tree with the same\n(key,value) bindings is guaranteed to be exactly the same down to\nthe last byte and therefore have the same root hash, provide\nO(log(n)) efficiency for inserts, lookups and deletes, and are much\neasier to understand and code than more complex comparison-based\nalternatives like red-black trees.\nDAG\nDAG stands for Directed Acyclic Graph. It is a graph, a set of nodes\nand links between nodes, that has very special properties. Ethereum\nuses a DAG in Ethash, the Ethereum Proof of Work (POW) algorithm.The\nEthash DAG takes a long time to be generated, which is done by a\nMiner node into a cache file for each Epoch. The file data is then\nused when a value from this graph is required by the algorithm.\nuncle rate\nThe number of uncles produced per block.\nissuance\nThe minting and granting of new cryptocurrency to a miner who has\nfound a new block.\npresale\nSale of cryptocurrency before the actual launch of the network.\nstatic node\nA feature supported by Geth, the Golang Ethereum client, which makes\nit possible to always connect to specific peers. Static nodes are\nre-connected on disconnects. For details, see the [section on\nstatic nodes \\\ncr-static-nodes>]{role=\\\"ref\\\"}.\nbootnode\nThe nodes which can be used to initiate the discovery process when\nrunning a node. The endpoints of these nodes are recorded in the\nEthereum source code.\nexchange\nAn online marketplace which facilitates the exchange of crypto or\nfiat currencies based on the market exchange rate.\ncompiler\nA program that translates pieces of code written in high level\nlanguages into low level executable code.\ngenesis block\nThe first block in a blockchain.\nnetwork id\nA number which identifies a particular version of the Ethereum\nnetwork.\nblock header\nThe data in a block which is unique to its content and the\ncircumstances in which it was created. It includes the hash of the\nprevious block\\'s header, the version of the software the block is\nmined with, the timestamp and the merkle root hash of the contents\nof the block.\npending transaction\nA transaction that is not yet confirmed by the Ethereum network.\nblock propagation\nThe process of transmitting a confirmed block to all other nodes in\nthe network.\nsidechain\nA blockchain that branches off a main blockchain and checks in\nperiodically with the main blockchain. Besides that it runs\nindependently from the main chain, and any security compromises in\nthe sidechain will not affect the main chain.\npegging\nLocking down the exchange rate of the coins/tokens in two chains\n(usually a main and a side chain) in a certain direction.\n2-way pegging\nLocking down the exchange rate of the coins/tokens in two chains\n(usually a main and a side chain) in both directions.\ntrustless\nRefers to the ability of a network to trustworthily mediate\ntransactions without any of the involved parties needing to trust\nanyone else.\nfaucet\nA website that dispenses (normally testnet) cryptocurrencies for free.\nchecksum\nA count of the number of bits in a transmission that is included\nwith the unit so that the receiving end can verify that the entirety\nof the message has been transmitted.\nICAP\nInterexchange Client Address Protocol, an IBAN-compatible system for\nreferencing and transacting to client accounts aimed to streamline\nthe process of transferring funds, worry-free between exchanges and,\nultimately, making KYC and AML concerns a thing of the past.\nprivate key\nA private key is a string of characters known only to the owner,\nthat is paired with a public key to set off algorithms for text\nencryption and decryption.\npublic key\nA string of characters derived from a private key that can be made\npublic. The public key can be used to verify the authenticity of any\nsignature created using the private key.\nencryption\nEncryption is the conversion of electronic data into a form\nunreadable by anyone except the owner of the correct decryption key.\nIt can further be described as a process by which a document\n(plaintext) is combined with a shorter string of data, called a key\n(e.g.\nc85ef7d79691fe79573b1a7064c19c1a9819ebdbd1faaab1a8ec92344438aaf4),\nto produce an output (ciphertext) which can be \\\"decrypted\\\" back\ninto the original plaintext by someone else who has the key, but\nwhich is incomprehensible and computationally infeasible to decrypt\nfor anyone who does not have the key.\ndigital signature\nA mathematical scheme for demonstrating the authenticity of a\ndigital message or documents.\nport\nA network port is a communication endpoint used by a one of the\nexisting standards of establishing a network conversation (e.g. TCP,\nUDP).\nRPC\nRemote Procedure Call, a protocol that a program uses to request a\nservice from a program located in another computer in a network\nwithout having to understand the network details.\nIPC\nInterprocess communication (IPC) is a set of programming interfaces\nthat allow a programmer to coordinate activities among different\nprogram processes that can run concurrently in an operating system.\nattach\nThe command used to initiate the Ethereum Javascript console.\ndaemon\nA computer program that runs as a background process instead of in\ndirect control by an interactive user.\nsystem service\nSee base layer service\nbase layer service\nServices such as SWARM and Whisper which are built into the Ethereum platform.\njs\nJavascript.\nsyncing\nThe process of downloading the entire blockchain.\nfast sync\nInstead of processing the entire block-chain one link at a time, and\nreplay all transactions that ever happened in history, fast syncing\ndownloads the transaction receipts along the blocks, and pulls an\nentire recent state database.\nASIC\nApplication-specific integrated circuit, in this case referring to\nan integrated circuit custom built for cryptocurrency mining.\nmemory-hard\nMemory hard functions are processes that experience a drastic\ndecrease in speed or feasibility when the amount of available memory\neven slightly decreases.\nkeyfile\nEvery account\\'s private key/address pair exists as a single\nkeyfile. These are JSON text files which contains the encrypted\nprivate key of the account, which can only be decrypted with the\npassword entered during account creation.\nICAP format\nThe format of the IBANs defined using the [Inter-exchange Client\nAddress Protocol](\nhttps://github.com/ethereumjs/ethereumjs-icap\n).\nblock(chain) explorer\nA website that allows easy searching and extraction of data from the blockchain.\ngeth\nEthereum client implemented in the Golang programming language,\nbased on the protocol as defined in the Ethereum Yellow Paper.\neth\nEthereum client implemented in the C++ programming language, based\non the protocol as defined in the Ethereum Yellow Paper.\nethereumjs\nEthereum client implemented in the Javascript/Node programming\nlanguage, based on the protocol as defined in the Ethereum Yellow\nPaper.\npyethereum\nEthereum client implemented in the Python programming language,\nbased on the protocol as defined in the Ethereum Yellow Paper.\nethereumj\nEthereum client implemented in the Java programming language, based\non the protocol as defined in the Ethereum Yellow Paper.\nethereumh\nEthereum client implemented in the Haskell programming language,\nbased on the protocol as defined in the Ethereum Yellow Paper.\nparity\nEthereum client implemented in the Rust programming language, based\non the protocol as defined in the Ethereum Yellow Paper.\ndifficulty\nIn very general terms, the amount of effort required to mine a new\nblock. With the launch of Homestead, the [difficulty adjustment\nalgorithm will\nchange](\nhttps://github.com/ethereum/EIPs/blob/master/EIPS/eip-2.md\n).\naccount\nAccounts are a central part of the Ethereum network and are an\nessential part of any transaction or contract. In Ethereum, there\nare two types of accounts    Externally Owned accounts (EOA) and\nContract accounts.\nHLL (obsolete)\nAcronym for Higher Level Language, which is what Serpent and\nSolidity are. HLL is what early \u00d0app developers called Ethereum\nprogramming languages that did not touch the low level elements.\nThis phrase has been phased out.\nCLL (obsolete)\nAcronym for C Like Language, which Mutan was. This acronym has been phased out.\"\nES1, ES2, and ES3 (obsolete)\n\\\"Ethereum Script\\\" versions 1,2 and 3. There were early versions of\nwhat would become the Ethereum Virtual Machine (EVM).\nlog event\nContracts are triggered by transactions executed as part of the\nblock verification. If conceived of as a function call, contract\nexecution is asynchronous, and therefore they have no return value.\nInstead contracts communicate to the outside world with log events.\nThe log events are part of the transaction receipt which is produced\nwhen the transaction is executed. The receipts are stored in the\nreceipt trie, the integrity of which is guaranteed by the fact that\nthe current root of the receipt trie is part of the block header\nalongside the roots of state and state-trie. In a broad sense from\nthe external perspective receipts are part of the Ethereum system\nstate except that they are not readable contracts internally.", 
            "title": "\u672f\u8bed"
        }, 
        {
            "location": "/glossary/#_1", 
            "text": "DAO - \u5206\u5e03\u5f0f\u81ea\u6cbb\u7ec4\u7ec7 \u5206\u5e03\u5f0f\u81ea\u6cbb\u7ec4\u7ec7DAO\u662f\u533a\u5757\u94fe\u4e0a\u7684\u5408\u7ea6\u7c7b\u578b (\u6216\u4e00\u5957\u5408\u540c) \u8fd9\u662f\u5e94\u8be5\u7f16\u7e82\u7684, \u6267\u884c\u6216\u81ea\u52a8\u5316\u7ec4\u7ec7\u7684\u8fd0\u4f5c\uff0c\u5305\u62ec\u6cbb\u7406\uff0c\u7b79\u6b3e\uff0c\u8fd0\u8425\uff0c\u652f\u51fa\u548c\u6269\u5f20\u3002 identity A set of cryptographically verifiable interactions that have the\nproperty that they were all created by the same person. digital identity The set of cryptographically verifiable transactions signed by the\nsame public key define the digital identity\\'s behavior. In many\nreal world scenarios (voting) it is desireable that digital\nidentities coincide with real world identities. Ensuring this\nwithout violence is an unsolved problem. unique identity A set of cryptographically verifiable interactions that have the\nproperty that they were all created by the same person, with the\nadded constraint that one person cannot have multiple unique\nidentities. reputation The property of an identity that other entities believe that\nidentity to be either (1) competent at some specific task, or (2)\ntrustworthy in some context, i.e., not likely to betray others even\nif short-term profitable. escrow If two mutually-untrusting entities are engaged in commerce, they\nmay wish to pass funds through a mutually trusted third party and\ninstruct that party to send the funds to the payee only when\nevidence of product delivery has been shown. This reduces the risk\nof the payer or payee committing fraud. Both this construction and\nthe third party is called escrow. deposit Digital property placed into a contract involving another party such that if certain conditions are not satisfied that property is\nautomatically forfeited and either credited to a counterparty as\ninsurance against the conditions, or destroyed (= burnt = equally\ndistributed) or donated to some charitable funds. web of trust The idea that if A highly rates B, and B highly rates C, then A is likely to trust C. Complicated and powerful mechanisms for\ndetermining the reliability of specific individuals in specific\nconcepts can theoretically be gathered from this principle. incentive compatibility A protocol is incentive-compatible if everyone is better off \\\"following the rules\\\" than attempting to cheat, at least unless a\nvery large number of people agree to cheat together at the same time\n(collusion). collusion In an incentivized protocol scenario, when a number of participants play together  (conspire) to game the rules to their own benefit. token system A fungible virtual good that can be traded. More formally, a token system is a database mapping addresses to numbers with the property\nthat the primary allowed operation is a transfer of N tokens from A\nto B, with the conditions that N is non-negative, N is not greater\nthan A\\'s current balance, and a document authorizing the transfer\nis digitally signed by A. Secondary \\\"issuance\\\" and \\\"consumption\\\"\noperations may also exist, transaction fees may also be collected,\nand simultaneous multi-transfers with many parties may be possible.\nTypical use cases include currencies, cryptographic tokens inside of\nnetworks, company shares and digital gift cards. block A block is a package of data that contains zero or more transactions, the hash of the previous block (\\\"parent\\\"), and\noptionally other data. The total set of blocks, with every block\nexcept for the initial \\\"genesis block\\\" containing the hash of its\nparent, is called the blockchain and contains the entire transaction\nhistory of a network. Note that some blockchain-based\ncryptocurrencies use the word \\\"ledger\\\" instead of blockchain; the\ntwo are roughly equivalent, although in systems that use the term\n\\\"ledger\\\" each block generally contains a full copy of the current\nstate (e.g. currency balances, partially fulfilled contracts,\nregistrations) of every account allowing users to discard outdated\nhistorical data. address An Ethereum address represents an account. For [EOA](EOAExternally%20Owned%20Account.%20An%20account%20controlled%20by%20a%20private%20key.%20If%20you%20own%20the%20private%20key%20associated%20with%20the%20EOA%20you%20have%20the%20ability%20to%20send%20ether%20and%20messages%20from%20it.%20Contract%20accounts%20also%20have%20an%20address,%20see%20:ref:%60Accounts%60.%20EOAs%20and%20contract%20accounts%20may%20be%20combined%20into%20a%20single%20account%20type%20during%20Serenity.),\nthe address is derived as the last 20 bytes of the public key\ncontrolling the account, e.g.,\ncd2a3d9f938e13cd947ec05abc7fe734df8dd826. This is a\n[hexadecimal](hexadecimalCommon%20representation%20format%20for%20byte%20sequencing.%20Its%20advantage%20is%20that%20values%20are%20represented%20in%20a%20compact%20format%20using%20two%20characters%20per%20byte%20(the%20characters%20%60%60%5B0-9%5D%5Ba-f%5D%60%60).)\nformat (base 16 notation), which is often indicated explicitly by\nappending 0x to the address. Web3.js and console functions accept\naddresses with or without this prefix but for transparency we\nencourage their use. Since each byte of the address is represented\nby 2 hex characters, a prefixed address is 42 characters long.\nSeveral apps and APIs are also meant to implement the new\n[checksum-enabled address\nscheme]( https://github.com/ethereum/EIPs/issues/55 ) introduced in\nthe Mist Ethereum wallet as of version 0.5.0. ether Ether is the name of the currency used within Ethereum. It is used to pay for computations within the EVM. Ambiguously, ether is also\nthe name of a unit in the system; transaction The signed data package that stores a message to be sent from an externally owned account. Simply put, a transaction describes a\ntransfer of information from an EOA to another EOA or a contract\naccount. message A data transfer mechanism contracts use to communicate with other contracts. Messages can also be described as virtual objects that\nare never serialized and exist only in the Ethereum execution\nenvironment. Web3 The exact definition of the Web3 paradigm is still taking form, but it generally refers to the phenomenon of increased connectedness\nbetween all kinds of devices, decentralization of services and\napplications, semantic storage of information online and application\nof artificial intelligence to the web. DAO See Decentralized Autonomous Organization. epoch Epoch is the interval between each regeneration of the DAG used as seed by the PoW algorithm Ethash. The epoch in specified as 30000\nblocks. elliptic curve (cryptography) Refers to an approach to public-key cryptography based on the algebraic structure of elliptic curves over finite fields. See\n[elliptic curve\ncryptography]( https://en.wikipedia.org/wiki/Elliptic_curve_cryptography ). wallet A wallet, in the most generic sense, refers to anything that can store ether or any other crypto token. In the crypto space in\ngeneral, the term wallet is used to mean anything from a single\nprivate/public key pair (like a single paper wallet) all the way to\napplications that manage multiple key pairs, like the Mist Ethereum\nwallet. contract A persistent piece of code on the Ethereum blockchain that encompasses a set of data and executable functions. These functions\nexecute when Ethereum transactions are made to them with certain\ninput parameters. Based on the input parameters, the functions will\nexecute and interact with data within and outside of the contract. suicide See self-destruct. selfdestruct acts as an alias to the deprecated suicide terminology in accordance with [EIP 6 - Renaming SUICIDE\nOPCODE]( https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6.md ). selfdestruct A global variable in the Solidity language that allows you to [\\\"destroy the current contract, sending its funds to the given\naddress\\\"]( https://solidity.readthedocs.org/en/latest/miscellaneous.html#global-variables ).\nselfdestruct acts as an alias to the deprecated suicide terminology\nin accordance with [EIP 6 - Renaming SUICIDE\nOPCODE]( https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6.md ).\nIt frees up space on the blockchain and prevents future execution of\nthe contract. The contract\\'s address will still persist, but ether\nsent to it will be lost forever. The possibility to kill a contract\nhas to be implemented by the contract creator him/herself using the\nSolidity selfdestruct function. transaction fee Also known as gas cost, it is the amount of ether that the miners will charge for the execution of your transaction. mining The process of verifying transactions and contract execution on the Ethereum blockchain in exchange for a reward in ether with the\nmining of every block. mining pool The pooling of resources by miners, who share their processing power over a network, to split the reward equally, according to the amount\nof work they contributed to solving a block. mining reward The amount of cryptographic tokens (in this case ether) that is given to the miner who mined a new block. state Refers to a snapshot of all balances and data at a particular point in time on the blockchain, normally referring to the condition at a\nparticular block. blockchain An ever-extending series of data blocks that grows as new transactions are confirmed as part of a new block. Each new block is\nchained to the existing blockchain by a cryptographic proof-of-work. peer Other computers on the network also running an Ethereum node (Geth) with an exact copy of the blockchain that you have. signing Producing a piece of data from the data to be signed using your private key, to prove that the data originates from you. discovery (peer) The process of \\'gossiping\\' with other nodes in the network to find out the state of other nodes on the network. gas price oracle A helper function of the Geth client that tries to find an appropriate default gas price when sending transactions. light client A client program that allows users in low-capacity environments to still be able to execute and check the execution of transactions\nwithout needing to run a full Ethereum node (Geth). etherbase It is the default name of the account on your node that acts as your primary account. If you do mining, mining rewards will be credited\nto this account. coinbase Coinbase is analogous to etherbase, but is a more generic term for all cryptocurrency platforms. balance The amount of cryptocurrency (in this case) belonging to an account. solidity Solidity is a high-level language whose syntax is similar to that of JavaScript and it is designed to compile to code for the Ethereum\nVirtual Machine. serpent Serpent is a high-level language whose syntax is similar to that of Python and it is designed to compile to code for the Ethereum\nVirtual Machine. EVM Ethereum Virtual Machine, the decentralized computing platform which forms the core of the Ethereum platform. virtual machine In computing, it refers to an emulation of a particular computer     system. peer to peer network A network of computers that are collectively able to perform functionalities normally only possible with centralized,\nserver-based services. decentralization The concept of moving the control and execution of computational processes away from a central entity. distributed hash table A distributed hash table (DHT) is a class of a decentralized distributed system that provides a lookup service similar to a hash\ntable    (key, value) pairs are stored in a DHT, and any participating\nnode can efficiently retrieve the value associated with a given key. NAT Network address translation (NAT) is a methodology of remapping one IP address space into another by modifying network address\ninformation in Internet Protocol (IP) datagram packet headers while\nthey are in transit across a traffic routing device. nonce Number Used Once or Number Once. A nonce, in information technology, is a number generated for a specific use, such as session\nauthentication. Typically, a nonce is some value that varies with\ntime, although a very large random number is sometimes used. In\ngeneral usage, nonce means \\\"for the immediate occasion\\\" or \\\"for\nnow.\\\" In the case of Blockchain Proof of Work scenarios, the hash\nvalue, found by a Miner, matching the network\\'s Difficulty thus\nproving the Block Validity is called Nonce as well. proof-of-work Often seen in its abbreviated form \\\"PoW\\\", it refers to a mathematical value that can act as the proof of having solved a\nresource and time consuming computational problem. proof-of-stake An alternative method of mining blocks that require miners to demonstrate their possession of a certain amount of the currency of\nthe network in question. This works on the principle that miners\nwill be disincentivized to try to undermine a network in which they\nhave a stake. PoS is less wasteful than PoW, but is still often used\ntogether with it to provide added security to the network. CASPER Casper is a security-deposit based economic consensus protocol. This means that nodes, so called \\\"bonded validators\\\", have to place a\nsecurity deposit (an action we call \\\"bonding\\\") in order to serve\nthe consensus by producing blocks. If a validator produces anything\nthat Casper considers \\\"invalid\\\", the deposit is forfeited along\nwith the privilege of participating in the consensus process. consensus The agreement among all nodes in the network about the state of the\nEthereum network. homestead Homestead is the second major version release of the Ethereum platform. Homestead includes several protocol changes and a\nnetworking change that makes possible further network upgrades:\n[EIP-2 Main homestead hardfork\nchanges]( https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2.mediawiki );\n[EIP-7 Hardfork EVM update\n(DELEGATECALL)]( https://github.com/ethereum/EIPs/blob/master/EIPS/eip-7.md );\n[EIP-8 devp2p forward\ncompatibility]( https://github.com/ethereum/EIPs/blob/master/EIPS/eip-8.md ).\nHomestead will launch when block 1,150,000 is reached on the\nMainnet. On the Testnet, Homestead will launch at block 494,000. metropolis The third stage of Ethereum\\'s release. This is the stage when the user interfaces come out (e.g. Mist), including a dapp store, and\nnon-technical users should feel comfortable joining at this point. serenity The fourth stage of Ethereum\\'s release. This is when things are going to get fancy    the network is going to change its mining\nprocess from Proof-of-Work to Proof-of-Stake. frontier Ethereum was planned to be released in four major steps with Frontier being the name for the first phase. The Frontier release\nwent live on July 30th, 2015. The command line Frontier phase was\nmainly meant to get mining operations going with the full reward of\n5 ether per block and also to promote the emergence of ether\nexchanges. Frontier surpassed earlier modest expectations and has\nnurtured tremendous growth of the ecosystem. olympic The Frontier pre-release, which launched on May 9th 2015. It was meant for developers to help test the limits of the Ethereum\nblockchain. morden Morden is the first Ethereum alternative testnet. It is expected to continue throughout the Frontier and Homestead era. testnet A mirror network of the production Ethereum network that is meant\nfor testing. See Morden. private chain A fully private blockchain is a blockchain where write permissions are kept centralized to one organization. consortium chain A blockchain where the consensus process is controlled by a pre-selected set of nodes. micropayment A micropayment is a financial transaction involving a very small sum of money (\\ 1 USD) and usually one that occurs online. sharding The splitting of the space of possible accounts (contracts are accounts too) into subspaces, for example, based on first digits of\ntheir numerical addresses. This allows for contract executions to be\nexecuted within \\'shards\\' instead of network wide, allowing for\nfaster transactions and greater scalability. hash A cryptographic function which takes an input (or \\'message\\') and returns a fixed-size alphanumeric string, which is called the hash\nvalue (sometimes called a message digest, a digital fingerprint, a\ndigest or a checksum). A hash function (or hash algorithm) is a\nprocess by which a document (i.e. a piece of data or file) is\nprocessed into a small piece of data (usually 32 bytes) which looks\ncompletely random, and from which no meaningful data can be\nrecovered about the document, but which has the important property\nthat the result of hashing one particular document is always the\nsame. Additionally, it is crucially important that it is\ncomputationally infeasible to find two documents that have the same\nhash. Generally, changing even one letter in a document will\ncompletely randomize the hash; for example, the SHA3 hash of\n\\\"Saturday\\\" is\nc38bbc8e93c09f6ed3fe39b5135da91ad1a99d397ef16948606cdcbd14929f9d,\nwhereas the SHA3 hash of \\\"Caturday\\\" is\nb4013c0eed56d5a0b448b02ec1d10dd18c1b3832068fbbdc65b98fa9b14b6dbf.\nHashes are usually used as a way of creating a globally agreed-upon\nidentifier for a particular document that cannot be forged. crypto-fuel Similar to \\'gas\\', referring to the amount of cryptocurrency\nrequired to power a transaction. cryptoeconomics The economics of cryptocurrencies. protocol A standard used to define a method of exchanging data over a\ncomputer network. block validation The checking of the coherence of the cryptographic signature of the block with the history stored in the entire blockchain. blocktime The average time interval between the mining of two blocks. network hashrate The number of hash calculations the network can make per second\ncollectively. hashrate The number of hash calculations made per second. serialization The process of converting a data structure into a sequence of bytes. Ethereum internally uses an encoding format called recursive-length\nprefix encoding (RLP), described in the [RLP section of the\nwiki]( https://github.com/ethereum/wiki/wiki/RLP ). double spend A deliberate blockchain fork, where a user with a large amount of mining power sends a transaction to purchase some produce, then\nafter receiving the product creates another transaction sending the\nsame coins to themselves. The attacker then creates a block, at the\nsame level as the block containing the original transaction but\ncontaining the second transaction instead, and starts mining on the\nfork. If the attacker has more than 50% of all mining power, the\ndouble spend is guaranteed to succeed eventually at any block depth.\nBelow 50%, there is some probability of success, but it is usually\nonly substantial at a depth up to about 2-5; for this reason, most\ncryptocurrency exchanges, gambling sites and financial services wait\nuntil six blocks have been produced (\\\"six confirmations\\\") before\naccepting a payment. SPV client A client that downloads only a small part of the blockchain, allowing users of low-power or low-storage hardware like smartphones\nand laptops to maintain almost the same guarantee of security by\nsometimes selectively downloading small parts of the state without\nneeding to spend megabytes of bandwidth and gigabytes of storage on\nfull blockchain validation and maintenance. See light client. uncle Uncles are blockchain blocks found by a miner, when a different miner has already found another block for the corresponding place in\nthe blockchain. They are called \\\"stale blocks\\\". The parent of an\nUncle is an ancestor of the inserting block, located at the tip of\nthe blockchain. In contrast to the Bitcoin network, Ethereum rewards\nstale blocks as well in order to avoid to penalize miners with a bad\nconnection to the network. This is less critical in the Bitcoin\nnetwork, because the Block Time there is much higher (\\~10 minutes)\nthan on the Ethereum network (aimed to \\~15 seconds). GHOST Greedy Heaviest-Observed Sub-Tree is an alternative chain-selection method that is designed to incentivize stale blocks (uncles) as\nwell, thus reducing the incentive for pool mining. In GHOST, even\nthe confirmation given by stale blocks to previous blocks are\nconsidered valid, and the miners of the stale blocks are also\nrewarded with a mining reward. merkle patricia tree Merkle Patricia trees provide a cryptographically authenticated data structure that can be used to store all (key, value) bindings. They\nare fully deterministic, meaning that a Patricia tree with the same\n(key,value) bindings is guaranteed to be exactly the same down to\nthe last byte and therefore have the same root hash, provide\nO(log(n)) efficiency for inserts, lookups and deletes, and are much\neasier to understand and code than more complex comparison-based\nalternatives like red-black trees. DAG DAG stands for Directed Acyclic Graph. It is a graph, a set of nodes and links between nodes, that has very special properties. Ethereum\nuses a DAG in Ethash, the Ethereum Proof of Work (POW) algorithm.The\nEthash DAG takes a long time to be generated, which is done by a\nMiner node into a cache file for each Epoch. The file data is then\nused when a value from this graph is required by the algorithm. uncle rate The number of uncles produced per block. issuance The minting and granting of new cryptocurrency to a miner who has\nfound a new block. presale Sale of cryptocurrency before the actual launch of the network. static node A feature supported by Geth, the Golang Ethereum client, which makes it possible to always connect to specific peers. Static nodes are\nre-connected on disconnects. For details, see the [section on\nstatic nodes \\ cr-static-nodes>]{role=\\\"ref\\\"}. bootnode The nodes which can be used to initiate the discovery process when running a node. The endpoints of these nodes are recorded in the\nEthereum source code. exchange An online marketplace which facilitates the exchange of crypto or fiat currencies based on the market exchange rate. compiler A program that translates pieces of code written in high level languages into low level executable code. genesis block The first block in a blockchain. network id A number which identifies a particular version of the Ethereum\nnetwork. block header The data in a block which is unique to its content and the circumstances in which it was created. It includes the hash of the\nprevious block\\'s header, the version of the software the block is\nmined with, the timestamp and the merkle root hash of the contents\nof the block. pending transaction A transaction that is not yet confirmed by the Ethereum network. block propagation The process of transmitting a confirmed block to all other nodes in\nthe network. sidechain A blockchain that branches off a main blockchain and checks in periodically with the main blockchain. Besides that it runs\nindependently from the main chain, and any security compromises in\nthe sidechain will not affect the main chain. pegging Locking down the exchange rate of the coins/tokens in two chains (usually a main and a side chain) in a certain direction. 2-way pegging Locking down the exchange rate of the coins/tokens in two chains (usually a main and a side chain) in both directions. trustless Refers to the ability of a network to trustworthily mediate transactions without any of the involved parties needing to trust\nanyone else. faucet A website that dispenses (normally testnet) cryptocurrencies for free. checksum A count of the number of bits in a transmission that is included with the unit so that the receiving end can verify that the entirety\nof the message has been transmitted. ICAP Interexchange Client Address Protocol, an IBAN-compatible system for referencing and transacting to client accounts aimed to streamline\nthe process of transferring funds, worry-free between exchanges and,\nultimately, making KYC and AML concerns a thing of the past. private key A private key is a string of characters known only to the owner, that is paired with a public key to set off algorithms for text\nencryption and decryption. public key A string of characters derived from a private key that can be made public. The public key can be used to verify the authenticity of any\nsignature created using the private key. encryption Encryption is the conversion of electronic data into a form unreadable by anyone except the owner of the correct decryption key.\nIt can further be described as a process by which a document\n(plaintext) is combined with a shorter string of data, called a key\n(e.g.\nc85ef7d79691fe79573b1a7064c19c1a9819ebdbd1faaab1a8ec92344438aaf4),\nto produce an output (ciphertext) which can be \\\"decrypted\\\" back\ninto the original plaintext by someone else who has the key, but\nwhich is incomprehensible and computationally infeasible to decrypt\nfor anyone who does not have the key. digital signature A mathematical scheme for demonstrating the authenticity of a digital message or documents. port A network port is a communication endpoint used by a one of the existing standards of establishing a network conversation (e.g. TCP,\nUDP). RPC Remote Procedure Call, a protocol that a program uses to request a service from a program located in another computer in a network\nwithout having to understand the network details. IPC Interprocess communication (IPC) is a set of programming interfaces that allow a programmer to coordinate activities among different\nprogram processes that can run concurrently in an operating system. attach The command used to initiate the Ethereum Javascript console. daemon A computer program that runs as a background process instead of in direct control by an interactive user. system service See base layer service base layer service Services such as SWARM and Whisper which are built into the Ethereum platform. js Javascript. syncing The process of downloading the entire blockchain. fast sync Instead of processing the entire block-chain one link at a time, and replay all transactions that ever happened in history, fast syncing\ndownloads the transaction receipts along the blocks, and pulls an\nentire recent state database. ASIC Application-specific integrated circuit, in this case referring to an integrated circuit custom built for cryptocurrency mining. memory-hard Memory hard functions are processes that experience a drastic decrease in speed or feasibility when the amount of available memory\neven slightly decreases. keyfile Every account\\'s private key/address pair exists as a single keyfile. These are JSON text files which contains the encrypted\nprivate key of the account, which can only be decrypted with the\npassword entered during account creation. ICAP format The format of the IBANs defined using the [Inter-exchange Client Address Protocol]( https://github.com/ethereumjs/ethereumjs-icap ). block(chain) explorer A website that allows easy searching and extraction of data from the blockchain. geth Ethereum client implemented in the Golang programming language, based on the protocol as defined in the Ethereum Yellow Paper. eth Ethereum client implemented in the C++ programming language, based on the protocol as defined in the Ethereum Yellow Paper. ethereumjs Ethereum client implemented in the Javascript/Node programming language, based on the protocol as defined in the Ethereum Yellow\nPaper. pyethereum Ethereum client implemented in the Python programming language, based on the protocol as defined in the Ethereum Yellow Paper. ethereumj Ethereum client implemented in the Java programming language, based on the protocol as defined in the Ethereum Yellow Paper. ethereumh Ethereum client implemented in the Haskell programming language, based on the protocol as defined in the Ethereum Yellow Paper. parity Ethereum client implemented in the Rust programming language, based on the protocol as defined in the Ethereum Yellow Paper. difficulty In very general terms, the amount of effort required to mine a new block. With the launch of Homestead, the [difficulty adjustment\nalgorithm will\nchange]( https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2.md ). account Accounts are a central part of the Ethereum network and are an essential part of any transaction or contract. In Ethereum, there\nare two types of accounts    Externally Owned accounts (EOA) and\nContract accounts. HLL (obsolete) Acronym for Higher Level Language, which is what Serpent and Solidity are. HLL is what early \u00d0app developers called Ethereum\nprogramming languages that did not touch the low level elements.\nThis phrase has been phased out. CLL (obsolete) Acronym for C Like Language, which Mutan was. This acronym has been phased out.\" ES1, ES2, and ES3 (obsolete) \\\"Ethereum Script\\\" versions 1,2 and 3. There were early versions of what would become the Ethereum Virtual Machine (EVM). log event Contracts are triggered by transactions executed as part of the block verification. If conceived of as a function call, contract\nexecution is asynchronous, and therefore they have no return value.\nInstead contracts communicate to the outside world with log events.\nThe log events are part of the transaction receipt which is produced\nwhen the transaction is executed. The receipts are stored in the\nreceipt trie, the integrity of which is guaranteed by the fact that\nthe current root of the receipt trie is part of the block header\nalongside the roots of state and state-trie. In a broad sense from\nthe external perspective receipts are part of the Ethereum system\nstate except that they are not readable contracts internally.", 
            "title": "\u8bcd\u6c47\u8868"
        }, 
        {
            "location": "/about/", 
            "text": "\u5bb6\u56ed\u7248\u6587\u6863\u5021\u8bae\n\n\n\n\n\u76ee\u7684\u548c\u542c\u4f17\n\n\n\u672c\u6307\u5357\u5e94\u8be5\u6210\u4e3a\u6240\u6709\u4ee5\u592a\u574a\u7528\u6237\u548c\u5f00\u53d1\u4eba\u5458\u7684\u5165\u95e8\u7ea7\u624b\u518c\u3002\n\u6211\u4eec\u7684\u76ee\u6807\u662f\u521b\u5efa\u5305\u542b\u7b80\u77ed\u7684\u6559\u7a0b\u548c\u8303\u4f8b\u4fe1\u606f\u7684\u6587\u6863\uff0c\u8fd9\u4e9b\u8303\u4f8b\u5c06\u6db5\u76d6\u4f7f\u7528\u4ee5\u592a\u574a\u4e0edapps\u4ea4\u4e92\u6216\u5f00\u53d1dapp\u7684\u6240\u6709\u57fa\u672c\u548c\u4e2d\u95f4\u529f\u80fd\u3002\n\n\n\u4efb\u4f55\u8fc7\u4e8e\u5177\u4f53\uff0c\u6280\u672f\u6027\u6216\u8005\u4e0d\u662f\u5b8c\u6210\u672c\u6587\u6863\u76ee\u7684\u6240\u9700\u7684\u4fe1\u606f\u90fd\u5c06\u7559\u5728\u4ee5\u592a\u574aGithub\u7ef4\u57fa\u9875\u4e0a\u3002\n\u5982\u6709\u5fc5\u8981\uff0c\u53ef\u80fd\u4f1a\u5728\u672c\u6307\u5357\u4e2d\u5f15\u7528\u3002\n\n\n\u5c3d\u7ba1\u201c\u8fb9\u7586\u6307\u5357\u201d\u548c\u201c\u5bb6\u56ed\u6307\u5357\u201d\u4e2d\u7684\u8bb8\u591a\u4fe1\u606f\u90fd\u662f\u76f8\u4f3c\u7684\uff0c\u4f46\u4ecd\u9700\u8981\u52aa\u529b\u786e\u4fdd\u79fb\u4ea4\u7684\u4fe1\u606f\u4ecd\u7136\u51c6\u786e\u65e0\u8bef\u3002\n\u672c\u6587\u6863\u662f\u5ba2\u6237\u7aef\u4e0d\u53ef\u77e5\u8bba\u8005\uff0c\u53ea\u8981\u533a\u5206\u793a\u4f8b/\u6559\u7a0b\u4e2d\u4f7f\u7528\u7684\u5ba2\u6237\u7aef\uff0c\u793a\u4f8b\u548c\u6559\u7a0b\u53ef\u4ee5\u57fa\u4e8e\u4f5c\u8005\u51b3\u5b9a\u5199\u5165\u7684\u4efb\u4f55\u5ba2\u6237\u7aef\u3002\n\n\n\u867d\u7136\u672c\u6307\u5357\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u4e2d\u4e0d\u5305\u542b\u8fc7\u4e8e\u5177\u4f53\u7684\u6280\u672f\u6587\u6863\uff0c\u4f46\u672c\u6307\u5357\u7684\u793e\u533a\u4f7f\u7528\u548c\u666e\u53ca\u5c06\u51b3\u5b9a\u5c06Github\u7ef4\u57fa\u6587\u6863\u8f6c\u6362\u4e3a\u6b64\u683c\u5f0f\u7684\u672a\u6765\u51b3\u7b56\u3002\n\n\n\u8fc7\u4e8e\u5177\u4f53\u548c\u6280\u672f\u6587\u4ef6\u7684\u4f8b\u5b50\u5305\u62ec\uff1a\n\n\n\n\nETHash\uff0cCASPER\uff0cABI\uff0cRLP\u6216\u5176\u4ed6\u6280\u672f\u89c4\u683c\u3002\n\n\n\u534f\u8bae\u7684\u5b8c\u6574API\u89c4\u8303\u3002 \u8b66\u544a\uff1a\u5982\u679c\u4e00\u4e2a\u4f8b\u5b50\uff0c \u62a5\u9053, \u6216\u8005\u6559\u7a0b\u9700\u8981\u5f15\u7528\u5ba2\u6237\u7aef\u6216\u63a5\u53e3\u7684API\u8c03\u7528\u4ee5\u5b8c\u6210\u5176\u793a\u4f8b\uff0c\u5219\u53ef\u4ee5\u5f15\u7528\u7279\u5b9a\u7684\u8c03\u7528\u3002 \u8bf7\u52a1\u5fc5\u5728\u7528\u6237\u53ef\u4ee5\u627e\u5230GitHub Wiki\u4e0a\u7684\u7279\u5b9a\u6587\u6863\u7684\u5176\u4f59\u90e8\u5206\u65f6\u63d0\u4f9b\u53c2\u8003\u3002\n\n\n\n\n\u793a\u8303\u6027\u6587\u4ef6\u8d44\u6e90\n\n\n\u4ee5\u4e0b\u662f\u4ee5\u592a\u574a\u6587\u6863\u7684\u4e00\u4e9b\u4f8b\u5b50+\u6587\u6863\u7684\u597d\u4f8b\u5b50\u3002\n\n\n\n\n\u56fa\u4f53\u6587\u4ef6\n\n\n\u8fb9\u5883\u6307\u5357\n\n\nGav\u7684TurboEthereum\u6307\u5357\n\n\n\u53e4\u4ee3\u4ee5\u592a\u574a\u5efa\u9020\u8005\u6307\u5357\n\n\n\u5176\u4ed6\u4ee5\u592a\u574a\u94fe\u63a5\n\n\nDjango\u6587\u6863\n\n\n\n\n\u91cd\u7ec4\u6587\u672c\u6807\u8bb0, Sphinx\n\n\n\n\n\u6700\u597d\u7684\u5907\u5fd8\u5f55\n\n\n\u5feb\u901f\u53c2\u8003\n\n\n\u5b98\u65b9\u5907\u5fd8\u5f55\n \nhtml\n\n\nRST \u521d\u7ea7\u8bfb\u672c\n\n\nsphinx\u6587\u6863\n\n\n\n\n\u7f16\u8bd1\u548c\u90e8\u7f72\n\n\n\u6211\u4eec\u4f7f\u7528make\u548c\u81ea\u52a8\u751f\u6210\u7684read-the-docs Makefile\u6765\u6784\u5efa\u6587\u6863\u3002\n\n\ngit clone https://github.com/ethereum/homestead-guide\n\ncd\n homestead-guide\nmake html\n\n\n\n\n\u5904\u7406\u6280\u5de7\n\n\n\u4fee\u6b63\u5206\u9694\u7b26\u884c\uff08\u603b\u662f\u4f7f\u7528\u957f\u5ea6\u4e3a80\u7684\u957f\u5ea6\u4e3a\u6b63\u786e\u7684\u957f\u5ea6\uff0c\u9664\u975e\u6807\u9898\u7684\u957f\u5ea6\u5927\u4e8e80\u4e2a\u5b57\u7b26\uff09\n\n\nfor\n f in \n`\nls source/*/*.rst\n`\n;\n \ndo\n cat \n$f\n|\nperl -pe \ns/\\=+$/================================================================================/\n \n \n$f\n.o\n;\n mv \n$f\n.o \n$f\n;\n \ndone\n;\n \ndone\n\n\nfor\n f in \n`\nls source/*/*.rst\n`\n;\n \ndo\n cat \n$f\n|\nperl -pe \ns/\\*+$/********************************************************************************/\n \n \n$f\n.o\n;\n mv \n$f\n.o \n$f\n;\n \ndone\n\n\nfor\n f in \n`\nls source/*/*.rst\n`\n;\n \ndo\n cat \n$f\n|\nperl -pe \ns/\\-+$/--------------------------------------------------------------------------------/\n \n \n$f\n.o\n;\n mv \n$f\n.o \n$f\n;\n \ndone\n\n\nfor\n f in \n`\nls source/*/*.rst\n`\n;\n \ndo\n cat \n$f\n|\nperl -pe \ns/\\++$/++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++/\n \n \n$f\n.o\n;\n mv \n$f\n.o \n$f\n;\n \ndone\n\n\nfor\n f in \n`\nls source/*/*.rst\n`\n;\n \ndo\n cat \n$f\n|\nperl -pe \ns/\\#+$/################################################################################/\n \n \n$f\n.o\n;\n mv \n$f\n.o \n$f\n;\n \ndone\n\n\n\n\n\n\u5f15\u7528\u65e7\u7684\u6587\u6863\n\n\nold-docs-for-reference\u6587\u4ef6\u5939\u5305\u542bFrontier Gitbook\u548cEthereum Wiki\u6587\u6863\u3002 \u968f\u610f\u4ece\u8fd9\u4e9b\u4ecd\u7136\u76f8\u5173\u7684\u6587\u4ef6\u590d\u5236/\u7c98\u8d34\u4fe1\u606f\u3002\n\n\n\u4f7f\u7528Pando\u8fc1\u79fb\u548c\u8f6c\u6362\u65e7Wiki\u5185\u5bb9\n\n\n\u5982\u679c\u4f60\u4ecd\u7136\u60f3\u514b\u9686\u6700\u65b0\u7684\u4ee5\u592a\u574aWiki\u548cFrontier Guide\u6587\u6863\uff1a\n\n\ngit clone git@github.com:ethereum/go-ethereum.wiki.git\ngit clone git@github.com:ethereum/wiki.wiki.git\n\nmkdir main-wiki.rst\nmkdir go-ethereum-wiki.rst\n\n\nfor\n f in \n`\nls wiki.wiki/*.md\n`\n;\n \ndo\n pandoc \n$f\n -o main-wiki.rst/\n`\nbasename \n$f\n .md\n`\n.rst\n;\n \ndone\n\n\nfor\n f in \n`\nls go-ethereum.wiki/*.md\n`\n;\n \ndo\n pandoc \n$f\n -o go-ethereum-wiki.rst/\n`\nbasename \n$f\n .md\n`\n.rst\n;\n \ndone", 
            "title": "\u5173\u4e8e"
        }, 
        {
            "location": "/about/#_1", 
            "text": "", 
            "title": "\u5bb6\u56ed\u7248\u6587\u6863\u5021\u8bae"
        }, 
        {
            "location": "/about/#_2", 
            "text": "\u672c\u6307\u5357\u5e94\u8be5\u6210\u4e3a\u6240\u6709\u4ee5\u592a\u574a\u7528\u6237\u548c\u5f00\u53d1\u4eba\u5458\u7684\u5165\u95e8\u7ea7\u624b\u518c\u3002\n\u6211\u4eec\u7684\u76ee\u6807\u662f\u521b\u5efa\u5305\u542b\u7b80\u77ed\u7684\u6559\u7a0b\u548c\u8303\u4f8b\u4fe1\u606f\u7684\u6587\u6863\uff0c\u8fd9\u4e9b\u8303\u4f8b\u5c06\u6db5\u76d6\u4f7f\u7528\u4ee5\u592a\u574a\u4e0edapps\u4ea4\u4e92\u6216\u5f00\u53d1dapp\u7684\u6240\u6709\u57fa\u672c\u548c\u4e2d\u95f4\u529f\u80fd\u3002  \u4efb\u4f55\u8fc7\u4e8e\u5177\u4f53\uff0c\u6280\u672f\u6027\u6216\u8005\u4e0d\u662f\u5b8c\u6210\u672c\u6587\u6863\u76ee\u7684\u6240\u9700\u7684\u4fe1\u606f\u90fd\u5c06\u7559\u5728\u4ee5\u592a\u574aGithub\u7ef4\u57fa\u9875\u4e0a\u3002\n\u5982\u6709\u5fc5\u8981\uff0c\u53ef\u80fd\u4f1a\u5728\u672c\u6307\u5357\u4e2d\u5f15\u7528\u3002  \u5c3d\u7ba1\u201c\u8fb9\u7586\u6307\u5357\u201d\u548c\u201c\u5bb6\u56ed\u6307\u5357\u201d\u4e2d\u7684\u8bb8\u591a\u4fe1\u606f\u90fd\u662f\u76f8\u4f3c\u7684\uff0c\u4f46\u4ecd\u9700\u8981\u52aa\u529b\u786e\u4fdd\u79fb\u4ea4\u7684\u4fe1\u606f\u4ecd\u7136\u51c6\u786e\u65e0\u8bef\u3002\n\u672c\u6587\u6863\u662f\u5ba2\u6237\u7aef\u4e0d\u53ef\u77e5\u8bba\u8005\uff0c\u53ea\u8981\u533a\u5206\u793a\u4f8b/\u6559\u7a0b\u4e2d\u4f7f\u7528\u7684\u5ba2\u6237\u7aef\uff0c\u793a\u4f8b\u548c\u6559\u7a0b\u53ef\u4ee5\u57fa\u4e8e\u4f5c\u8005\u51b3\u5b9a\u5199\u5165\u7684\u4efb\u4f55\u5ba2\u6237\u7aef\u3002  \u867d\u7136\u672c\u6307\u5357\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u4e2d\u4e0d\u5305\u542b\u8fc7\u4e8e\u5177\u4f53\u7684\u6280\u672f\u6587\u6863\uff0c\u4f46\u672c\u6307\u5357\u7684\u793e\u533a\u4f7f\u7528\u548c\u666e\u53ca\u5c06\u51b3\u5b9a\u5c06Github\u7ef4\u57fa\u6587\u6863\u8f6c\u6362\u4e3a\u6b64\u683c\u5f0f\u7684\u672a\u6765\u51b3\u7b56\u3002  \u8fc7\u4e8e\u5177\u4f53\u548c\u6280\u672f\u6587\u4ef6\u7684\u4f8b\u5b50\u5305\u62ec\uff1a   ETHash\uff0cCASPER\uff0cABI\uff0cRLP\u6216\u5176\u4ed6\u6280\u672f\u89c4\u683c\u3002  \u534f\u8bae\u7684\u5b8c\u6574API\u89c4\u8303\u3002 \u8b66\u544a\uff1a\u5982\u679c\u4e00\u4e2a\u4f8b\u5b50\uff0c \u62a5\u9053, \u6216\u8005\u6559\u7a0b\u9700\u8981\u5f15\u7528\u5ba2\u6237\u7aef\u6216\u63a5\u53e3\u7684API\u8c03\u7528\u4ee5\u5b8c\u6210\u5176\u793a\u4f8b\uff0c\u5219\u53ef\u4ee5\u5f15\u7528\u7279\u5b9a\u7684\u8c03\u7528\u3002 \u8bf7\u52a1\u5fc5\u5728\u7528\u6237\u53ef\u4ee5\u627e\u5230GitHub Wiki\u4e0a\u7684\u7279\u5b9a\u6587\u6863\u7684\u5176\u4f59\u90e8\u5206\u65f6\u63d0\u4f9b\u53c2\u8003\u3002", 
            "title": "\u76ee\u7684\u548c\u542c\u4f17"
        }, 
        {
            "location": "/about/#_3", 
            "text": "\u4ee5\u4e0b\u662f\u4ee5\u592a\u574a\u6587\u6863\u7684\u4e00\u4e9b\u4f8b\u5b50+\u6587\u6863\u7684\u597d\u4f8b\u5b50\u3002   \u56fa\u4f53\u6587\u4ef6  \u8fb9\u5883\u6307\u5357  Gav\u7684TurboEthereum\u6307\u5357  \u53e4\u4ee3\u4ee5\u592a\u574a\u5efa\u9020\u8005\u6307\u5357  \u5176\u4ed6\u4ee5\u592a\u574a\u94fe\u63a5  Django\u6587\u6863", 
            "title": "\u793a\u8303\u6027\u6587\u4ef6\u8d44\u6e90"
        }, 
        {
            "location": "/about/#sphinx", 
            "text": "\u6700\u597d\u7684\u5907\u5fd8\u5f55  \u5feb\u901f\u53c2\u8003  \u5b98\u65b9\u5907\u5fd8\u5f55   html  RST \u521d\u7ea7\u8bfb\u672c  sphinx\u6587\u6863", 
            "title": "\u91cd\u7ec4\u6587\u672c\u6807\u8bb0, Sphinx"
        }, 
        {
            "location": "/about/#_4", 
            "text": "\u6211\u4eec\u4f7f\u7528make\u548c\u81ea\u52a8\u751f\u6210\u7684read-the-docs Makefile\u6765\u6784\u5efa\u6587\u6863\u3002  git clone https://github.com/ethereum/homestead-guide cd  homestead-guide\nmake html", 
            "title": "\u7f16\u8bd1\u548c\u90e8\u7f72"
        }, 
        {
            "location": "/about/#_5", 
            "text": "\u4fee\u6b63\u5206\u9694\u7b26\u884c\uff08\u603b\u662f\u4f7f\u7528\u957f\u5ea6\u4e3a80\u7684\u957f\u5ea6\u4e3a\u6b63\u786e\u7684\u957f\u5ea6\uff0c\u9664\u975e\u6807\u9898\u7684\u957f\u5ea6\u5927\u4e8e80\u4e2a\u5b57\u7b26\uff09  for  f in  ` ls source/*/*.rst ` ;   do  cat  $f | perl -pe  s/\\=+$/================================================================================/     $f .o ;  mv  $f .o  $f ;   done ;   done  for  f in  ` ls source/*/*.rst ` ;   do  cat  $f | perl -pe  s/\\*+$/********************************************************************************/     $f .o ;  mv  $f .o  $f ;   done  for  f in  ` ls source/*/*.rst ` ;   do  cat  $f | perl -pe  s/\\-+$/--------------------------------------------------------------------------------/     $f .o ;  mv  $f .o  $f ;   done  for  f in  ` ls source/*/*.rst ` ;   do  cat  $f | perl -pe  s/\\++$/++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++/     $f .o ;  mv  $f .o  $f ;   done  for  f in  ` ls source/*/*.rst ` ;   do  cat  $f | perl -pe  s/\\#+$/################################################################################/     $f .o ;  mv  $f .o  $f ;   done", 
            "title": "\u5904\u7406\u6280\u5de7"
        }, 
        {
            "location": "/about/#_6", 
            "text": "old-docs-for-reference\u6587\u4ef6\u5939\u5305\u542bFrontier Gitbook\u548cEthereum Wiki\u6587\u6863\u3002 \u968f\u610f\u4ece\u8fd9\u4e9b\u4ecd\u7136\u76f8\u5173\u7684\u6587\u4ef6\u590d\u5236/\u7c98\u8d34\u4fe1\u606f\u3002", 
            "title": "\u5f15\u7528\u65e7\u7684\u6587\u6863"
        }, 
        {
            "location": "/about/#pandowiki", 
            "text": "\u5982\u679c\u4f60\u4ecd\u7136\u60f3\u514b\u9686\u6700\u65b0\u7684\u4ee5\u592a\u574aWiki\u548cFrontier Guide\u6587\u6863\uff1a  git clone git@github.com:ethereum/go-ethereum.wiki.git\ngit clone git@github.com:ethereum/wiki.wiki.git\n\nmkdir main-wiki.rst\nmkdir go-ethereum-wiki.rst for  f in  ` ls wiki.wiki/*.md ` ;   do  pandoc  $f  -o main-wiki.rst/ ` basename  $f  .md ` .rst ;   done  for  f in  ` ls go-ethereum.wiki/*.md ` ;   do  pandoc  $f  -o go-ethereum-wiki.rst/ ` basename  $f  .md ` .rst ;   done", 
            "title": "\u4f7f\u7528Pando\u8fc1\u79fb\u548c\u8f6c\u6362\u65e7Wiki\u5185\u5bb9"
        }
    ]
}